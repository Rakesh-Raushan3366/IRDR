# Generated by Django 4.2.1 on 2023-07-26 11:17

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '0013_alter_opd_attendance_name_of_rdei'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='profile_storage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sd_final_diagnosis', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_date_of_records', models.DateField(blank=True, null=True)),
                ('sd_date_of_clinical_exam', models.DateField(blank=True, null=True)),
                ('sd_date_of_birth', models.DateField(null=True)),
                ('sd_paitent_id_yes_no', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('sd_paitent_id', models.CharField(blank=True, choices=[('Aadhar card', 'Aadhar card'), ('Driving license', 'Driving license'), ('Voter id', 'Voter id'), ('Rations card', 'Rations card'), ('PAN card', 'PAN card'), ('BPL card', 'BPL card'), ('SECC card', 'SECC card'), ('Aabha Id', 'Aabha Id')], max_length=100, null=True)),
                ('sd_patient_id_no', models.CharField(blank=True, max_length=100, null=True, unique=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_patient_age', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_Patient_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_Father_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_Mother_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_Father_mother_id', models.CharField(blank=True, choices=[('Aadhar card', 'Aadhar card'), ('Driving license', 'Driving license'), ('Voter id', 'Voter id'), ('Rations card', 'Rations card'), ('PAN card', 'PAN card'), ('BPL card', 'BPL card'), ('SECC card', 'SECC card'), ('Aabha Id', 'Aabha Id')], max_length=100, null=True)),
                ('sd_Father_mother_id_no', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_permanent_addr', models.CharField(blank=True, max_length=500, null=True, validators=[django.core.validators.MaxLengthValidator(500)])),
                ('sd_city_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_country_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_dob', models.DateField(blank=True, null=True)),
                ('sd_age', models.CharField(blank=True, max_length=10, null=True, validators=[django.core.validators.MaxLengthValidator(10)])),
                ('sd_Patient_mobile_no', models.PositiveBigIntegerField(blank=True, null=True)),
                ('sd_Father_mobile_no', models.PositiveBigIntegerField(blank=True, null=True)),
                ('sd_Mother_mobile_no', models.PositiveBigIntegerField(null=True, unique=True)),
                ('sd_land_line_number', models.CharField(blank=True, max_length=10, null=True, validators=[django.core.validators.MaxLengthValidator(10)])),
                ('sd_email', models.EmailField(blank=True, max_length=300, null=True)),
                ('sd_religion', models.CharField(blank=True, choices=[('Hindu', 'Hindu'), ('Muslim', 'Muslim'), ('Christian', 'Christian'), ('Sikh', 'Sikh'), ('Others', 'Others')], max_length=100, null=True)),
                ('religion_other', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_cast', models.CharField(blank=True, choices=[('ST', 'ST'), ('SC', 'SC'), ('OBC', 'OBC'), ('General', 'General'), ('Others', 'Others')], max_length=100, null=True)),
                ('cast_other', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_referred_status', models.CharField(blank=True, choices=[('General practitioner', 'General practitioner'), ('Physician', 'Physician'), ('Neurologist', 'Neurologist'), ('Any others', 'Any others')], max_length=100, null=True)),
                ('sd_referred_by', models.CharField(blank=True, max_length=100, null=True)),
                ('sd_referred_by_desc', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', ' Female'), ('Transgender', 'Transgender')], max_length=100, null=True)),
                ('sd_consent_given', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('sd_consent_upload', models.FileField(null=True, upload_to='uploads/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(['pdf'])])),
                ('sd_assent_given', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('sd_assent_upload', models.FileField(blank=True, null=True, upload_to='uploads/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(['pdf'])])),
                ('sd_hospital_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_hospital_reg_no', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_icmr_unique_no', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('quality_status', models.CharField(blank=True, choices=[('Pending', 'Pending'), ('Resubmitted', 'Resubmitted'), ('Completed', 'Completed')], max_length=20, null=True)),
                ('quality_result', models.CharField(blank=True, choices=[('Pass', 'Pass'), ('Fail', 'Fail')], max_length=10, null=True)),
                ('quality_reason', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('uniqueId', models.CharField(blank=True, max_length=500, null=True)),
                ('complete', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Na', 'Na')], default='No', max_length=10, null=True)),
                ('qa_register', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='qa_register_storage', to='account.register')),
                ('qa_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='qa_user_storage', to=settings.AUTH_USER_MODEL)),
                ('register', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.register')),
                ('sd_district', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.district')),
                ('sd_state', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.state')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='demographic_storage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sd_Patient_education', models.CharField(blank=True, choices=[('No formal education', 'No formal education'), ('Less than primary school', 'Less than primary school'), ('High school', 'High school'), ('Secondary school', 'Secondary school'), ('College/Pre-university', 'College/Pre-university'), ('Post graduate degree ', 'Post graduate degree ')], max_length=100, null=True)),
                ('sd_Patient_occupation', models.CharField(blank=True, choices=[('Unemployed', 'Unemployed'), ('Government Service', 'Government Service'), ('Private Service', 'Private Service'), ('Housewife', 'Housewife'), ('Agriculture', 'Agriculture'), ('Business', 'Business'), ('Daily labor', 'Daily labor'), ('Student', 'Student'), ('Others (Specify)', 'Others (Specify)')], max_length=200, null=True)),
                ('sd_Father_education', models.CharField(blank=True, choices=[('No formal education', 'No formal education'), ('Less than primary school', 'Less than primary school'), ('High school', 'High school'), ('Secondary school', 'Secondary school'), ('College/Pre-university', 'College/Pre-university'), ('Post graduate degree ', 'Post graduate degree ')], max_length=100, null=True)),
                ('sd_Father_occupation', models.CharField(blank=True, choices=[('Unemployed', 'Unemployed'), ('Government Service', 'Government Service'), ('Private Service', 'Private Service'), ('Housewife', 'Housewife'), ('Agriculture', 'Agriculture'), ('Business', 'Business'), ('Daily labor', 'Daily labor'), ('Student', 'Student'), ('Others (Specify)', 'Others (Specify)')], max_length=200, null=True)),
                ('sd_Mother_education', models.CharField(blank=True, choices=[('No formal education', 'No formal education'), ('Less than primary school', 'Less than primary school'), ('High school', 'High school'), ('Secondary school', 'Secondary school'), ('College/Pre-university', 'College/Pre-university'), ('Post graduate degree ', 'Post graduate degree ')], max_length=100, null=True)),
                ('sd_Mother_occupation', models.CharField(blank=True, choices=[('Unemployed', 'Unemployed'), ('Government Service', 'Government Service'), ('Private Service', 'Private Service'), ('Housewife', 'Housewife'), ('Agriculture', 'Agriculture'), ('Business', 'Business'), ('Daily labor', 'Daily labor'), ('Student', 'Student'), ('Others (Specify)', 'Others (Specify)')], max_length=200, null=True)),
                ('sd_Monthly_family_income', models.CharField(blank=True, choices=[('> 126,360', '> 126,360)'), ('63,182 â€“ 126,356)', '63,182 â€“ 126,356)'), ('47,266 â€“ 63,178', '47,266 â€“ 63,178'), ('31,591 - 47,262', '31,591 - 47,262'), ('18,953 - 31,589', '18,953 - 31,589'), ('6,327 - 18,949', '6,327 - 18,949'), ('< 6,323', '< 6,323')], max_length=200, null=True)),
                ('sd_weight_patient', models.CharField(max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('sd_weight_percentile', models.CharField(max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('sd_weight_SD', models.CharField(max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('sd_height_patient', models.CharField(max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('sd_height_percentile', models.CharField(max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('sd_height_SD', models.CharField(max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('sd_Head_circumference_patient', models.CharField(max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('sd_Head_circumference_percentile', models.CharField(max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('sd_Head_circumference_sd', models.CharField(max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('sd_Age_at_onset_of_symptoms_year', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('sd_Age_at_onset_of_symptoms_month', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('sd_Age_at_onset_of_symptoms_day', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('sd_Age_at_onset_of_symptoms_Intrauterine', models.CharField(blank=True, choices=[('1', 'Yes'), ('0', 'No')], max_length=10, null=True)),
                ('sd_Age_at_presentation_year', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('sd_Age_at_presentation_month', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('sd_Age_at_presentation_day', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('sd_Age_at_presentation_Intrauterine', models.CharField(blank=True, choices=[('1', 'Yes'), ('0', 'No')], max_length=10, null=True)),
                ('sd_Age_at_diagnosis_year', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('sd_Age_at_diagnosis_month', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('sd_Age_at_diagnosis_day', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('sd_Age_at_diagnosis_Intrauterine', models.CharField(blank=True, choices=[('1', 'Yes'), ('0', 'No')], max_length=10, null=True)),
                ('sd_Pedigree_to_be_uploaded', models.FileField(blank=True, null=True, upload_to='uploads/%Y/%m/%d/')),
                ('sd_positive_family_history', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('sd_family_history_specify', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_Consanguinity', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Consanguinity_specify', models.CharField(blank=True, max_length=200, null=True)),
                ('sd_Antenatal_Ultrasound', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal')], max_length=100, null=True)),
                ('sd_if_other_specify', models.CharField(blank=True, max_length=200, null=True)),
                ('sd_Polyhydramnios', models.CharField(blank=True, choices=[('Present', 'Present'), ('Absent', 'Absent')], max_length=100, null=True)),
                ('sd_Hydrops', models.CharField(blank=True, choices=[('Present', 'Present'), ('Absent', 'Absent')], max_length=100, null=True)),
                ('sd_Hydrops_specify', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_Type_of_delivery', models.CharField(blank=True, choices=[('cesarean', 'cesarean'), ('Vaginal', 'Vaginal')], max_length=100, null=True)),
                ('sd_Baby_cried_immediately_after_delivery', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('sd_Resuscitation_required', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sk_Resuscitation_specify', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_Resuscitation_ventilation', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('sd_NICU_stay', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('sd_NICU_specify', models.CharField(blank=True, max_length=200, null=True)),
                ('sd_NICU_stay_other', models.CharField(blank=True, max_length=200, null=True)),
                ('sd_Birth_weight', models.FloatField(blank=True, null=True)),
                ('sd_Development_milestones', models.CharField(blank=True, choices=[('Delayed', 'Delayed'), ('Normal', 'Normal')], max_length=100, null=True)),
                ('sd_delayed_Motor', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_delayed_Global', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_delayed_Cognitive', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Abdominal_distentesion', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Increasing_pallor', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Bleeding', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Developmental_Delay', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Neuroregression', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Behavioral_problems', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Hyperactivity', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Psychomotor_arrest', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Seizures', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Seizures_specify', models.CharField(blank=True, choices=[('GTCS', 'GTCS'), ('Partial', 'Partial'), ('Myoclonic', 'Myoclonic'), ('Complex partial ', 'Complex partial ')], max_length=100, null=True)),
                ('sd_On_some_antiepileptics_drugs', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_antiepileptics_specify', models.CharField(blank=True, max_length=200, null=True, validators=[django.core.validators.MaxLengthValidator(200)])),
                ('sd_Decreased_attention_span', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Stiffness', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Poor_feeding', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Choking', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Loss_of_Vision', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Hearing_loss', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Recurrent_persistent_upper_respiratory_symptoms', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('sd_Fractures', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Gait_disturbances', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Speech_disturbances', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Any_surgery', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Surgery', models.CharField(blank=True, choices=[('Splenectomy', 'Splenectomy'), ('Hernia', 'Hernia'), ('other', 'other')], max_length=200, null=True)),
                ('sd_Surgery_age_history', models.CharField(blank=True, max_length=200, null=True, validators=[django.core.validators.MaxLengthValidator(200)])),
                ('sd_Surgery_other_specify', models.CharField(blank=True, max_length=200, null=True, validators=[django.core.validators.MaxLengthValidator(200)])),
                ('sd_Functional_status', models.CharField(blank=True, choices=[('Ambulatory', 'Ambulatory'), ('Wheel chair Bound', 'Wheel chair Bound'), ('Bed ridden', 'Bed ridden'), ('Assisted motor device', 'Assisted motor device')], max_length=200, null=True)),
                ('sd_Head_shape_Abnormal', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Mongolian_spots_at_back', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Ichthyosis', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Stiff_Thick_skin', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Telangiectasia', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Edema', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Hydrops1', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Angiokeratomas', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Exaggerated_startle_reflex', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Hypotonia', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Hypertonia', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Brisk_reflexes', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Hyporeflexia', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Gait_abnormalities', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Opisthotonus', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Dystonia', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Signs_of_raised_ICT', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_IQ_done', models.CharField(blank=True, choices=[('Done', 'Done'), ('Not Done', 'Not Done')], max_length=100, null=True)),
                ('sd_IQ_done_value', models.CharField(blank=True, max_length=200, null=True, validators=[django.core.validators.MaxLengthValidator(200)])),
                ('sd_DQ_done', models.CharField(blank=True, choices=[('Done', 'Done'), ('Not Done', 'Not Done')], max_length=100, null=True)),
                ('sd_DQ_done_value', models.CharField(blank=True, max_length=200, null=True, validators=[django.core.validators.MaxLengthValidator(200)])),
                ('sd_Oculomotor_apraxia', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Saccades', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Corneal_clouding_opacity', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Glaucoma', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Optic_Nerve_atrophy', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Retinal_degeneration_pigmentation', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Cataract', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Squint', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Nystagmus', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Supranuclear_gaze_palsy', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Fundus_abnormal', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Cherry_Red_Spot', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('sd_Pigmentary_changes', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('sd_Cardiovascular_Congestive_Heart_Failure', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Cardiovascular_Cor_Pulomonale', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Respiratory_Enlarged_tonsils', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Respiratory_Sleep_apnea', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Respiratory_Reactive_Airway_Disease', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Respiratory_Dyspnea', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Gastrointestinal_Hepatomegaly', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Hepatomegaly', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_if_yes_size_bcm', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_if_yes_span', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_Consistency', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_if_yes_Consistency', models.CharField(blank=True, choices=[('Soft', 'Soft'), ('Hard', 'Hard'), ('Firm', 'Firm')], max_length=200, null=True)),
                ('sd_if_yes_surface', models.CharField(blank=True, choices=[('Smooth', 'Smooth'), ('Nodular', 'Nodular'), ('Granular', 'Granular')], max_length=200, null=True)),
                ('sd_if_yes_margin', models.CharField(blank=True, choices=[('Sharp', 'Sharp'), ('Rounded', 'Rounded')], max_length=200, null=True)),
                ('sd_Splenomegaly', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_if_Splenomegaly', models.CharField(blank=True, max_length=200, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_Joint_stiffness', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Scoliosis', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Kyphosis_Gibbus', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Genu_valgum', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Pes_Cavus', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Toe_Walking', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Hb', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_WBC_Total_Count', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_Platelet_Count', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_WBC_Differnetial', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_Absolute_neutrophil_counts', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_PT_sec', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_APTT_sec', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_S_calcium_mg_dl', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_S_Phosphorus_mg_dl', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_S_alkaline_phosphatise_IU', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_S_Acid_phosphatise_IU', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_S_Total_protein_g_dl', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_S_Serum_albumin_g_dl', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_SGPT_IU', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_SGOT_IU', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_GGT', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_IRON_mg_dl', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_TIBC_mg_dl', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_Vit_B12_pg_ml', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_Vit_D_ng_ml', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_PTH_ng_ml', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_Radiological_Ultrasonography', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_rad_ultrasonography', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('sd_rad_ultrasono_type', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal'), ('Not Done', 'Not Done')], max_length=10, null=True)),
                ('sd_rad_ultra_finding_ab_specify', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('sd_rad_liversize', models.FloatField(blank=True, null=True)),
                ('sd_rad_liverEchotexture', models.CharField(blank=True, max_length=10, null=True)),
                ('sd_rad_Kidney', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('sd_rad_hepatic', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('sd_rad_kidney_size', models.IntegerField(blank=True, null=True)),
                ('sd_rad_spleen_size', models.FloatField(blank=True, null=True)),
                ('sd_rad_Echotexture', models.FloatField(blank=True, null=True)),
                ('sd_rad_lymphnodes_size', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('sd_rad_portal_vien_dia', models.IntegerField(blank=True, null=True)),
                ('sd_rad_adenoma', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('sd_renal_par_pathalogy', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('sd_renal_par_pathalogy_specify', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('sd_nephrocalcinosis', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('sd_pancreatitis', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('sd_cholethiasis', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('sd_xray_bone_age', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('sd_Echotexture', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('coarse', 'coarse')], max_length=200, null=True)),
                ('sd_Lymph_nodes_enlarged', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Portal_vein_diameter', models.CharField(blank=True, choices=[('> 10 mm', '> 10 mm)'), ('< 10 mm', '< 10 mm')], max_length=200, null=True)),
                ('sd_Any_adrenal_calcifications', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_Skeletal_survey', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Erlenmeyer_flask_deformity', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Osteopenia', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Skeletal_Scoliosis', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Dysostosis_multiplex', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Dexa_Z_Score', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_Neuroimaging_CT_scan', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_CT_scan', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal')], max_length=200, null=True)),
                ('sd_CT_scan_specify', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_MRI_Brain', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal')], max_length=200, null=True)),
                ('cerebral_atrophy', models.BooleanField(default=False)),
                ('hydrocephalus', models.BooleanField(default=False)),
                ('basal_ganglia_hypo', models.BooleanField(default=False)),
                ('hyperintensity', models.BooleanField(default=False)),
                ('thalamic', models.BooleanField(default=False)),
                ('dysmyelination', models.BooleanField(default=False)),
                ('Any_other_MRI', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_abnormal', models.CharField(blank=True, choices=[('cerebral atrophy', 'cerebral atrophy'), ('hydrocephalus', 'hydrocephalus'), ('basal ganglia hypo', 'basal ganglia hypo'), ('hyperintensity', 'hyperintensity'), ('thalamic', 'thalamic'), ('dysmyelination', 'dysmyelination'), ('Any other ', 'Any other ')], max_length=200, null=True)),
                ('sd_MRI_abdomen', models.CharField(blank=True, choices=[('Done', 'Done'), ('Not Done', 'Not Done')], max_length=20, null=True)),
                ('sd_Liver_volume', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_Spleen_volume', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_Gaucher_related_nodules', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_MRI_Spine_limbs_pelvis', models.CharField(blank=True, choices=[('Done', 'Done'), ('Not Done', 'Not Done')], max_length=20, null=True)),
                ('sd_Osteonecrosis', models.BooleanField(default=False)),
                ('sd_Compression_spine_deformity_fractures', models.BooleanField(default=False)),
                ('sd_Marrow_infiltration', models.BooleanField(default=False)),
                ('sd_marrow_Any_other', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_Pulmonary_function_test', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Restrictive', 'Restrictive'), ('Obstructive', 'Obstructive'), ('Not done', 'Not done')], max_length=200, null=True)),
                ('sd_sitting_FEV1', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_sittingFVC', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_Supine_FEV1', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_SupineFVC', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_Echocardiography_test', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal'), ('Not done', 'Not done')], max_length=200, null=True)),
                ('sd_Specify_findings_Cardiomyopathy', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('Cardiomyopathy', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Cardiomyopathy', models.CharField(blank=True, choices=[('Dilated', 'Dilated'), ('Hypertrophic', 'Hypertrophic')], max_length=200, null=True)),
                ('sd_Mention_LVMI', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_Valvular_involvement', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('Valvular_Stenosis_mitral', models.BooleanField(default=False)),
                ('Valvular_Stenosis_tricuspid', models.BooleanField(default=False)),
                ('Valvular_Stenosis_aortic', models.BooleanField(default=False)),
                ('Valvular_Stenosis_pulmonary', models.BooleanField(default=False)),
                ('sd_Valvular_Stenosis', models.CharField(blank=True, choices=[('mitral', 'mitral'), ('tricuspid', 'tricuspid'), ('aortic', 'aortic'), ('pulmonary', 'pulmonary')], max_length=200, null=True)),
                ('sd_Valvular_Regurgitation', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=200, null=True)),
                ('Valvular_Regurgitation_mitral', models.BooleanField(default=False)),
                ('Valvular_Regurgitation_tricuspid', models.BooleanField(default=False)),
                ('Valvular_Regurgitation_aortic', models.BooleanField(default=False)),
                ('Valvular_Regurgitation_pulmonary', models.BooleanField(default=False)),
                ('sd_Ejection_fraction', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_EEG', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal'), ('Not done', 'Not done')], max_length=200, null=True)),
                ('sd_EEG_specify_Findings', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_Sleep_Studies', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal'), ('Not done', 'Not done')], max_length=200, null=True)),
                ('sd_Sleep_Studies_Findings', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_SLIT_lamp_examination', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_VEP', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal'), ('Not done', 'Not done')], max_length=20, null=True)),
                ('sd_ved_specify', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_Opthalmological_Examination', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal'), ('Not done', 'Not done')], max_length=200, null=True)),
                ('sd_Describe_if_abnormal', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_SLIT_Lamp', models.CharField(blank=True, choices=[('Present', 'Present'), ('Absent', 'Absent')], max_length=20, null=True)),
                ('sd_BERA_Audiogram', models.CharField(blank=True, choices=[('Conductive Hearing loss', 'Conductive Hearing loss'), ('Sensorineural Hearing loss', 'Sensorineural Hearing loss'), ('Normal Hearing', 'Normal Hearing')], max_length=200, null=True)),
                ('sd_BERA_Describe_if_abnormal', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_Servirity', models.CharField(blank=True, choices=[('Mild', 'Mild'), ('Mod', 'Mod'), ('Severe', 'Severe'), ('Profound', 'Profound')], max_length=200, null=True)),
                ('sd_Unilat_bilat', models.CharField(blank=True, choices=[('Unilateral', 'Unilateral'), ('Bilateral', 'Bilateral')], max_length=200, null=True)),
                ('sd_Nerve_Conduction_Study', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal'), ('Not done', 'Not done')], max_length=200, null=True)),
                ('sd_Nerve_Describe_if_abnormal', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_Chitrotriosidase_Study', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal'), ('Not done', 'Not done')], max_length=200, null=True)),
                ('sd_Chitrotriosidase_if_abnormal', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('Any_Other_Biomarker', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('Any_Other_Biomarker2', models.CharField(blank=True, choices=[('Done', 'Done'), ('Not done', 'Not done')], max_length=100, null=True)),
                ('sd_Biomarker_if_abnormal', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_Enzyme_assay', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Sample_used', models.CharField(blank=True, choices=[('Whole blood', 'Whole blood'), ('Serum', 'Serum'), ('Plasma', 'Plasma'), ('Leucocyte', ' Leucocyte'), ('Dried Blood Spot', 'Dried Blood Spot'), ('Fibroblast', 'Fibroblast')], max_length=200, null=True)),
                ('sd_Enzyme', models.CharField(blank=True, choices=[('Glucocerebrosidase', 'Glucocerebrosidase'), ('Sphingomyelinase', 'Sphingomyelinase'), ('Beta-galactosidase-1', 'Beta-galactosidase-1'), ('Beta-hexosaminidase A', 'Beta-hexosaminidase A'), ('Beta-hexosaminidase A&B', 'Beta-hexosaminidase A&B'), ('Palmitoyl-Protein thioesterase (PPT)', 'Palmitoyl-Protein thioesterase (PPT)'), ('Tripeptidyl amino peptidase-1 (TPP)', 'Tripeptidyl amino peptidase-1 (TPP)'), ('Arylsulfatase A (ARSA)', 'Arylsulfatase A (ARSA)'), ('Galactosylceramidase', 'Galactosylceramidase'), ('Other', 'Other')], max_length=200, null=True)),
                ('sd_Enzyme_other', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_enzyme_patient_control', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_enzyme_normal_range', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_enzyme_control_range', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_Enzyme_upload', models.FileField(blank=True, null=True, upload_to='uploads/%Y/%m/%d/')),
                ('sd_Causative_DNA_sequence_variat', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_molecular_upload', models.FileField(blank=True, null=True, upload_to='uploads/%Y/%m/%d/')),
                ('sd_Patient_molecular', models.CharField(blank=True, max_length=100, null=True)),
                ('sd_Gene_molecula', models.CharField(blank=True, max_length=100, null=True)),
                ('sd_trans_molecul', models.CharField(blank=True, max_length=100, null=True)),
                ('sd_mul_dna1', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_mul_pro1', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_mul_var1', models.CharField(blank=True, choices=[('Novel', 'Novel '), ('Reported', 'Reported')], max_length=100, null=True)),
                ('sd_mul_zygo1', models.CharField(blank=True, choices=[('Homozygous', 'Homozygous '), ('Heterozygous', 'Heterozygous'), ('Hemizygous', 'Hemizygous')], max_length=100, null=True)),
                ('sd_mul_var_cla1', models.CharField(blank=True, choices=[('Pathogenic ', 'Pathogenic '), ('Likely Pathogenic', 'Likely Pathogenic'), ('Variant of uncertain significance ', 'Variant of uncertain significance')], max_length=100, null=True)),
                ('sd_mul_seg', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('sd_mul_dna2', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_mul_pro2', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_mul_var2', models.CharField(blank=True, choices=[('Novel', 'Novel '), ('Reported', 'Reported')], max_length=100, null=True)),
                ('sd_mul_var_cla2', models.CharField(blank=True, choices=[('Pathogenic ', 'Pathogenic '), ('Likely Pathogenic', 'Likely Pathogenic'), ('Variant of uncertain significance ', 'Variant of uncertain significance')], max_length=100, null=True)),
                ('sd_mul_zygo2', models.CharField(blank=True, choices=[('Homozygous', 'Homozygous '), ('Heterozygous', 'Heterozygous'), ('Hemizygous', 'Hemizygous')], max_length=100, null=True)),
                ('sd_father', models.CharField(blank=True, max_length=100, null=True)),
                ('sd_mother', models.CharField(blank=True, max_length=100, null=True)),
                ('sd_ERT', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Date_of_initiation', models.DateField(blank=True, null=True)),
                ('sd_age_of_start', models.CharField(blank=True, max_length=10, null=True, validators=[django.core.validators.MaxLengthValidator(10)])),
                ('sd_Dosage', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_Duration', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_Adverse_events', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Adverse_events_specify', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_ERT_Status', models.CharField(blank=True, choices=[(' Ongoing', 'Ongoing'), ('Stopped', 'Stopped')], max_length=200, null=True)),
                ('sd_Response_to_therapy', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Any_interruption', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Reason_interruption', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_Duration_interruption', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_Bone_Marrow_Transplantation', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Bone_Marrow_Date', models.DateField(blank=True, null=True)),
                ('sd_Donor', models.CharField(blank=True, choices=[('Related', 'Related'), ('Unrelated', 'Unrelated')], max_length=100, null=True)),
                ('sd_Hospital', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_Response', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Surgery1', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('Surgery_status', models.CharField(blank=True, choices=[('Splenectomy', 'Splenectomy'), ('Hernia', 'Hernia'), ('others', 'others')], max_length=200, null=True)),
                ('Surgery_Splenectomy', models.BooleanField(default=False)),
                ('Surgery_Hernia', models.BooleanField(default=False)),
                ('Surgery_others', models.BooleanField(default=False)),
                ('Surgery_others_text', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_Surgery_age', models.CharField(blank=True, max_length=10, null=True, validators=[django.core.validators.MaxLengthValidator(10)])),
                ('sd_Calcium_and_multivitamin_supplements', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Regular_Physiotherapy', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Antiepileptics', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_Blood_Transfusion', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_BL_freq', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_BL_Trans', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_Platlet_Transfusion', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sd_PL_freq', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_PL_Trans', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('PL_Any_other', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('other_information', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_msst_diagnosis', models.CharField(blank=True, choices=[('Gaze palsy', 'Gaze palsy'), ('Ophthalmology', 'Ophthalmology'), ('Epilepsy', 'Epilepsy'), ('Age at first seizure', 'Age at first seizure'), ('Development/ Cognitive ability)', 'Development/ Cognitive ability)'), ('Ataxia of gait ', 'Ataxia of gait '), ('Cerebellar tremor', 'Cerebellar tremor'), ('Pyramidal', 'Pyramidal'), ('Extrapyramidal', 'Extrapyramidal'), ('Swallowing difficulties/ Oral bulbar function', 'Swallowing difficulties/ Oral bulbar function'), ('Speech', 'Speech'), ('Spinal alignement', 'Spinal alignement')], max_length=100, null=True)),
                ('sd_gaze_palsy', models.FloatField(blank=True, choices=[(0.0, 'Normal (although not likely in diagnosis)(0) '), (0.5, 'Horizontal saccades absent, vertical saccades present (0.5)'), (1.0, 'Horizontal saccades absent, vertical saccades present (1)')], null=True)),
                ('sd_Ophthalmology', models.FloatField(blank=True, choices=[(0.0, 'Normal (although not likely in diagnosis) (0) '), (1.0, 'Cranial nerve palsy (previously corrected or not) (1)'), (2.0, 'Cranial nerve palsy (reappearing despite surgical correction) (2) ')], null=True)),
                ('sd_Epilepsy', models.FloatField(blank=True, choices=[(0.0, 'No seizures  (0)'), (3.0, 'Seizures not requiring anticonvulsants(3) '), (4.0, 'Seizures controlled with anticonvulsants (4)'), (5.0, 'Seizures requiring combination therapy or resistant to anticonvulsants (5)')], null=True)),
                ('sd_Age_seizure', models.FloatField(blank=True, choices=[(3.0, 'Younger than 5 years (3)'), (2.0, '5-10 years (2)'), (1.0, '10-15 years (1)'), (0.0, '16 years or over, or seizure free (0)')], null=True)),
                ('sd_Development_Cognitive_ability', models.FloatField(blank=True, choices=[(0.0, 'Normal (0)'), (1.0, 'Mildly impaired (IQ less than 85 or equivalent) (1)'), (2.0, 'Moderate (IQ 50-57 or equivalent (2)'), (3.0, 'Severe (more than half their chronological age (3)')], null=True)),
                ('sd_Ataxia_of_gait', models.FloatField(blank=True, choices=[(0.0, 'Normal, apparent only on tandem walking (0)'), (1.0, 'Ataxia on straight gait, able to walk without assistance (1)'), (2.0, 'Able to walk only with assistance (2) '), (3.0, 'Unable to walk (3)')], null=True)),
                ('sd_Cerebellar_tremor', models.FloatField(blank=True, choices=[(0.0, 'No intention tremor (0)'), (0.5, 'Intention tremor not affecting function (0.5)'), (1.0, 'Intention tremor with marked impact on function (1)')], null=True)),
                ('sd_Pyramidal', models.FloatField(blank=True, choices=[(0.0, 'No intention tremor (0)'), (2.0, 'Mildly to moderately increased tone and reflexes (2)'), (3.0, 'Increased tone and reflexes with clonus, whether unsustained or sustained (3) '), (5.0, 'Severe spasticity with inability to walk (5)')], null=True)),
                ('sd_Extrapyramidal', models.FloatField(blank=True, choices=[(0.0, 'Normal (0)'), (1.0, 'Variable tone and posturing not impairing function, with or without therapy (1)'), (2.0, 'Variable tone and posturing impairing function, despite therapy (2)'), (3.0, 'Significant rigidity with no/minimal benefit from therapy (3)')], null=True)),
                ('sd_Swallowing_difficulties_Oral_bulbar_function', models.FloatField(blank=True, choices=[(0.0, 'Normal (0)'), (1.0, 'Mild dysphagia (excess drooling) (1)'), (2.0, 'Moderate dysphagia (risk of aspiration, modification to diet required)(2)'), (3.0, 'Severe dysphagia (requiring non-oral feeding) (3)')], null=True)),
                ('sd_Speech', models.FloatField(blank=True, choices=[(0.0, 'Normal (and those too young yet to speak) (0) '), (1.0, 'Mild to moderate dysarthia impairing intelligibility to unfamiliar listener (1)'), (2.0, 'Severe dysarthia with most speech unintelligible to familiar and unfamiliar liste (2)'), (3.0, 'Anarthria (3)')], null=True)),
                ('sd_Spinal_alignement', models.FloatField(blank=True, choices=[(0.0, 'Normal'), (1.0, 'Mild kyphosisâ€“but flexible and not requiring bracing (1)'), (2.0, 'Moderate kyphosisâ€“partially corrected by bracing (2) '), (3.0, 'Severe kyphosisâ€“not corrected by bracing or requiring surgery (3)')], null=True)),
                ('sd_final_score', models.FloatField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_final_diagnosis', models.CharField(blank=True, choices=[('Gaucher Disease type I', 'Gaucher Disease type I'), ('Gaucher Disease type II', 'Gaucher Disease type II'), ('Gaucher Disease type III', 'Gaucher Disease type III'), ('Niemann Pick Disease A', 'Niemann Pick Disease A'), ('Niemann Pick Disease B', 'Niemann Pick Disease B'), ('Niemann Pick Disease C', 'Niemann Pick Disease C'), ('GM1 gangliosidosis', 'GM1 gangliosidosis'), ('GM2 gangliosidosis(Tay Sachs)', 'GM2 gangliosidosis(Tay Sachs)'), ('GM2 gangliosidosis(Sandhoff)', 'GM2 gangliosidosis(Sandhoff)'), ('Metachromatic Leukodystrophy', 'Metachromatic Leukodystrophy'), ('Krabbe Disease', 'Krabbe Disease'), ('Farber Disease', 'Farber Disease'), ('Other', 'Other')], max_length=100, null=True)),
                ('sd_final_diagnosis_other', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_filed_by_DEO_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_clinician_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sd_date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('sd_filled_date', models.DateField(blank=True, null=True)),
                ('sd_Final_Outcome', models.CharField(blank=True, choices=[('Death', 'Death'), ('Alive', 'Alive'), ('Follow up required', 'Follow up required'), ('Unknown', 'Unknown')], max_length=50, null=True)),
                ('sd_death_cause', models.CharField(blank=True, max_length=50, null=True)),
                ('sd_age_timedeath', models.CharField(blank=True, max_length=50, null=True)),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='patient_storage', to='storage.profile_storage')),
                ('register', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.register')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
