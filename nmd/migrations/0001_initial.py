# Generated by Django 4.0.3 on 2023-06-06 10:11

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '0011_opd_attendance_pre_total'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='profile_nmd',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nmd_final_diagnosis', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('nmd_date_of_records', models.DateField(blank=True, null=True)),
                ('nmd_date_of_clinical_exam', models.DateField(blank=True, null=True)),
                ('nmd_date_of_birth', models.DateField(blank=True, null=True)),
                ('nmd_patient_name', models.CharField(max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('nmd_father_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('nmd_mother_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('nmd_paitent_id_yes_no', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('nmd_paitent_id', models.CharField(blank=True, choices=[('Aadhar card', 'Aadhar card'), ('Driving license', 'Driving license'), ('Voter id', 'Voter id'), ('Rations card', 'Rations card'), ('PAN card', 'PAN card'), ('BPL card', 'BPL card'), ('SECC card', 'SECC card'), ('Aabha Id', 'Aabha Id')], max_length=100, null=True)),
                ('nmd_patient_id_no', models.CharField(blank=True, max_length=100, null=True, unique=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('nmd_patient_age', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('nmd_father_mother_id', models.CharField(blank=True, choices=[('Aadhar card', 'Aadhar card'), ('Driving license', 'Driving license'), ('Voter id', 'Voter id'), ('Rations card', 'Rations card'), ('PAN card', 'PAN card'), ('BPL card', 'BPL card'), ('SECC card', 'SECC card'), ('Aabha Id', 'Aabha Id')], max_length=100, null=True)),
                ('nmd_mother_father_no', models.CharField(blank=True, max_length=100, null=True, unique=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('nmd_permanent_addr', models.CharField(blank=True, max_length=500, null=True, validators=[django.core.validators.MaxLengthValidator(500)])),
                ('nmd_city_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('nmd_country_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('nmd_mother_mobile_no', models.PositiveBigIntegerField(null=True, unique=True)),
                ('nmd_father_mobile_no', models.PositiveBigIntegerField(blank=True, null=True)),
                ('nmd_land_line_no', models.PositiveBigIntegerField(blank=True, null=True)),
                ('nmd_email', models.EmailField(blank=True, max_length=300, null=True)),
                ('nmd_religion', models.CharField(blank=True, choices=[('Hindu', 'Hindu'), ('Muslim', 'Muslim'), ('Christian', 'Christian'), ('Sikh', 'Sikh'), ('Others', 'Others')], max_length=100, null=True)),
                ('nmd_caste', models.CharField(blank=True, choices=[('Scheduled caste', 'Scheduled caste'), ('Scheduled tribe', 'Scheduled tribe'), ('Others', 'Others')], max_length=100, null=True)),
                ('nmd_referred_status', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('nmd_referred_by', models.CharField(blank=True, choices=[('General practitioner', 'General practitioner'), ('Physician', 'Physician'), ('Neurologist', 'Neurologist'), ('Any others', 'Any others')], max_length=100, null=True)),
                ('nmd_referred_by_desc', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('nmd_gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', ' Female'), ('Transgender', 'Transgender')], max_length=100, null=True)),
                ('nmd_consent_given', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('nmd_consent_upload', models.FileField(blank=True, null=True, upload_to='uploads/%Y/%m/%d/')),
                ('nmd_assent_given', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('nmd_assent_upload', models.FileField(blank=True, null=True, upload_to='uploads/%Y/%m/%d/')),
                ('nmd_hospital_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('nmd_hospital_reg_no', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('nmd_icmr_unique_no', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('nmd_date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('quality_status', models.CharField(blank=True, choices=[('Pending', 'Pending'), ('Resubmitted', 'Resubmitted'), ('Completed', 'Completed')], max_length=20, null=True)),
                ('quality_result', models.CharField(blank=True, choices=[('Pass', 'Pass'), ('Fail', 'Fail')], max_length=10, null=True)),
                ('quality_reason', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('uniqueId', models.CharField(blank=True, max_length=500, null=True)),
                ('complete', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Na', 'Na')], default='No', max_length=10, null=True)),
                ('nmd_district', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.district', verbose_name=' district')),
                ('nmd_state', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.state', verbose_name=' state')),
                ('qa_register', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='qa_register_nmd', to='account.register')),
                ('qa_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='qa_user_nmd', to=settings.AUTH_USER_MODEL)),
                ('register', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.register')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='spinal_nmd',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(blank=True, choices=[('Male ', 'Male '), ('Female ', 'Female')], max_length=50, null=True)),
                ('born_consanguineous_parents', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('consanguineous_parents_if_yes', models.CharField(blank=True, choices=[('Uncle –niece', 'Uncle –niece'), ('First cousins', 'First cousins'), ('Distant relatives', 'Distant relatives')], max_length=50, null=True)),
                ('familyHistory_sibling_affected', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('familyHistory_sibling_affected_number', models.IntegerField(blank=True, null=True)),
                ('upload_pedegree', models.FileField(blank=True, null=True, upload_to='uploads/%Y/%m/%d/')),
                ('age_first_evaluation', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('age_at_onset', models.IntegerField(blank=True, null=True)),
                ('age_onset_options', models.CharField(blank=True, choices=[('Prenatal / In-utero', 'Prenatal / In-utero'), ('Birth', 'Birth'), ('< 6 months age', '< 6 months age'), ('6 months to 18 months', '6 months to 18 months'), ('18 mo to 36 months', '18 mo to 36 months'), ('>36 months to 20 years', '>36 months to 20 years'), ('> 20 years', '> 20 years')], max_length=50, null=True)),
                ('age_onset_options_yes_no', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('ConditionBirth_cry', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('conditionBirth_feedingDifficulty', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('conditionBirth_RespiratoryDistress', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('conditionBirth_ReceivedOxygen', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('conditionBirth_KeptIncubator', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('arthrogryposisBirth', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('RecurrentLowerRespiratory', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('Scoliosis_sma', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('Kyphosis_sma', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('Contractures', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('HipDislocation', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('Fractures', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('MotorSystemExam_Minipolymyoclonus', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('MotorSystemExam_TongueFasciculations', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('MotorSystemExam_MotorPower_ModifiedMRCgrade', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('MotorSystemExam_UpperLimb_ProximalMuscles', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('MotorSystemExam_UpperLimb_DistalMuscles', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('MotorSystemExam_lowerLimb_ProximalMuscles', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('MotorSystemExam_lowerLimb_DistalMuscles', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('LimbWeakness', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('LimbWeakness_if_yes_UpperLimb_ProximalGrade', models.IntegerField(blank=True, null=True)),
                ('LimbWeakness_if_yes_UpperLimb_DistalGrade', models.IntegerField(blank=True, null=True)),
                ('LimbWeakness_if_yes_LowerLimb_ProximalGrade', models.IntegerField(blank=True, null=True)),
                ('LimbWeakness_if_yes_LowerLimb_DistalGrade', models.IntegerField(blank=True, null=True)),
                ('currentMotor_ability', models.CharField(blank=True, choices=[('Able to sit up self / support', 'Able to sit up self / support'), ('Able to stand by self / support', 'Able to stand by self / support'), ('Able to walk by self / support', 'Able to walk by self / support'), ('Normal walking', 'Normal walking'), ('Can run ', 'Can run '), ('Wheelchair bound', 'Wheelchair bound')], max_length=50, null=True)),
                ('currentMotor_WheelchairBound', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('currentMotor_WheelchairBound_if_yes_age', models.DateField(blank=True, null=True)),
                ('currentMotor_BedBound', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('currentMotor_BedBound_age', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('HMAS', models.CharField(blank=True, choices=[('Done', 'Done'), ('Not Done', 'Not Done')], max_length=50, null=True)),
                ('HMAS_score', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('clinicalDiagnosis_SMA0', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('clinicalDiagnosis_SMA1', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('clinicalDiagnosis_SMA2', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('clinicalDiagnosis_SMA3', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('clinicalDiagnosis_SMA4', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('LaboratoryInvestigation_CK_Level', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('geneticDiagnosis', models.CharField(blank=True, choices=[('Fluorescent quantitative PCR (FQ-PCR)', 'Fluorescent quantitative PCR (FQ-PCR)'), ('Multiplex ligation-dependent probe amplification (MLPA) ', 'Multiplex ligation-dependent probe amplification (MLPA) '), ('PCR-restriction fragment length polymorphism (PCR-RFLP)', 'PCR-restriction fragment length polymorphism (PCR-RFLP)'), ('PCR-denaturing high-performance liquid chromatography (PCR-DHPLC)', 'PCR-denaturing high-performance liquid chromatography (PCR-DHPLC)'), ('Long-range PCR ', 'Long-range PCR '), ('SMN Gene sequencing ', 'SMN Gene sequencing '), ('Chromosomal Micro-array ', 'Chromosomal Micro-array')], max_length=100, null=True)),
                ('NAIP_deletion', models.CharField(blank=True, choices=[('Yes', 'YES'), ('No', 'No'), ('Not Done', 'Not Done')], max_length=100, null=True)),
                ('geneticFindings_gene', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('geneticFindings_Location', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('geneticFindings_Variant', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('geneticFindings_Zygosity', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('geneticFindings_Disease', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('geneticFindings_Inheritance', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('geneticFindings_classification', models.CharField(blank=True, choices=[('Pathogenic ', 'Pathogenic '), ('Likely pathogenic ', 'Likely pathogenic '), ('Uncertain significance ', 'Uncertain significance ')], max_length=100, null=True)),
                ('geneticDiagnosis2', models.CharField(blank=True, choices=[('Homozygous deletion of SMN1 exon 7', 'Homozygous deletion of SMN1 exon 7'), ('Homozygous Deletion of EXON 7 and 8', 'Homozygous Deletion of EXON 7 and 8'), ('Heterozygous Deletion of EXON 7 and 8 with compound heterozygous point mutation', 'Heterozygous Deletion of EXON 7 and 8 with compound heterozygous point mutation'), ('Heterozygous Deletion of EXON 7 and 8 only)', 'Heterozygous Deletion of EXON 7 and 8 only')], max_length=100, null=True)),
                ('final_diagnosis_1', models.CharField(blank=True, choices=[('Infant type (SMAI) [OMIM 253300]', 'Infant type (SMAI) [OMIM 253300]'), ('Intermediate type (SMAII) [OMIM 253500]', 'Intermediate type (SMAII) [OMIM 253500]'), ('Juvenile type (SMAIII) [OMIM 253400]', 'Juvenile type (SMAIII) [OMIM 253400]'), ('Adult type (SMAIV) [OMIM 271150])', 'Adult type (SMAIV) [OMIM 271150]')], max_length=100, null=True)),
                ('genetic_report_upload', models.FileField(blank=True, null=True, upload_to='uploads/%Y/%m/%d/')),
                ('Treatment_RespiratorySupport', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('Treatment_RespiratorySupport_ifyes_BIPAP', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('Treatment_RespiratorySupport_ifyes_IPPR', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('Treatment_RespiratorySupport_ifyes_Ventilation', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('Feeding_Oral', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('Feeding_Nasogastric', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('Feeding_PEG', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('OperatedScoliosis', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('OperatedScoliosis_ifyes_age', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('CurrentPastTreatment_ReceivedNusinersin', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('CurrentPastTreatment_ReceivedNusinersin_if_yes', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('CurrentPastTreatment_ReceivedRisdiplam', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('CurrentPastTreatment_ReceivedRisdiplam_if_yes_age', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('CurrentPastTreatment_ReceivedZolgensma', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('CurrentPastTreatment_ReceivedZolgensma_if_yes_age', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('finalOutcome', models.CharField(blank=True, choices=[('Alive ', 'Alive '), ('Dead', 'Dead')], max_length=50, null=True)),
                ('finalOutcome_if_dead_age', models.DateField(blank=True, null=True)),
                ('finalOutcome_death_place1', models.CharField(blank=True, choices=[('Hospital  ', 'Hospital  '), ('Home', 'Home')], max_length=50, null=True)),
                ('finalOutcome_deathCause', models.CharField(blank=True, choices=[('known ', 'known '), ('Not known', 'Not known')], max_length=50, null=True)),
                ('finalOutcome_deathCause_known', models.CharField(blank=True, choices=[('Respiratory failure  ', 'Respiratory failure  '), ('Aspiration', 'Aspiration')], max_length=50, null=True)),
                ('finalOutcome_death_place2', models.CharField(blank=True, choices=[('Hospital  ', 'Hospital  '), ('Home', 'Home')], max_length=50, null=True)),
                ('carrier_testing_parents', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('prenatal_testing', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('prenatal_testing_if_yes', models.CharField(blank=True, choices=[('MLPA ', 'MLPA '), ('QF-PCR ', 'QF-PCR ')], max_length=50, null=True)),
                ('nmd_date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='spinalnmd', to='nmd.profile_nmd')),
                ('register', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.register')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='limb_gridle_nmd',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('limb_gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female ', 'Female')], max_length=50, null=True)),
                ('evaluation_age', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('limb_symptoms_onset_age', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('limb_born_consanguineous_parents', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('limb_consanguineous_parents_if_yes', models.CharField(blank=True, choices=[('Uncle –niece', 'Uncle –niece'), ('First cousins', 'First cousins'), ('Distant relatives', 'Distant relatives')], max_length=50, null=True)),
                ('MuscleHypertrophy', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('MuscleWasting', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('Contractures_3', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('Contractures_3_yes', models.CharField(blank=True, choices=[('Ankle', 'Ankle'), ('Knee', 'Knee'), ('Hip', 'Hip'), ('Elbow', 'Elbow'), ('Neck ', 'Neck ')], max_length=50, null=True)),
                ('Contractures_3_ankle', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('Contractures_3_knee', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('Contractures_3_hip', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('Contractures_3_elbow', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('Contractures_3_neck', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('limb_weakness', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('limb_weakness_UpperlimbProximal', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('limb_weakness_UpperlimbDistal', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('limb_weakness_LowerlimbProximal', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('limb_weakness_lowerlimbDistal', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('BulbarWeakness', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('BulbarWeakness_if_yes', models.CharField(blank=True, choices=[('Dysphagia', 'Dysphagia'), ('Dysarthria', 'Dysarthria'), ('Nasal regurgitation', 'Nasal regurgitation'), ('Choking', 'Choking')], max_length=50, null=True)),
                ('CardiacSymptoms', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('cardiac_symptoms_options', models.CharField(blank=True, choices=[('Palpitations', 'Palpitations'), ('Exertion induced dyspnoea', 'Exertion induced dyspnoea'), ('Missed beats', 'Missed beats')], max_length=50, null=True)),
                ('RespiratorySymptoms', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('RespiratorySymptoms_options', models.CharField(blank=True, choices=[('Exertion induced dyspnoea', 'Exertion induced dyspnoea'), ('Orthopnoea', 'Orthopnoea'), ('Breathlessness', 'Breathlessness')], max_length=50, null=True)),
                ('InheritancePattern', models.CharField(blank=True, choices=[('Autosomal dominant', 'Autosomal dominant'), ('Autosomal recessive', 'Autosomal recessive'), ('X-linked recessive', 'Missed beats'), ('X-linked Dominant', 'X-linked Dominant')], max_length=50, null=True)),
                ('PositiveFamilyHistory', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('PositiveFamilyHistory_SiblingsAffected', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('PositiveFamilyHistory_SiblingsAffected_number', models.IntegerField(blank=True, null=True)),
                ('PositiveFamilyHistory_MotherAffected', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('PositiveFamilyHistory_FatherAffected', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('PositiveFamilyHistory_GrandmotherAffected', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('PositiveFamilyHistory_GrandFatherAffected', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('PositiveFamilyHistory_CousinsAffected', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('PositiveFamilyHistory_CousinsAffected_number', models.IntegerField(blank=True, null=True)),
                ('PositiveFamilyHistory_AnyOther', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('PositiveFamilyHistory_AnyOther_specify', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('PositiveFamilyHistory_AnyOther_Specify_names', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('PositiveFamilyHistory_upload_pedidegree', models.FileField(blank=True, null=True, upload_to='uploads/%Y/%m/%d/')),
                ('current_motor', models.CharField(blank=True, choices=[('Independently ambulant', 'Independently ambulant'), ('. Needs physical assistance', '. Needs physical assistance'), ('. Ambulant in home', '. Ambulant in home'), ('Wheel chair bound', 'Wheel chair bound'), ('Bed Bound', 'Bed Bound')], max_length=50, null=True)),
                ('CurrentMotor_yes_no', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('CurrentMotor_if_yes_age', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('LaboratoryInvestigations_CK_level', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('NerveConductionStudies', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('NerveConductionStudies_options', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Sensory neuropathy', 'Sensory neuropathy'), ('Sensory-motor neuropathy', 'Sensory-motor neuropathy')], max_length=50, null=True)),
                ('CardiacEvaluation', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('CardiacEvaluation_ECG', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('CardiacEvaluation_ECG_status', models.CharField(blank=True, choices=[('Normal ', 'Normal'), ('Abnormal', 'Abnormal')], max_length=50, null=True)),
                ('CardiacEvaluation_ECG_status_if_abnormal_Arrhythmia', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('CardiacEvaluation_ECG_status_if_abnormal_Arrhythmia_if_yes', models.CharField(blank=True, choices=[('Atrial arrhythmias ', 'Atrial arrhythmias'), ('Conduction disease', 'Conduction disease'), ('Bradycardia', 'Bradycardia'), ('Ventricular arrhythmias', 'Ventricular arrhythmias')], max_length=50, null=True)),
                ('limb_2DECHO', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('limb_2DECHO_status', models.CharField(blank=True, choices=[('Normal ', 'Normal'), ('Abnormal', 'Abnormal')], max_length=50, null=True)),
                ('limb_2DECHO_if_abnormal', models.CharField(blank=True, choices=[('Dilated cardiomyopathy ', 'Dilated cardiomyopathy'), ('Hypertrophic Cardiomyopathy', 'Hypertrophic Cardiomyopathy'), ('Any other ', 'Any other ')], max_length=50, null=True)),
                ('limb_2DECHO_yes_no', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('limb_2DECHO_AnyOther', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('MuscleBiopsy', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('MuscleBiopsy_Immunohistochemistry', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('MuscleBiopsy_if_yes', models.CharField(blank=True, choices=[('Absent Dysferlin staining ', 'Absent Dysferlin staining'), ('Absent Sarcoglycan staining', 'Absent Sarcoglycan staining'), ('Absent Alpha-Dystroglycan staining', 'Absent Alpha-Dystroglycan staining'), ('Absent Caveolin staining', 'Absent Caveolin staining')], max_length=50, null=True)),
                ('DiagnosisConfirmed_sanger', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('DiagnosisConfirmed_nextGenerationSeq', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('DiagnosisConfirmed_nextGenerationSeq_options', models.CharField(blank=True, choices=[('Clinical Exome', 'Clinical Exome'), ('Targeted panel', 'Targeted panel'), ('Whole exome sequencing', 'Whole exome sequencing'), ('Whole genome sequencing', 'Whole genome sequencing'), ('MLPA', 'MLPA'), ('Exome Array', 'Exome Array')], max_length=50, null=True)),
                ('DiagnosisConfirmed_nextGenerationSeq_ClinicalExome', models.BooleanField(blank=True, null=True)),
                ('DiagnosisConfirmed_nextGenerationSeq_TargetedPanel', models.BooleanField(blank=True, null=True)),
                ('DiagnosisConfirmed_nextGenerationSeq_WholeExomeSequencing', models.BooleanField(blank=True, null=True)),
                ('DiagnosisConfirmed_nextGenerationSeq_WholegGenomeSequencing', models.BooleanField(blank=True, null=True)),
                ('DiagnosisConfirmed_nextGenerationSeq_MLPA', models.BooleanField(blank=True, null=True)),
                ('DiagnosisConfirmed_nextGenerationSeq_ExomeArray', models.BooleanField(blank=True, null=True)),
                ('upload_genetic_report', models.FileField(blank=True, null=True, upload_to='uploads/%Y/%m/%d/')),
                ('limb_mutation', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('mutationDetails_Missense', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('mutationDetails_Missense_mutation', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mutationDetails_Nonsense', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('mutationDetails_Nonsense_mutation', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mutationDetails_SpliceSite', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('mutationDetails_SpliceSite_mutation', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mutationDetails_Insertion', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('mutationDetails_Insertion_mutation', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mutationDetails_Deletions', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('mutationDetails_Deletions_mutation', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mutationDetails_AnyOther_specify', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('mutationDetails_AnyOther_mutation', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('MutationDetected_Homozygous', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('MutationDetected_CompoundHeterozygous', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('MutationDetected_Heterozygous', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('MutationDetected_VariantUnknownSignificance', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('gene_Location1', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('gene_Variant1', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('gene_Zygosity1', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('gene_Disease1', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('gene_Inheritance1', models.CharField(blank=True, choices=[('AD', 'AD'), ('AR', 'AR'), ('XLD', 'XLD')], max_length=50, null=True)),
                ('gene_classification1', models.CharField(blank=True, choices=[('Pathogenic ', 'Pathogenic'), ('Likely pathogenic ', 'Likely pathogenic '), ('Uncertain significance', 'Uncertain significance')], max_length=50, null=True)),
                ('gene_Location', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('FinalGeneticDiagnosis', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('AR_LGMD_type', models.CharField(blank=True, choices=[('LGMD 2A', 'LGMD 2A'), ('LGMD 2B', 'LGMD 2B'), ('LGMD 2C', 'LGMD 2C'), ('. LGMD 2D', '. LGMD 2D'), ('LGMD 2E', 'LGMD 2E'), ('LGMD 2F', 'LGMD 2F'), ('LGMD 2G', 'LGMD 2G'), ('LGMD 2H', 'LGMD 2H'), ('LGMD 2I', 'LGMD 2I'), ('LGMD 2J', 'LGMD 2J'), ('LGMD 2K', 'LGMD 2K'), ('LGMD 2L', 'LGMD 2L'), ('LGMD 2M', 'LGMD 2M'), ('LGMD 2N', 'LGMD 2N'), ('LGMD 2O', 'LGMD 2O'), ('LGMD 2P', 'LGMD 2P'), ('LGMD 2Q', 'LGMD 2Q'), ('LGMD 2R', 'LGMD 2R'), ('LGMD 2S', 'LGMD 2S'), ('LGMD 2T', 'LGMD 2T'), ('LGMD 2U', 'LGMD 2U'), ('LGMD 2V', 'LGMD 2V'), ('LGMD 2W', 'LGMD 2W'), ('LGMD 2X', 'LGMD 2X')], max_length=50, null=True)),
                ('ADLGMD_type', models.CharField(blank=True, choices=[('LGMD 1A', 'LGMD 1A'), ('LGMD 1B', 'LGMD 1B'), ('LGMD 1C', 'LGMD 1C'), ('LGMD 1D', 'LGMD 1D'), ('LGMD 1E', 'LGMD 1E'), ('LGMD 1F', 'LGMD 1F'), ('LGMD 1G', 'LGMD 1G'), ('LGMD 1H', 'LGMD 1H'), ('LGMD 1I', 'LGMD 1I')], max_length=50, null=True)),
                ('SegregationPattern_Father', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('SegregationPattern_Mother', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('TreatmentReceived_TendonLengthening', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('TreatmentReceived_TendonLengthening_age', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('Scoliosis_limb', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('Scoliosis_SurgicalCorrection', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('Scoliosis_SurgicalCorrection_age', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('CardiacAbnormalities_pacemaker', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('CardiacAbnormalities_Prophylactic', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('CardiacAbnormalities_CardiacTransplant', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('RespiratoryAssistance', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('RespiratoryAssistance_BiPAP', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('RespiratoryAssistance_BiPAP_age', models.DateField(blank=True, null=True)),
                ('RespiratoryAssistance_Ventilator', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('RespiratoryAssistance_Ventilator_age', models.DateField(blank=True, null=True)),
                ('Final_Outcome_last_followup_Date', models.DateField(blank=True, null=True)),
                ('Final_Outcome_status', models.CharField(blank=True, choices=[('Alive ', 'Alive '), ('Dead', 'Dead')], max_length=50, null=True)),
                ('Final_Outcome_if_death_age', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('Final_Outcome_death_cause', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('Final_Outcome_Cardiac', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('Final_Outcome_death_place', models.CharField(blank=True, choices=[('Death At home  ', 'Death At home  '), ('Hospital', 'Hospital')], max_length=50, null=True)),
                ('Final_Outcome_Respiratory', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('Final_Outcome_Respiratory_place', models.CharField(blank=True, choices=[('Death At home  ', 'Death At home  '), ('Hospital', 'Hospital')], max_length=50, null=True)),
                ('nmd_date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='limbnmd', to='nmd.profile_nmd')),
                ('register', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.register')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='dsystophinopathy_nmd',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('NMD_diagnosis_type', models.CharField(blank=True, choices=[('Dystrophinopathy ', 'Dystrophinopathy'), ('Spinal Muscular Atrophy', 'Spinal Muscular Atrophy'), ('Limb Girdle Muscular Dystrophy', 'Limb Girdle Muscular Dystrophy')], max_length=50, null=True)),
                ('NMD_enrollment_status', models.CharField(blank=True, choices=[('Enrolled', 'Enrolled'), ('Not Enrolled.', 'Not Enrolled.')], max_length=50, null=True)),
                ('diagnosis_age', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('aproximate_age', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('symptoms_age_onset', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pedigree', models.FileField(blank=True, null=True, upload_to='uploads/%Y/%m/%d/')),
                ('positive_family_hist', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('onset_age', models.CharField(blank=True, choices=[('Prenatal', 'Prenatal'), ('At birth', 'At birth'), ('Not sure', 'Not sure')], max_length=50, null=True)),
                ('positive_family_siblings', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('positive_family_sibling_nubmer_affected', models.IntegerField(blank=True, null=True)),
                ('positive_family_cousins', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('positive_family_sCousins_nubmer_affected', models.IntegerField(blank=True, null=True)),
                ('positive_family_Maternal_uncles', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('positive_family_Maternal_uncles_nubmer_affected', models.IntegerField(blank=True, null=True)),
                ('positive_family_Grand_materna', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('positive_family_Grand_materna_affected', models.IntegerField(blank=True, null=True)),
                ('positive_family_mothers', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('symptoms_signs_onset', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('difficulty_running_walking_fast', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('unable_rise_low_chair_floor', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('repeated_false', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('muscle_hypertrophy', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('mental_sub_normality', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('learning_disability', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('delayed_motor_milestrones', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('symtoms_signs_other_specify', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('CEF_anthropometric_wieght', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('CEF_anthropometric_height', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('CEF_anthropometric_head_circumference', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('MP_MRC_grade_upperlimb_proximal_muscles', models.IntegerField(blank=True, null=True)),
                ('MP_MRC_grade_upperlimb_distal_muscles', models.IntegerField(blank=True, null=True)),
                ('MP_MRC_grade_lowerlimb_proximal_muscles', models.IntegerField(blank=True, null=True)),
                ('MP_MRC_grade_lowerlimb_distal_muscles', models.IntegerField(blank=True, null=True)),
                ('functional_status_Independently_ambulant', models.BooleanField(default=False)),
                ('functional_status_NeedsPhysicalAssistance', models.BooleanField(default=False)),
                ('functional_status_AmbulantHome', models.BooleanField(default=False)),
                ('functional_status_WheelchairBound', models.BooleanField(default=False)),
                ('functional_status_WheelchairBound_age', models.DateField(blank=True, null=True)),
                ('functional_status_BedBound', models.BooleanField(default=False)),
                ('functional_status_BedBound_age', models.DateField(blank=True, null=True)),
                ('functional_status_FunctionalScoreAvailable', models.BooleanField(default=False)),
                ('functional_status_BrookeScale', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('functional_status_VignosScale', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('functional_status_functional_score_available', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('intelligent_quotient_tested', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('intelligent_quotient_tested_if_yes', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('autism', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('Contractures_dmd', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('Contractures_ankle', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('Contractures_knee', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('Contractures_hips', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('Contractures_elbows', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('Scoliosis_dmd', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('Kyphosis_dmd', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('Respiratory_difficulty', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('LaboratoryInvestigation_serum_ck_lvel', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('LaboratoryInvestigation_Cardiac_Evaluation', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('LaboratoryInvestigation_ecg_status', models.CharField(blank=True, choices=[('Done', 'Done'), ('Not Done', 'Not Done')], max_length=50, null=True)),
                ('LaboratoryInvestigation_ecg_normal_abnormal', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal')], max_length=50, null=True)),
                ('LaboratoryInvestigation_2DECHO_status', models.CharField(blank=True, choices=[('Done', 'Done'), ('Not Done', 'Not Done')], max_length=50, null=True)),
                ('LaboratoryInvestigation_2DECHO_normal_abnormal', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal')], max_length=50, null=True)),
                ('pulmonary_function_tests', models.CharField(blank=True, choices=[('Done', 'Done'), ('Not Done', 'Not Done')], max_length=50, null=True)),
                ('pulmonary_function_tests_normal_abnormal', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal')], max_length=50, null=True)),
                ('pulmonary_function_forced_vital_capacity', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('genetic_diagnosis_confirmed_mPCR', models.BooleanField(default=False)),
                ('genetic_diagnosis_confirmed_MLPA', models.BooleanField(default=False)),
                ('genetic_diagnosis_confirmed_MicroArray', models.BooleanField(default=False)),
                ('genetic_diagnosis_confirmed_SangerSequencing', models.BooleanField(default=False)),
                ('genetic_diagnosis_confirmed_next_generation', models.BooleanField(default=False)),
                ('genetic_diagnosis_next_generation', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('enetic_diagnosis_next_generation_TargetedPanel', models.BooleanField(default=False)),
                ('enetic_diagnosis_next_generation_ClinicalExome', models.BooleanField(default=False)),
                ('enetic_diagnosis_next_generation_WholeExomeSequencing', models.BooleanField(default=False)),
                ('enetic_diagnosis_next_generation_WholeGenomeSequencing', models.BooleanField(default=False)),
                ('upload_genetic_report', models.FileField(blank=True, null=True, upload_to='uploads/%Y/%m/%d/')),
                ('inframe_outframe', models.CharField(blank=True, choices=[('In-frame ', 'In-frame '), ('Out-of-frame', 'Out-of-frame')], max_length=50, null=True)),
                ('list_of_deleted_exons', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('list_of_duplicate_exons', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mutation_identified_Missense', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('mutation_identified_Missense_mutation', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mutation_identified_Nonsense', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('mutation_identified_Nonsense_mutation', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mutation_identified_Mutation', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('mutation_identified_Mutation_mutation', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mutation_identified_Frameshift', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('mutation_identified_Frameshift_mutation', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mutation_identified_Splicesite', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('mutation_identified_Splicesite_mutation', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mutation_identified_InframeInsertion', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('mutation_identified_InframeInsertion_mutation', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mutation_identified_InframeDeletion', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('mutation_identified_InframeDeletion_mutation', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mutation_identified_INDEL', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('mutation_identified_INDEL_mutation', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mutation_identified_Others', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('mutation_identified_Others_mutation', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('gene_location', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('gene_variant', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('gene_Zygosity', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('gene_Disease', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('gene_Inheritance', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('gene_classification', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('Muscle_Biopsy', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('Muscle_Biopsy_MuscleImmunohistochemistry', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('Muscle_Biopsy_MuscleImmunohistochemistry_if_yes', models.CharField(blank=True, choices=[('Absent Dystrophin staining ', 'Absent Dystrophin staining '), ('Reduced Dystrophin staining', 'Reduced Dystrophin staining'), ('Mosaic pattern', 'Mosaic pattern')], max_length=50, null=True)),
                ('final_diagnosis', models.CharField(blank=True, choices=[('Duchenne Muscular Dystrophy (DMD) ', 'Duchenne Muscular Dystrophy (DMD) '), ('Becker Muscular Dystrophy (BMD)', 'Becker Muscular Dystrophy (BMD)'), ('Intermediate Muscular Dystrophy (IMD)', 'Intermediate Muscular Dystrophy (IMD)')], max_length=100, null=True)),
                ('current_past_treatment_Steroids', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('current_past_treatment_Steroids_starting_age', models.DateField(blank=True, null=True)),
                ('current_past_treatment_Prednisone', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('current_past_treatment_1', models.FloatField(blank=True, null=True)),
                ('current_past_treatment_2', models.FloatField(blank=True, null=True)),
                ('current_past_treatment_Deflazacort', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('current_past_treatment_Deflazacort_1', models.FloatField(blank=True, null=True)),
                ('current_past_treatment_Deflazacort_anyother_specify', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('current_past_treatment_Supplements', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('current_past_treatment_Supplements_calcium', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('current_past_treatment_Supplements_vit_D', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('Respiratoryassistance', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('Respiratoryassistance_BiPAP', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('Respiratoryassistance_Ventilator', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('Respiratoryassistance_BiPAP_age', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('Respiratoryassistance_Ventilator_age', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('Tendon_lengthening_surgery', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('Tendon_lengthening_surgery_if_yes_age', models.DateField(blank=True, null=True)),
                ('Surgicalcorrectionscoliosis', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('Surgicalcorrectionscoliosis_if_yes_age', models.DateField(blank=True, null=True)),
                ('last_follow_up', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('last_follow_up_if_yes', models.CharField(blank=True, choices=[('Physical follow-up  ', 'Physical follow-up '), ('Telephonic information ', 'Telephonic information '), ('Letter ', 'Letter ')], max_length=50, null=True)),
                ('last_follow_up_if_yes_age', models.DateField(blank=True, null=True)),
                ('Functionalstatus', models.CharField(blank=True, choices=[('Known  ', 'Known '), ('Not Known ', 'Not Known')], max_length=50, null=True)),
                ('functional_status_options', models.CharField(blank=True, choices=[('Independently ambulant  ', 'Independently ambulant '), ('Needs physical assistance', 'Needs physical assistance'), ('Ambulant in home', 'Ambulant in home'), ('Wheelchair bound ', 'Wheelchair bound'), ('Bed Bound', 'Bed Bound')], max_length=100, null=True)),
                ('functional_score', models.CharField(blank=True, choices=[('yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('functional_score_brooks_grade', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('functional_score_vignos_grade', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('outcome', models.CharField(blank=True, choices=[('Alive', 'Alive'), ('Dead ', 'Dead')], max_length=50, null=True)),
                ('outcome_age', models.DateField(blank=True, null=True)),
                ('oucome_cause_of_death', models.CharField(blank=True, choices=[('Known  ', 'Known '), ('Not Known ', 'Not Known')], max_length=50, null=True)),
                ('outcome_death_cause', models.CharField(blank=True, choices=[('Cardiac cause ', 'Cardiac cause '), ('Respiratory failure', 'Respiratory failure')], max_length=100, null=True)),
                ('death_place', models.CharField(blank=True, choices=[('Home ', 'Home '), ('Hospital ', 'Hospital')], max_length=100, null=True)),
                ('mother_carrier_status', models.CharField(blank=True, choices=[('Done', 'Done'), ('Not Done', 'Not Done')], max_length=100, null=True)),
                ('mother_carrier_status_outcome', models.CharField(blank=True, choices=[('Positive  ', 'Positive  '), ('Negative ', 'Negative')], max_length=100, null=True)),
                ('sister_carrier_status', models.CharField(blank=True, choices=[('Done', 'Done'), ('Not Done', 'Not Done')], max_length=100, null=True)),
                ('sister_carrier_status_outcome', models.CharField(blank=True, choices=[('Positive  ', 'Positive  '), ('Negative ', 'Negative')], max_length=100, null=True)),
                ('nmd_date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dystonmd', to='nmd.profile_nmd')),
                ('register', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.register')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='demographic_nmd',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('NMD_patient_education', models.CharField(blank=True, choices=[('Illiterate', 'Illiterate'), ('Primary', 'Primary'), ('High School', 'High School'), ('Secondary level', 'Secondary level'), ('College and above', 'College and above')], max_length=50, null=True)),
                ('NMD_patient_occupation', models.CharField(blank=True, choices=[('Employed (organised sector)', 'Employed (organised sector)'), ('Employed (Unorganised sector)', 'Employed (Unorganised sector)'), ('Others', 'Others')], max_length=50, null=True)),
                ('NMD_father_edu_status', models.CharField(blank=True, choices=[('Illiterate', 'Illiterate'), ('Primary', 'Primary'), ('High School', 'High School'), ('Secondary level', 'Secondary level'), ('College and above', 'College and above')], max_length=50, null=True)),
                ('NMD_father_occupation', models.CharField(blank=True, choices=[('Employed (organised sector)', 'Employed (organised sector)'), ('Employed (Unorganised sector)', 'Employed (Unorganised sector)'), ('Others', 'Others')], max_length=50, null=True)),
                ('NMD_mother_edu_status', models.CharField(blank=True, choices=[('Illiterate', 'Illiterate'), ('Primary', 'Primary'), ('High School', 'High School'), ('Secondary level', 'Secondary level'), ('College and above', 'College and above')], max_length=50, null=True)),
                ('NMD_mother_occupation', models.CharField(blank=True, choices=[('Home maker', 'Home maker)'), ('Employed (organised sector)', 'Employed (organised sector)'), ('Employed (Unorganised sector)', 'Employed (Unorganised sector)'), ('Others', 'Others')], max_length=50, null=True)),
                ('NMD_monthly_income_status', models.CharField(blank=True, choices=[('> 126,360', '> 126,360)'), ('63,182 – 126,356)', '63,182 – 126,356)'), ('47,266 – 63,178', '47,266 – 63,178'), ('31,591 - 47,262', '31,591 - 47,262'), ('18,953 - 31,589', '18,953 - 31,589'), ('6,327 - 18,949', '6,327 - 18,949'), ('< 6,323', '< 6,323')], max_length=50, null=True)),
                ('nmd_date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='demographicnmd', to='nmd.profile_nmd')),
                ('register', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.register')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
