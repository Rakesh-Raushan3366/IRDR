# Generated by Django 4.0.3 on 2023-06-06 10:11

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '0011_opd_attendance_pre_total'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='profile_fabry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fb_final_diagnosis', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('fb_date_of_record', models.DateField(blank=True, null=True)),
                ('fb_clinical_exam_date', models.DateField(blank=True, null=True)),
                ('fb_date_of_birth', models.DateField(blank=True, null=True)),
                ('fb_patient_name', models.CharField(max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('fb_father_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('fb_mother_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('fb_paitent_id', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('fb_paitent_id_list', models.CharField(blank=True, choices=[('Aadhar card', 'Aadhar card'), ('Driving license', 'Driving license'), ('Voter id', 'Voter id'), ('Rations card', 'Rations card'), ('PAN card', 'PAN card'), ('BPL card', 'BPL card'), ('SECC card', 'SECC card'), ('Aabha Id', 'Aabha Id')], max_length=100, null=True)),
                ('fb_patient_id_no', models.CharField(blank=True, max_length=100, null=True, unique=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('fb_patient_age', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('fb_father_mother_id', models.CharField(blank=True, choices=[('Aadhar card', 'Aadhar card'), ('Driving license', 'Driving license'), ('Voter id', 'Voter id'), ('Rations card', 'Rations card'), ('PAN card', 'PAN card'), ('BPL card', 'BPL card'), ('SECC card', 'SECC card'), ('Aabha Id', 'Aabha Id')], max_length=100, null=True)),
                ('fb_father_mother_id_no', models.PositiveBigIntegerField(blank=True, null=True, unique=True)),
                ('fb_mother_adhaar_no', models.PositiveBigIntegerField(blank=True, null=True, unique=True)),
                ('fb_permanent_addr', models.CharField(blank=True, max_length=500, null=True, validators=[django.core.validators.MaxLengthValidator(500)])),
                ('fb_city_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('fb_country_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('fb_mother_mobile_no', models.PositiveBigIntegerField(null=True, unique=True)),
                ('fb_father_mobile_no', models.PositiveBigIntegerField(blank=True, null=True)),
                ('fb_land_line_no', models.PositiveBigIntegerField(blank=True, null=True)),
                ('fb_email', models.EmailField(blank=True, max_length=300, null=True)),
                ('fb_religion', models.CharField(blank=True, choices=[('Hindu', 'Hindu'), ('Muslim', 'Muslim'), ('Christian', 'Christian'), ('Sikh', 'Sikh'), ('Others', 'Others')], max_length=100, null=True)),
                ('fb_caste', models.CharField(blank=True, choices=[('Scheduled caste', 'Scheduled caste'), ('Scheduled tribe', 'Scheduled tribe'), ('Others', 'Others')], max_length=100, null=True)),
                ('fb_referred_status', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_referred_by', models.CharField(blank=True, choices=[('General practitioner', 'General practitioner'), ('Physician', 'Physician'), ('Neurologist', 'Neurologist'), ('Any others', 'Any others')], max_length=100, null=True)),
                ('fb_referred_by_desc', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('fb_gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', ' Female'), ('Transgender', 'Transgender')], max_length=100, null=True)),
                ('fb_consent_given', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_consent_upload', models.FileField(blank=True, null=True, upload_to='uploads/%Y/%m/%d/')),
                ('fb_assent_given', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_assent_upload', models.FileField(blank=True, null=True, upload_to='uploads/%Y/%m/%d/')),
                ('fb_hospital_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('fb_hospital_reg_no', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('fb_icmr_unique_no', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('fb_date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('quality_status', models.CharField(blank=True, choices=[('Pending', 'Pending'), ('Resubmitted', 'Resubmitted'), ('Completed', 'Completed')], max_length=20, null=True)),
                ('quality_result', models.CharField(blank=True, choices=[('Pass', 'Pass'), ('Fail', 'Fail')], max_length=10, null=True)),
                ('quality_reason', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('uniqueId', models.CharField(blank=True, max_length=500, null=True)),
                ('complete', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Na', 'Na')], max_length=10, null=True)),
                ('update_profile', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Na', 'Na')], max_length=10, null=True)),
                ('fb_district', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.district', verbose_name=' district')),
                ('fb_state', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.state', verbose_name=' state')),
                ('qa_register', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='qa_register_fabry', to='account.register')),
                ('qa_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='qa_user_fabry', to=settings.AUTH_USER_MODEL)),
                ('register', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.register')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='demographic_fabry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fb_patient_edu_status', models.CharField(blank=True, choices=[('Illiterate', 'Illiterate'), ('Primary', 'Primary'), ('High School', 'High School'), ('Secondary level', 'Secondary level'), ('College and above', 'College and above')], max_length=50, null=True)),
                ('fb_patient_occupation', models.CharField(blank=True, choices=[('Employed (organised sector)', 'Employed (organised sector)'), ('Employed (Unorganised sector)', 'Employed (Unorganised sector)'), ('Others', 'Others')], max_length=50, null=True)),
                ('fb_father_edu_status', models.CharField(blank=True, choices=[('Illiterate', 'Illiterate'), ('Primary', 'Primary'), ('High School', 'High School'), ('Secondary level', 'Secondary level'), ('College and above', 'College and above')], max_length=50, null=True)),
                ('fb_father_occupation', models.CharField(blank=True, choices=[('Employed (organised sector)', 'Employed (organised sector)'), ('Employed (Unorganised sector)', 'Employed (Unorganised sector)'), ('Others', 'Others')], max_length=50, null=True)),
                ('fb_mother_edu_status', models.CharField(blank=True, choices=[('Illiterate', 'Illiterate'), ('Primary', 'Primary'), ('High School', 'High School'), ('Secondary level', 'Secondary level'), ('College and above', 'College and above')], max_length=50, null=True)),
                ('fb_mother_occupation', models.CharField(blank=True, choices=[('Home maker', 'Home maker)'), ('Employed (organised sector)', 'Employed (organised sector)'), ('Employed (Unorganised sector)', 'Employed (Unorganised sector)'), ('Others', 'Others')], max_length=50, null=True)),
                ('fb_monthly_income_status', models.CharField(blank=True, choices=[('> 126,360', '> 126,360)'), ('63,182 – 126,356)', '63,182 – 126,356)'), ('47,266 – 63,178', '47,266 – 63,178'), ('31,591 - 47,262', '31,591 - 47,262'), ('18,953 - 31,589', '18,953 - 31,589'), ('6,327 - 18,949', '6,327 - 18,949'), ('< 6,323', '< 6,323')], max_length=50, null=True)),
                ('fb_anth_wght_pat', models.CharField(blank=True, max_length=50, null=True)),
                ('fb_anth_wght_per', models.CharField(blank=True, max_length=50, null=True)),
                ('fb_anth_wght_sd', models.CharField(blank=True, max_length=50, null=True)),
                ('fb_anth_height_pat', models.CharField(blank=True, max_length=50, null=True)),
                ('fb_anth_height_per', models.CharField(blank=True, max_length=50, null=True)),
                ('fb_anth_height_sd', models.CharField(blank=True, max_length=50, null=True)),
                ('fb_anth_head_cir_pat', models.CharField(blank=True, max_length=50, null=True)),
                ('fb_anth_head_cir_perc', models.CharField(blank=True, max_length=50, null=True)),
                ('fb_anth_head_cir_sd', models.CharField(blank=True, max_length=50, null=True)),
                ('fb_presenting_complaints_years', models.IntegerField(blank=True, null=True)),
                ('fb_presenting_complaints_months', models.IntegerField(blank=True, null=True)),
                ('fb_presenting_complaints_day', models.IntegerField(blank=True, null=True)),
                ('fb_presenting_complaints_intrauterine', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('fb_presenting_complaints_age_presentation_years', models.IntegerField(blank=True, null=True)),
                ('fb_presenting_complaints_age_presentation_months', models.IntegerField(blank=True, null=True)),
                ('fb_presenting_complaints_age_presentation_day', models.IntegerField(blank=True, null=True)),
                ('fb_presenting_complaints_age_presentation_intrauterine', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('fb_presenting_complaints_age_diagnosis_years', models.IntegerField(blank=True, null=True)),
                ('fb_presenting_complaints_age_diagnosis_months', models.IntegerField(blank=True, null=True)),
                ('fb_presenting_complaints_age_diagnosis_day', models.IntegerField(blank=True, null=True)),
                ('fb_presenting_complaints_age_diagnosis_intrauterine', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('fb_onset_age', models.DateField(blank=True, null=True)),
                ('fb_pedigree_upload', models.FileField(blank=True, null=True, upload_to='uploads/%Y/%m/%d/')),
                ('fb_fam_hist_status', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_fam_hist_descr', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('fb_cons_status', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_cons_degree_specify', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('fb_fever', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_gi_symtoms', models.CharField(blank=True, max_length=10, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('fb_abdominal_pain', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_diarrhea', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_constipation', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_nausea', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_vomiting', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_irritable_bowel', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_acroparesthesia', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_neuronopathic_pain', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_hand', models.BooleanField(default=False)),
                ('fb_feet', models.BooleanField(default=False)),
                ('fb_both', models.BooleanField(default=False)),
                ('fb_treatment', models.CharField(blank=True, choices=[('Self', 'Self'), ('Insurance', 'Insurance'), ('Compassionate Access', 'Compassionate Access'), ('Reimbursement', 'Reimbursement'), ('Under Rare Disease Policy', 'Under Rare Disease Policy')], max_length=200, null=True)),
                ('fb_medication_Morphine', models.BooleanField(default=False)),
                ('fb_medication_CBZ', models.BooleanField(default=False)),
                ('fb_medication_Phenytoin', models.BooleanField(default=False)),
                ('fb_improvement_after_ert', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Not known', 'Not known')], max_length=10, null=True)),
                ('fb_improvement_after_medication', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Not known', 'Not known')], max_length=10, null=True)),
                ('fb_improvement_after_medication_specify', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('fb_medication_effect', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_angiokeratoma', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_angiok_onset_age', models.CharField(blank=True, max_length=10, null=True)),
                ('fb_hypohidrosis', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_inter_physical_act', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_hydro_impro_after_ert', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Not known', 'Not known')], max_length=10, null=True)),
                ('fb_cardiac_symtoms', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_myocardial_infarction', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_unstable_angina', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_hypertension', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_echo', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_echo_date', models.DateField(blank=True, null=True)),
                ('fb_left_vent_diastolic_dia', models.FloatField(blank=True, null=True)),
                ('fb_left_vent_diastolic_dia_date', models.DateField(blank=True, null=True)),
                ('fb_pwt_septum_lvm', models.FloatField(blank=True, null=True)),
                ('fb_co', models.FloatField(blank=True, null=True)),
                ('fb_co_date', models.DateField(blank=True, null=True)),
                ('fb_ef_per', models.FloatField(blank=True, null=True)),
                ('fb_ef_per_date', models.DateField(blank=True, null=True)),
                ('fb_lvh', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_lvh_date', models.DateField(blank=True, null=True)),
                ('fb_mr_tr', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_mr_tr_date', models.DateField(blank=True, null=True)),
                ('fb_lvmi', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_cardiomyopathy', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_cardiomyopathy_date', models.DateField(blank=True, null=True)),
                ('fb_cardiomyopathy_specify', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('fb_ecg', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal'), ('Not Done', 'Not Done')], max_length=10, null=True)),
                ('fb_ecg_date', models.DateField(blank=True, null=True)),
                ('fb_ecg_abnormal_pr_select', models.CharField(blank=True, choices=[('Short', 'Short'), ('Prolonged', 'Prolonged')], max_length=50, null=True)),
                ('fb_any_rhythm_abnormality', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_any_rhythm_abnormality_specify', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('fb_neropsychiatric_symp', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_neuropsychiatric_types', models.CharField(blank=True, choices=[('Depression', 'Depression'), ('Neuropsychological deficits', 'Neuropsychological deficits')], max_length=50, null=True)),
                ('fb_depression_status', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_stroke', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_stroke_age', models.FloatField(blank=True, null=True)),
                ('fb_rec_stroke', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_trans_isch_attack', models.CharField(blank=True, choices=[('Ischemic', 'Ischemic'), ('Hemorrhagic', 'Hemorrhagic')], max_length=50, null=True)),
                ('fb_visual_prob', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_cornea_vertic', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_corneal_opacity', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_hearing_loss', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_sensory_type', models.CharField(blank=True, choices=[('Sensorineural', 'Sensorineural'), ('Conductive', 'Conductive')], max_length=50, null=True)),
                ('fb_proteinuria', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_proteinuria_age_onset', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('fb_microalbuminuri', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_microalbuminuri_date', models.DateField(blank=True, null=True)),
                ('fb_microalbuminuri_value', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('fb_albumin_creatinine', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_albumin_creatinine_date', models.DateField(blank=True, null=True)),
                ('fb_albumin_creatinine_val', models.FloatField(blank=True, null=True)),
                ('fb_renal_biops', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_renal_biops_status', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal')], max_length=10, null=True)),
                ('fb_renal_biops_abnorm_specify', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('fb_renal_transplant', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_renal_transplant_specify', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('fb_dialysis', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_gfr', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_urea_base_line_value', models.FloatField(blank=True, null=True)),
                ('fb_urea_date', models.DateField(blank=True, null=True)),
                ('fb_creatinine_base_value', models.FloatField(blank=True, null=True)),
                ('fb_creatinine_date', models.DateField(blank=True, null=True)),
                ('fb_plasma_gl_3_date', models.DateField(blank=True, null=True)),
                ('fb_plasma_gl_3_value', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('fb_plasma_gl_3_lab_name', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('fb_urine_gl_3_date', models.DateField(blank=True, null=True)),
                ('fb_urine_gl_3_lab_name', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('fb_urine_gl_3_lab_value', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('fb_mri_brain', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal')], max_length=10, null=True)),
                ('fb_mri_brain_abnormal_spcify', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('fb_enzyme_assy_ref_range', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('fb_enzyme_assy_lab_name', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('fb_enzyme_assy_upload_report', models.FileField(blank=True, null=True, upload_to='uploads/%Y/%m/%d/')),
                ('fb_enzyme_assy1', models.CharField(blank=True, choices=[('Homozygous', 'Homozygous '), ('Heterozygous', 'Heterozygous'), ('Hemizygous', 'Hemizygous')], max_length=50, null=True)),
                ('fb_gene_name', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('fb_transcript_id', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('fb_cDNA_change1', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('fb_protein_change1', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('fb_variant1', models.CharField(blank=True, choices=[('Novel', 'Novel'), ('Report', 'Report')], max_length=50, null=True)),
                ('fb_variant_class1', models.CharField(blank=True, choices=[('Pathogenic ', 'Pathogenic '), ('Likely Pathogenic', 'Likely Pathogenic'), ('Variant of uncertain significance ', 'Variant of uncertain significance')], max_length=50, null=True)),
                ('fb_enzyme_assy2', models.CharField(blank=True, choices=[('Homozygous', 'Homozygous '), ('Heterozygous', 'Heterozygous'), ('Hemizygous', 'Hemizygous')], max_length=50, null=True)),
                ('fb_cDNA_change2', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('fb_protein_change2', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('fb_variant2', models.CharField(blank=True, choices=[('Novel', 'Novel'), ('Report', 'Report')], max_length=50, null=True)),
                ('fb_variant_class2', models.CharField(blank=True, choices=[('Pathogenic ', 'Pathogenic '), ('Likely Pathogenic', 'Likely Pathogenic'), ('Variant of uncertain significance ', 'Variant of uncertain significance')], max_length=50, null=True)),
                ('fb_mul_seg', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('fb_father', models.CharField(blank=True, max_length=100, null=True)),
                ('fb_mother', models.CharField(blank=True, max_length=100, null=True)),
                ('fb_segregation_parents', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Not done', 'Not done')], max_length=10, null=True)),
                ('fb_enzyme_assy_report_details', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('fb_enzyme_assy_cont', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('fb_mutaion_rep_lab_name', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('fb_mutaion_rep_datails', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('fb_mutaion_rep_upload_report', models.FileField(blank=True, null=True, upload_to='uploads/%Y/%m/%d/')),
                ('fb_ert_status', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_ert_initial_date', models.DateField(blank=True, null=True)),
                ('fb_ert_start_age', models.FloatField(blank=True, null=True)),
                ('fb_ert_dosage', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('fb_ert_duration', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('fb_adverse_events', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_adverse_events_specify', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('fb_curr_ert_status', models.CharField(blank=True, choices=[('Ongoing', 'Ongoing'), ('Stopped', 'Stopped')], max_length=10, null=True)),
                ('fb_any_interuption', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_reseason_interrupt', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('fb_dur_interrupt', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('fb_fabri_disease_pain_score', models.FloatField(blank=True, null=True)),
                ('fb_drugs_recieved', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_pain_killers', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_pain_medication_name', models.CharField(blank=True, max_length=10, null=True)),
                ('fb_pain_killers_spcify', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('fb_ace_inhibitors', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('fb_ace_inhibitors_name', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('fb_ace_inhibitors_dose', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('fb_any_other', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('fb_filled_by_deo_name', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('fb_clinicial_name', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('fb_date', models.DateField(blank=True, null=True)),
                ('fb_date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('fb_Finaloutcomes', models.CharField(blank=True, choices=[('Death', 'Death'), ('Alive', 'Alive'), ('Followup Required', 'Followup Required'), ('Unknown', 'Unknown')], max_length=1000, null=True)),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='patient_fabry', to='fabry.profile_fabry')),
                ('register', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.register')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
