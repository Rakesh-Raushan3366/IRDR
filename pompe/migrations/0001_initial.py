# Generated by Django 4.0.3 on 2023-06-06 10:11

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '0011_opd_attendance_pre_total'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='profile_pompe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pmp_final_diagnosis', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pmp_date_of_records', models.DateField(blank=True, null=True)),
                ('pmp_date_of_clinical_exam', models.DateField(blank=True, null=True)),
                ('pmp_date_of_birth', models.DateField(blank=True, null=True)),
                ('pmp_patient_name', models.CharField(max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pmp_father_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pmp_mother_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pmp_paitent_id_yes_no', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('pmp_paitent_id', models.CharField(blank=True, choices=[('Aadhar card', 'Aadhar card'), ('Driving license', 'Driving license'), ('Voter id', 'Voter id'), ('Rations card', 'Rations card'), ('PAN card', 'PAN card'), ('BPL card', 'BPL card'), ('SECC card', 'SECC card'), ('Aabha Id', 'Aabha Id')], max_length=100, null=True)),
                ('pmp_patient_id_no', models.CharField(blank=True, max_length=100, null=True, unique=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pmp_patient_age', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pmp_father_mother_id', models.CharField(blank=True, choices=[('Aadhar card', 'Aadhar card'), ('Driving license', 'Driving license'), ('Voter id', 'Voter id'), ('Rations card', 'Rations card'), ('PAN card', 'PAN card'), ('BPL card', 'BPL card'), ('SECC card', 'SECC card'), ('Aabha Id', 'Aabha Id')], max_length=100, null=True)),
                ('pmp_father_mother_id_no', models.PositiveBigIntegerField(blank=True, null=True, unique=True)),
                ('pmp_permanent_addr', models.CharField(blank=True, max_length=500, null=True, validators=[django.core.validators.MaxLengthValidator(500)])),
                ('pmp_city_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pmp_country_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pmp_mother_mobile_no', models.PositiveBigIntegerField(null=True, unique=True)),
                ('pmp_father_mobile_no', models.PositiveBigIntegerField(blank=True, null=True)),
                ('pmp_land_line_no', models.PositiveBigIntegerField(blank=True, null=True)),
                ('pmp_email', models.EmailField(blank=True, max_length=300, null=True)),
                ('pmp_religion', models.CharField(blank=True, choices=[('Hindu', 'Hindu'), ('Muslim', 'Muslim'), ('Christian', 'Christian'), ('Sikh', 'Sikh'), ('Others', 'Others')], max_length=100, null=True)),
                ('pmp_caste', models.CharField(blank=True, choices=[('Scheduled caste', 'Scheduled caste'), ('Scheduled tribe', 'Scheduled tribe'), ('Others', 'Others')], max_length=100, null=True)),
                ('pmp_referred_status', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('pmp_referred_by', models.CharField(blank=True, choices=[('General practitioner', 'General practitioner'), ('Physician', 'Physician'), ('Neurologist', 'Neurologist'), ('Any others', 'Any others')], max_length=100, null=True)),
                ('pmp_referred_by_desc', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pmp_gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', ' Female'), ('Transgender', 'Transgender')], max_length=100, null=True)),
                ('pmp_consent_given', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('pmp_consent_upload', models.FileField(blank=True, null=True, upload_to='uploads/%Y/%m/%d/')),
                ('pmp_assent_given', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('pmp_assent_upload', models.FileField(blank=True, null=True, upload_to='uploads/%Y/%m/%d/')),
                ('pmp_hospital_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pmp_hospital_reg_no', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pmp_icmr_unique_no', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pmp_date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('quality_status', models.CharField(blank=True, choices=[('Pending', 'Pending'), ('Resubmitted', 'Resubmitted'), ('Completed', 'Completed')], max_length=20, null=True)),
                ('quality_result', models.CharField(blank=True, choices=[('Pass', 'Pass'), ('Fail', 'Fail')], max_length=10, null=True)),
                ('quality_reason', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('uniqueId', models.CharField(blank=True, max_length=500, null=True)),
                ('complete', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Na', 'Na')], default='No', max_length=10, null=True)),
                ('pmp_district', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.district', verbose_name=' district')),
                ('pmp_state', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.state', verbose_name=' state')),
                ('qa_register', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='qa_register_pompe', to='account.register')),
                ('qa_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='qa_user_pompe', to=settings.AUTH_USER_MODEL)),
                ('register', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.register')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='demographic_pompe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pd_Patient_education', models.CharField(blank=True, choices=[('No formal education', 'No formal education'), ('Less than primary school', 'Less than primary school'), ('High school', 'High school'), ('Secondary school', 'Secondary school'), ('College/Pre-university', 'College/Pre-university'), ('Post graduate degree ', 'Post graduate degree ')], max_length=100, null=True)),
                ('pd_Patient_occupation', models.CharField(blank=True, choices=[('Unemployed', 'Unemployed'), ('Government Service', 'Government Service'), ('Private Service', 'Private Service'), ('Agriculture', 'Agriculture'), ('Business', 'Business'), ('Daily labor', 'Daily labor'), ('Student', 'Student'), ('Others (Specify)', 'Others (Specify)')], max_length=200, null=True)),
                ('pd_Father_education', models.CharField(blank=True, choices=[('No formal education', 'No formal education'), ('Less than primary school', 'Less than primary school'), ('High school', 'High school'), ('Secondary school', 'Secondary school'), ('College/Pre-university', 'College/Pre-university'), ('Post graduate degree ', 'Post graduate degree ')], max_length=100, null=True)),
                ('pd_Father_occupation', models.CharField(blank=True, choices=[('Unemployed', 'Unemployed'), ('Government Service', 'Government Service'), ('Private Service', 'Private Service'), ('Agriculture', 'Agriculture'), ('Business', 'Business'), ('Daily labor', 'Daily labor'), ('Student', 'Student'), ('Others (Specify)', 'Others (Specify)')], max_length=200, null=True)),
                ('pd_Mother_education', models.CharField(blank=True, choices=[('No formal education', 'No formal education'), ('Less than primary school', 'Less than primary school'), ('High school', 'High school'), ('Secondary school', 'Secondary school'), ('College/Pre-university', 'College/Pre-university'), ('Post graduate degree ', 'Post graduate degree ')], max_length=100, null=True)),
                ('pd_Mother_occupation', models.CharField(blank=True, choices=[('Unemployed', 'Unemployed'), ('Government Service', 'Government Service'), ('Private Service', 'Private Service'), ('Housewife', 'Housewife'), ('Agriculture', 'Agriculture'), ('Business', 'Business'), ('Daily labor', 'Daily labor'), ('Student', 'Student'), ('Others (Specify)', 'Others (Specify)')], max_length=200, null=True)),
                ('pd_Monthly_family_income', models.CharField(blank=True, choices=[('> 126,360', '> 126,360)'), ('63,182 â€“ 126,356)', '63,182 â€“ 126,356)'), ('47,266 â€“ 63,178', '47,266 â€“ 63,178'), ('31,591 - 47,262', '31,591 - 47,262'), ('18,953 - 31,589', '18,953 - 31,589'), ('6,327 - 18,949', '6,327 - 18,949'), ('< 6,323', '< 6,323')], max_length=200, null=True)),
                ('pd_weight_patient', models.CharField(blank=True, max_length=200, null=True)),
                ('pd_weight_percentile', models.CharField(blank=True, max_length=200, null=True)),
                ('pd_weight_SD', models.CharField(blank=True, max_length=200, null=True)),
                ('pd_height_patient', models.CharField(blank=True, max_length=200, null=True)),
                ('pd_height_percentile', models.CharField(blank=True, max_length=200, null=True)),
                ('pd_height_SD', models.CharField(blank=True, max_length=200, null=True)),
                ('pd_Head_circumference_patient', models.CharField(blank=True, max_length=200, null=True)),
                ('pd_Head_circumference_percentile', models.CharField(blank=True, max_length=200, null=True)),
                ('pd_Head_circumference_sd', models.CharField(blank=True, max_length=200, null=True)),
                ('pd_Age_at_onset_of_symptoms_year', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('pd_Age_at_onset_of_symptoms_month', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('pd_Age_at_onset_of_symptoms_day', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('pd_Age_at_onset_of_symptoms_Intrauterine', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('pd_Age_at_presentation_year', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('pd_Age_at_presentation_month', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('pd_Age_at_presentation_day', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('pd_Age_at_presentation_Intrauterine', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('pd_Age_at_diagnosis_year', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('pd_Age_at_diagnosis_month', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('pd_Age_at_diagnosis_day', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('pd_Age_at_diagnosis_Intrauterine', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('pd_Pedigree_to_be_uploaded', models.FileField(blank=True, null=True, upload_to='uploads/%Y/%m/%d/')),
                ('pd_positive_family_history', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('pd_family_history_specify', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pd_Consanguinity', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('pd_Consanguinity_specify', models.CharField(blank=True, max_length=200, null=True)),
                ('pd_Ultrasound_findings', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pd_Polyhydramnios', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('pd_Fetal_echocardiography', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal'), ('Not Done', 'Not Done')], max_length=100, null=True)),
                ('pd_Fetal_echocardiography_specify', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pd_Natal_History_Type_of_delivery', models.CharField(blank=True, choices=[('caesarean', 'caesarean'), ('Vaginal', 'Vaginal')], max_length=100, null=True)),
                ('pd_Natal_History_Baby_cried_immediately_after_delivery', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('pd_Natal_History_Resuscitation_required', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('pd_Natal_History_o_2_Cpap', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('pd_Natal_History_ventilater', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('pd_Natal_History_Nursery_stay', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('pd_Birth_weight', models.FloatField(blank=True, null=True)),
                ('pd_Development_milestones', models.CharField(blank=True, choices=[('Delayed', 'Delayed'), ('Normal', 'Normal')], max_length=100, null=True)),
                ('pd_if_delayed_Motor', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('pd_if_delayed_Global', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('pd_if_delayed_Cognitive', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('pd_head', models.CharField(blank=True, max_length=200, null=True)),
                ('pd_face', models.CharField(blank=True, max_length=200, null=True)),
                ('pd_Eyes_Ptosis', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('pd_Large_tongue', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('pd_Others_specify', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pd_Ever_had_respiratory_distress', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('pd_No_of_episode', models.CharField(blank=True, choices=[('2', '2'), ('>2', '>2')], max_length=200, null=True)),
                ('pd_Ventilator_or_other_respiratory_support', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('pd_Mode_of_ventilation', models.CharField(blank=True, choices=[('Room-air', 'Room-air'), ('CPAP', 'CPAP'), ('INVASIVE VENTILATION', 'INVASIVE VENTILATION'), ('NON-INVASIVE VEANTILATION', 'NON-INVASIVE VEANTILATION')], max_length=200, null=True)),
                ('pd_Age_at_ventilator', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pd_Tracheostomy', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('pd_Was_weaning_off_from_ventilator_possible', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('pd_Feeding_difficulties', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('pd_Feeding', models.CharField(blank=True, choices=[('NG tube', 'NG tube'), ('OG tube feeding', 'OG tube feeding'), ('Gastrostomy', 'Gastrostomy')], max_length=200, null=True)),
                ('pd_date_started', models.CharField(blank=True, max_length=20, null=True)),
                ('pd_Protuberantabdomen', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('pd_Hepatomegaly', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('pd_Size_BCM', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pd_Span', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pd_Hernia', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('pd_Others', models.CharField(blank=True, max_length=20, null=True)),
                ('pd_Hernia_Others_specify', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pd_Edema', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('pd_Cyanosis', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('pd_Cardiac_medications_date_started', models.DateField(blank=True, null=True)),
                ('pd_Cardiac_medications_dose', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pd_Heart_rate', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pd_Gallop', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('pd_arrythmia', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('pd_Cardiac_medications', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('pd_Cardiac_medications_specify', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pd_Muscle_weakness', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('pd_Age_at_Onset_of_weakness', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pd_Onset_of_weakness', models.CharField(blank=True, choices=[('Upper Limbs', 'Upper Limbs'), ('Lower Limbs', 'Lower Limbs'), ('Both', 'Both')], max_length=200, null=True)),
                ('pd_Difficulty_in_sitting_from_lying_position', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('pd_Difficulty_in_standing_from_standing_position', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('pd_Wheelchair_bound', models.CharField(blank=True, choices=[('Ambulatory', 'Ambulatory'), ('Wheelchair bound', 'Wheelchair bound'), ('Bedridden', 'Bedridden'), ('Other motor assisted devices', 'Other motor assisted devices'), ('Not yet attained ambulation', 'Not yet attained ambulation')], max_length=200, null=True)),
                ('pd_Age_at_Wheelchair_bound', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pd_Sleep_disturbances_apnea', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('pd_Hypotonia', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('pd_Proximal_muscle_weakness_in_upper_extremities', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('pd_Distal_muscle_weakness_in_upper_extremities', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('pd_Proximal_muscle_weakness_in_lower_extremities', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('pd_Distal_muscle_weakness_in_lower_extremities', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('pd_Neck_muscle_weakness', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('pd_Muscle_weakness_in_trunk', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('pd_Reflexes', models.CharField(blank=True, choices=[('Present', 'Present'), ('Absent', 'Absent')], max_length=200, null=True)),
                ('pd_Gower_positive', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('pd_Contractures', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('pd_Abnormal_Gait', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('pd_Muscles_of_respiration_involved', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('pd_bulbar_and_lingual_weakness', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('pd_if_yes', models.CharField(blank=True, choices=[('dysarthria', 'dysarthria'), ('dysphagia', 'dysphagia')], max_length=200, null=True)),
                ('pd_Rigid_spine', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('pd_Higher_mental_functions', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal')], max_length=200, null=True)),
                ('pd_Cranial_nerve_involvement', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('pd_Altered_or_reduced_visual_acuity', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('pd_Hearing_loss', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('pd_Foot_drop', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('pd_Radiography_of_chest_to_assess_for_cardiomegaly', models.CharField(blank=True, choices=[('Cardiomegaly Present', 'Cardiomegaly Present'), ('Cardiomegaly Absent', 'Cardiomegaly Absent'), ('Not done', 'Not done')], max_length=100, null=True)),
                ('pd_ECG', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('abnormal', 'abnormal')], max_length=200, null=True)),
                ('pd_Short_PR', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('pd_Tall_broad_QRS', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('pd_ECHO_date', models.DateField(blank=True, null=True)),
                ('pd_ECHO', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal')], max_length=200, null=True)),
                ('pd_ECHO_specify', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pd_PFT_date', models.DateField(blank=True, null=True)),
                ('pd_PFT', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('abnormal', 'abnormal'), ('Not Done', 'Not Done')], max_length=200, null=True)),
                ('pd_PFT_Supine_FVC', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pd_PFT_Sitting_FVC', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pd_PFT_Supine_FEV1', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pd_PFT_Sitting_FEV1', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pd_PFT_Mean_Inspiratory_Pressure', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pd_PFT_Mean_Expiratory_Pressure', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pd_Swallow_study', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal'), ('Not Done', 'Not Done')], max_length=200, null=True)),
                ('pd_Swallow_study_specify', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pd_Biochemical_testing_date', models.DateField(blank=True, null=True)),
                ('pd_CK', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pd_CK_MB', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pd_AST', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pd_ALT', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pd_LDH', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pd_Enzyme_analysis_uploaded', models.FileField(blank=True, null=True, upload_to='uploads/%Y/%m/%d/')),
                ('pd_Enzyme_analysis_done', models.CharField(blank=True, choices=[('DBS', 'DBS'), ('Blood', 'Blood')], max_length=200, null=True)),
                ('pd_Sample_date_done', models.DateField(blank=True, null=True)),
                ('pd_patien', models.CharField(blank=True, max_length=200, null=True)),
                ('pd_contro', models.CharField(blank=True, max_length=200, null=True)),
                ('pd_nor_ran', models.CharField(blank=True, max_length=200, null=True)),
                ('pd_CRIM_Status', models.CharField(blank=True, choices=[('Negative', 'Negative'), ('Positive', 'Positive'), ('Not Done', 'Not Done')], max_length=200, null=True)),
                ('pd_Causative_DNA_sequence_variat', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('pd_molecular_upload', models.FileField(blank=True, null=True, upload_to='uploads/%Y/%m/%d/')),
                ('pd_Patient_molecular', models.CharField(blank=True, max_length=100, null=True)),
                ('pd_Gene_molecula', models.CharField(blank=True, max_length=100, null=True)),
                ('pd_trans_molecul', models.CharField(blank=True, max_length=100, null=True)),
                ('pd_mul_dna1', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pd_mul_pro1', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pd_mul_var1', models.CharField(blank=True, choices=[('Novel', 'Novel '), ('Reported', 'Reported')], max_length=100, null=True)),
                ('pd_mul_zygo1', models.CharField(blank=True, choices=[('Homozygous', 'Homozygous '), ('Heterozygous', 'Heterozygous'), ('Hemizygous', 'Hemizygous')], max_length=100, null=True)),
                ('pd_mul_var_cla1', models.CharField(blank=True, choices=[('Pathogenic ', 'Pathogenic '), ('Likely Pathogenic', 'Likely Pathogenic'), ('Variant of uncertain significance ', 'Variant of uncertain significance')], max_length=100, null=True)),
                ('pd_mul_dna2', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pd_mul_pro2', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pd_mul_var2', models.CharField(blank=True, choices=[('Novel', 'Novel '), ('Reported', 'Reported')], max_length=100, null=True)),
                ('pd_mul_zygo2', models.CharField(blank=True, choices=[('Homozygous', 'Homozygous '), ('Heterozygous', 'Heterozygous'), ('Hemizygous', 'Hemizygous')], max_length=100, null=True)),
                ('pd_mul_var_cla2', models.CharField(blank=True, choices=[('Pathogenic ', 'Pathogenic '), ('Likely Pathogenic', 'Likely Pathogenic'), ('Variant of uncertain significance ', 'Variant of uncertain significance')], max_length=100, null=True)),
                ('pd_mul_seg', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('pd_father', models.CharField(blank=True, max_length=100, null=True)),
                ('pd_mother', models.CharField(blank=True, max_length=100, null=True)),
                ('pd_ERT', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=30, null=True)),
                ('pd_ERT_enz', models.CharField(blank=True, max_length=30, null=True)),
                ('pd_Date_Initiation', models.DateField(blank=True, null=True)),
                ('pd_Age_of_Start', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pd_Dosage', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pd_Duration', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pd_Adverse_events', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('pd_Adverse_events_specify', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pd_Response', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('pd_Immunomodulation', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('pd_Immunomodulation_methotrexate', models.BooleanField(default=False)),
                ('pd_Immunomodulation_rituximab', models.BooleanField(default=False)),
                ('pd_Immunomodulation_ivig', models.BooleanField(default=False)),
                ('pd_Current_ERT_Status', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pd_Ongoing', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('pd_Any_interruption', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pd_Reason_for_interruption', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pd_Duration_of_interruption', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pd_moto_ass', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('pd_moto_sca', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pd_moto_qmft', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pd_moto_gsgc', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pd_moto_wlk_ts', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pd_Physiotherapy_date', models.DateField(blank=True, null=True)),
                ('pd_filed_by_DEO_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pd_clinician_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('pd_date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('pd_filled_date', models.DateField(blank=True, null=True)),
                ('pd_Finaldiagnosis', models.CharField(blank=True, choices=[('Late Onset Pompe Diesase', 'Late Onset Pompe Diesase'), ('Infantile Onset Pompe Diesase', 'Infantile Onset Pompe Diesase')], max_length=100, null=True)),
                ('pd_Finaloutcomes', models.CharField(blank=True, choices=[('Death', 'Death'), ('Alive', 'Alive'), ('Followup required', 'Followup required'), ('Unknown', 'Unknown')], max_length=100, null=True)),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='patient_pompe', to='pompe.profile_pompe')),
                ('register', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.register')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
