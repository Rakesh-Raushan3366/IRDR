# Generated by Django 4.0.3 on 2023-06-06 10:11

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '0011_opd_attendance_pre_total'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='profile_mucopolysaccharidosis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quality_status', models.CharField(blank=True, choices=[('Pending', 'Pending'), ('Resubmitted', 'Resubmitted'), ('Completed', 'Completed')], max_length=20, null=True)),
                ('muco_final_diagnosis', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('muco_date_of_records', models.DateField(blank=True, null=True)),
                ('muco_date_of_clinical_exam', models.DateField(blank=True, null=True)),
                ('muco_date_of_birth', models.DateField(blank=True, null=True)),
                ('muco_patient_name', models.CharField(max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('muco_father_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('muco_mother_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('muco_paitent_id_yes_no', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('muco_paitent_id', models.CharField(blank=True, choices=[('Aadhar card', 'Aadhar card'), ('Driving license', 'Driving license'), ('Voter id', 'Voter id'), ('Rations card', 'Rations card'), ('PAN card', 'PAN card'), ('BPL card', 'BPL card'), ('SECC card', 'SECC card'), ('Aabha Id', 'Aabha Id')], max_length=100, null=True)),
                ('muco_patient_id_no', models.CharField(blank=True, max_length=100, null=True, unique=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('muco_patient_age', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('muco_father_mother_id', models.CharField(blank=True, choices=[('Aadhar card', 'Aadhar card'), ('Driving license', 'Driving license'), ('Voter id', 'Voter id'), ('Rations card', 'Rations card'), ('PAN card', 'PAN card'), ('BPL card', 'BPL card'), ('SECC card', 'SECC card'), ('Aabha Id', 'Aabha Id')], max_length=100, null=True)),
                ('muco_mother_father_id_no', models.PositiveBigIntegerField(blank=True, null=True, unique=True)),
                ('muco_permanent_addr', models.CharField(blank=True, max_length=500, null=True, validators=[django.core.validators.MaxLengthValidator(500)])),
                ('muco_city_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('muco_country_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('muco_mother_mobile_no', models.PositiveBigIntegerField(null=True, unique=True)),
                ('muco_father_mobile_no', models.PositiveBigIntegerField(blank=True, null=True)),
                ('muco_land_line_no', models.PositiveBigIntegerField(blank=True, null=True)),
                ('muco_email', models.EmailField(blank=True, max_length=300, null=True)),
                ('muco_religion', models.CharField(blank=True, choices=[('Hindu', 'Hindu'), ('Muslim', 'Muslim'), ('Christian', 'Christian'), ('Sikh', 'Sikh'), ('Others', 'Others')], max_length=100, null=True)),
                ('muco_caste', models.CharField(blank=True, choices=[('Scheduled caste', 'Scheduled caste'), ('Scheduled tribe', 'Scheduled tribe'), ('Others', 'Others')], max_length=100, null=True)),
                ('muco_referred_status', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('muco_referred_by', models.CharField(blank=True, choices=[('General practitioner', 'General practitioner'), ('Physician', 'Physician'), ('Neurologist', 'Neurologist'), ('Any others', 'Any others')], max_length=100, null=True)),
                ('muco_referred_by_desc', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('muco_gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', ' Female'), ('Transgender', 'Transgender')], max_length=100, null=True)),
                ('muco_consent_given', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('muco_consent_upload', models.FileField(blank=True, null=True, upload_to='uploads/%Y/%m/%d/')),
                ('muco_assent_given', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('muco_assent_upload', models.FileField(blank=True, null=True, upload_to='uploads/%Y/%m/%d/')),
                ('muco_hospital_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('muco_hospital_reg_no', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('muco_icmr_unique_no', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('muco_date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('quality_result', models.CharField(blank=True, choices=[('Pass', 'Pass'), ('Fail', 'Fail')], max_length=10, null=True)),
                ('quality_reason', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('uniqueId', models.CharField(blank=True, max_length=500, null=True)),
                ('complete', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Na', 'Na')], default='No', max_length=10, null=True)),
                ('muco_district', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.district', verbose_name=' district')),
                ('muco_state', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.state', verbose_name=' state')),
                ('qa_register', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='qa_register_muco', to='account.register')),
                ('qa_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='qa_user_muco', to=settings.AUTH_USER_MODEL)),
                ('register', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.register')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='demographic_mucopolysaccharidosis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_status', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('education_status_of_patient', models.CharField(blank=True, choices=[('Illiterate', 'Illiterate'), ('Primary', 'Primary'), ('High School', 'High School'), ('Secondary Level', 'Secondary Level'), ('College and above', 'College and above')], max_length=50, null=True)),
                ('occupation_of_patient', models.CharField(blank=True, choices=[('Employed (organised sector)', 'Employed (organised sector)'), ('Employed (Unorganised sector) ', 'Employed (Unorganised sector)'), ('Home maker', 'Home maker'), ('Others', 'Others')], max_length=50, null=True)),
                ('education_status_of_father', models.CharField(blank=True, choices=[('Illiterate', 'Illiterate'), ('Primary', 'Primary'), ('High School', 'High School'), ('Secondary Level', 'Secondary Level'), ('College and above', 'College and above')], max_length=50, null=True)),
                ('occupation_of_father', models.CharField(blank=True, choices=[('Employed (organised sector)', 'Employed (organised sector)'), ('Employed (Unorganised sector) ', 'Employed (Unorganised sector)'), ('Home maker', 'Home maker'), ('Others', 'Others')], max_length=50, null=True)),
                ('education_status_of_mother', models.CharField(blank=True, choices=[('Illiterate', 'Illiterate'), ('Primary', 'Primary'), ('High School', 'High School'), ('Secondary Level', 'Secondary Level'), ('College and above', 'College and above')], max_length=50, null=True)),
                ('occupation_of_mother', models.CharField(blank=True, choices=[('Employed (organised sector)', 'Employed (organised sector)'), ('Employed (Unorganised sector) ', 'Employed (Unorganised sector)'), ('Home maker', 'Home maker'), ('Others', 'Others')], max_length=50, null=True)),
                ('family_income', models.CharField(blank=True, choices=[('> 126,360', '> 126,360'), ('63,182 – 126,356', '63,182 – 126,356'), ('47,266 – 63,178', '47,266 – 63,178'), ('31,591 - 47,262', '31,591 - 47,262'), ('18,953 - 31,589', '18,953 - 31,589'), ('6,327 - 18,949', '6,327 - 18,949'), ('< 6,323', '< 6,323')], default='No', max_length=50, null=True)),
                ('gl_anth_wght_pat', models.CharField(blank=True, max_length=50, null=True)),
                ('gl_anth_wght_exp', models.CharField(blank=True, max_length=50, null=True)),
                ('gl_anth_wght_per', models.CharField(blank=True, max_length=50, null=True)),
                ('gl_anth_wght_sd', models.CharField(blank=True, max_length=50, null=True)),
                ('gl_anth_height_pat', models.CharField(blank=True, max_length=50, null=True)),
                ('gl_anth_height_exp', models.CharField(blank=True, max_length=50, null=True)),
                ('gl_anth_height_per', models.CharField(blank=True, max_length=50, null=True)),
                ('gl_anth_height_sd', models.CharField(blank=True, max_length=50, null=True)),
                ('gl_anth_seg_pat', models.CharField(blank=True, max_length=50, null=True)),
                ('gl_anth_seg_exp', models.CharField(blank=True, max_length=50, null=True)),
                ('gl_anth_seg_per', models.CharField(blank=True, max_length=50, null=True)),
                ('gl_anth_seg_sd', models.CharField(blank=True, max_length=50, null=True)),
                ('gl_anth_ratio_pat', models.CharField(blank=True, max_length=50, null=True)),
                ('gl_anth_ratio_exp', models.CharField(blank=True, max_length=50, null=True)),
                ('gl_anth_ratio_per', models.CharField(blank=True, max_length=50, null=True)),
                ('gl_anth_ratio_sd', models.CharField(blank=True, max_length=50, null=True)),
                ('gl_anth_head_cir_pat', models.CharField(blank=True, max_length=50, null=True)),
                ('gl_anth_head_cir_exp', models.CharField(blank=True, max_length=50, null=True)),
                ('gl_anth_head_cir_per', models.CharField(blank=True, max_length=50, null=True)),
                ('gl_anth_head_cir_sd', models.CharField(blank=True, max_length=50, null=True)),
                ('Age_at_Onset_of_symptoms_years', models.IntegerField(blank=True, null=True)),
                ('Age_at_Onset_of_symptoms_months', models.IntegerField(blank=True, null=True)),
                ('Age_at_Onset_of_symptoms_day', models.IntegerField(blank=True, null=True)),
                ('Age_at_Onset_of_symptoms_intrauterine', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Age_at_Presentation_years', models.IntegerField(blank=True, null=True)),
                ('Age_at_Presentation_months', models.IntegerField(blank=True, null=True)),
                ('Age_at_Presentation_day', models.IntegerField(blank=True, null=True)),
                ('Age_at_Presentation_intrauterine', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Age_at_diagnosis_years', models.IntegerField(blank=True, null=True)),
                ('Age_at_diagnosis_months', models.IntegerField(blank=True, null=True)),
                ('Age_at_diagnosis_day', models.IntegerField(blank=True, null=True)),
                ('Age_at_diagnosis_intrauterine', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Pedigree_generation_upload', models.FileField(blank=True, null=True, upload_to='uploads/%Y/%m/%d/')),
                ('positive_family_history', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('family_history_specify', models.CharField(blank=True, max_length=50, null=True)),
                ('consanguinity', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('consanguinity_mention_degree', models.CharField(blank=True, max_length=50, null=True)),
                ('antenatal_findings', models.CharField(blank=True, choices=[('normal', 'normal'), ('abnormal', 'abnormal')], max_length=50, null=True)),
                ('if_abnormal_specify', models.CharField(blank=True, choices=[('polyhydramnios', 'polyhydramnios'), ('hydrops', 'hydrops'), ('other specify', 'other specify')], max_length=200, null=True)),
                ('antenatal_present_absent', models.CharField(blank=True, choices=[('present', 'present'), ('absent', 'absent')], max_length=200, null=True)),
                ('antenatal_other_specify', models.CharField(blank=True, max_length=50, null=True)),
                ('type_of_delivery', models.CharField(blank=True, choices=[('Caesarean', 'Caesarean'), ('Vaginal', 'Vaginal')], max_length=50, null=True)),
                ('baby_cried_immediately_after_delivery', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('resuscitation_required', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('yes_specify', models.CharField(blank=True, max_length=200, null=True)),
                ('specify', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('birth_weight', models.CharField(blank=True, max_length=50, null=True)),
                ('developmental_milestones', models.CharField(blank=True, choices=[('Delayed', 'Delayed'), ('Normal', 'Normal')], max_length=50, null=True)),
                ('motor', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('cognitive', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('globall', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('mental_retardation_Delay', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Neuroregression', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('behavioural_problems', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Hyperactivity', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('On_some_drugs', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Seizures', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('On_some_antiepileptics_drugs', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Symptoms', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Recurrent_diarrheoa', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Recurrent_pneumonia', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('persistent_upper_respiratory_symptoms', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Sleep_disturbance', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Snoring', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Visual_problem', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Deafness', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Chronic_otitis_media', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Use_of_hearing_aid', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('PE_ear_tube_placement', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Any_surgery_for_hernia_or_others', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Functional_status', models.CharField(blank=True, choices=[('Ambulatory', 'Ambulatory'), ('Wheel chair', 'Wheel chair'), ('bed ridden', 'bed ridden')], max_length=50, null=True)),
                ('face_coarse', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('enlarged_tongue', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('head_shape', models.CharField(blank=True, choices=[('normal', 'normal'), ('Dolichocephaly', 'Dolichocephaly'), ('Craniosynostosis', 'Craniosynostosis'), ('trigonocephaly', 'trigonocephaly')], max_length=50, null=True)),
                ('skin', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('pebbly_MPSII', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('mongolian_spots_at_back', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('ichthyosis', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('stiff_thick_skin', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('telangiectasia', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('edema', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('hydrops', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Tone', models.CharField(blank=True, choices=[('normal', 'normal'), ('increased', 'increased'), ('decreased', 'decreased')], max_length=50, null=True)),
                ('Power', models.CharField(blank=True, choices=[('normal', 'normal'), ('decreased', 'decreased')], max_length=50, null=True)),
                ('upper_l', models.CharField(blank=True, choices=[('0', '0'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=50, null=True)),
                ('upper_r', models.CharField(blank=True, choices=[('0', '0'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=50, null=True)),
                ('lower_0r', models.CharField(blank=True, choices=[('0', '0'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=50, null=True)),
                ('lower_0l', models.CharField(blank=True, choices=[('0', '0'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=50, null=True)),
                ('Reflexes', models.CharField(blank=True, choices=[('brisk', 'brisk'), ('normal', 'normal')], max_length=50, null=True)),
                ('ataxia', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Signs_of_raised_ICT', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Symptoms_of_CTS', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('IQ', models.CharField(blank=True, choices=[('done', 'done'), ('not done', 'not done')], max_length=50, null=True)),
                ('iq_value', models.CharField(blank=True, max_length=50, null=True)),
                ('DQ', models.CharField(blank=True, choices=[('done', 'done'), ('not done', 'not done')], max_length=50, null=True)),
                ('dq_value', models.CharField(blank=True, max_length=50, null=True)),
                ('corneal_clouding', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('papilledema', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('glaucoma', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('optic_nerve_atrophy', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('retinal_degeneration_pigmentation', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('corneal_opacity', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('cataract', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('squint', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('nystagmus', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('any_other_specify', models.CharField(blank=True, max_length=200, null=True)),
                ('Cardiomyopathy', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Congestive_Heart_failure', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Cor_pulomonale', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Valvular_involvement', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Stenosis_which_valve_mitral', models.BooleanField(default=False)),
                ('Stenosis_which_valv_tricuspid', models.BooleanField(default=False)),
                ('Stenosis_which_val_aortic', models.BooleanField(default=False)),
                ('Stenosis_which_va_pulmonary', models.BooleanField(default=False)),
                ('Regurgitation_which_valve_mitral', models.BooleanField(default=False)),
                ('Regurgitation_which_valv_tricuspid', models.BooleanField(default=False)),
                ('Regurgitation_which_val_aortic', models.BooleanField(default=False)),
                ('Regurgitation_which_va_pulmonary', models.BooleanField(default=False)),
                ('Enlarged_tonsils', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Sleep_apnea', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Reactive_Airway_Disease', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Dyspnea', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Gum_hyperplasia', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('hepatomegaly', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('size_hepatomegaly', models.CharField(blank=True, max_length=5, null=True)),
                ('span_hepatomegaly', models.CharField(blank=True, max_length=5, null=True)),
                ('Splenomegaly', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('size_splenomegaly', models.CharField(blank=True, max_length=5, null=True)),
                ('span_splenomegaly', models.CharField(blank=True, max_length=5, null=True)),
                ('hernia', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('specify_if', models.CharField(blank=True, max_length=100, null=True)),
                ('Umbilical_hernia', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Inguinal_hernia', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Joint_Contractures', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Joint_arthritis', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Joint_laxity', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Scoliosis', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Kyphosis_Gibbus', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Genu_valgum', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Pes_Cavus', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Toe_Walking', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Echocardiography', models.CharField(blank=True, choices=[('normal', 'normal'), ('abnormal', 'abnormal'), ('not done', 'not done')], max_length=20, null=True)),
                ('abnormal_finding', models.CharField(blank=True, max_length=50, null=True)),
                ('Ultrasonography', models.CharField(blank=True, choices=[('normal', 'normal'), ('abnormal', 'abnormal'), ('not done', 'not done')], max_length=10, null=True)),
                ('Liver_Size_volume', models.CharField(blank=True, max_length=5, null=True)),
                ('Spleen_Size_Volume', models.CharField(blank=True, max_length=5, null=True)),
                ('Skull_J_shaped_sella', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Spine_Beaked_vertebra', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Central_lower_tick', models.CharField(blank=True, max_length=5, null=True)),
                ('Metacarpals_Bullet_shaped', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Ribs_oar_shaped', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Pelvis_Hip_dysplasia', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Dislocation_of_hip', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Flared_iliac_wings', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Long_bones', models.CharField(blank=True, choices=[('Stippled epiphyses ', 'Stippled epiphyses '), ('metaphyseal dysplasia', 'metaphyseal dysplasia')], max_length=32, null=True)),
                ('Dexa_Z_score', models.CharField(blank=True, choices=[('done', 'done'), ('not done', 'not done')], max_length=32, null=True)),
                ('if_done_specify', models.CharField(blank=True, max_length=100, null=True)),
                ('EPS_for_CTS', models.CharField(blank=True, choices=[('normal', 'normal'), ('abnormal', 'abnormal'), ('not done', 'not done')], max_length=10, null=True)),
                ('If_abnormal_specify_findings', models.CharField(blank=True, max_length=100, null=True)),
                ('Pulmonary_function_test', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('if_yes', models.CharField(blank=True, choices=[('normal', 'normal'), ('abnormal', 'abnormal')], max_length=20, null=True)),
                ('if_abnormal_finding_specify', models.CharField(blank=True, max_length=200, null=True)),
                ('CT_Scan', models.CharField(blank=True, choices=[('normal', 'normal'), ('abnormal', 'abnormal'), ('not done', 'not done')], max_length=10, null=True)),
                ('Specify_findings_if_abnormall', models.CharField(blank=True, choices=[('Hydrocephalus', 'Hydrocephalus'), ('Craniosynostosis', 'Craniosynostosis')], max_length=100, null=True)),
                ('MRI_Brain', models.CharField(blank=True, choices=[('normal', 'normal'), ('abnormal', 'abnormal'), ('not done', 'not done')], max_length=10, null=True)),
                ('Specify_findings_if_abnormal_mri', models.CharField(blank=True, max_length=100, null=True)),
                ('EEG', models.CharField(blank=True, choices=[('normal', 'normal'), ('abnormal', 'abnormal'), ('not done', 'not done')], max_length=10, null=True)),
                ('Specify_findings_if_abnormal_eeg', models.CharField(blank=True, max_length=100, null=True)),
                ('Corneal_clouding1', models.CharField(blank=True, choices=[('present', 'present'), ('absent', 'absent')], max_length=10, null=True)),
                ('Fundus', models.CharField(blank=True, choices=[('normal', 'normal'), ('abnormal', 'abnormal'), ('not done', 'not done')], max_length=10, null=True)),
                ('Specify_if_abnormal', models.CharField(blank=True, max_length=100, null=True)),
                ('Glaucoma1', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Hearing_Assessment', models.CharField(blank=True, choices=[('normal', 'normal'), ('abnormal', 'abnormal'), ('not done', 'not done')], max_length=10, null=True)),
                ('If_abnormal_sel_Unilateral', models.BooleanField(default=False)),
                ('If_abnorma_sel_Bilateral', models.BooleanField(default=False)),
                ('If_abnorm_sel_Mild', models.BooleanField(default=False)),
                ('If_abnor_sel_Moderate', models.BooleanField(default=False)),
                ('If_abno_sel_Severe', models.BooleanField(default=False)),
                ('If_abn_sel_Profound', models.BooleanField(default=False)),
                ('if_abnormal', models.CharField(blank=True, choices=[('Unilateral', 'Unilatera'), ('Bilateral', 'Bilateral'), ('Mild', 'Mild'), ('Moderate', 'Moderate'), ('Severe', 'Severe'), ('Profound', 'Profound')], max_length=18, null=True)),
                ('Sleep_Studies', models.CharField(blank=True, choices=[('normal', 'normal'), ('abnormal', 'abnormal'), ('not done', 'not done')], max_length=10, null=True)),
                ('Specify_findings_if_abnormal', models.CharField(blank=True, max_length=100, null=True)),
                ('Urine_spot_test', models.CharField(blank=True, choices=[('normal', 'normal'), ('abnormal', 'abnormal'), ('not done', 'not done')], max_length=10, null=True)),
                ('Urinary_GAGs_analysis', models.CharField(blank=True, choices=[('normal', 'normal'), ('abnormal', 'abnormal'), ('not done', 'not done')], max_length=10, null=True)),
                ('Patient_urine', models.CharField(blank=True, max_length=100, null=True)),
                ('Normal_Control_urine', models.CharField(blank=True, max_length=100, null=True)),
                ('Normal_range_urine', models.CharField(blank=True, max_length=100, null=True)),
                ('enzyme_var', models.CharField(blank=True, choices=[('Alpha_L_iduronidase', 'Alpha_L_iduronidase'), ('Iduronate_sulfatase', 'Iduronate_sulfatase'), ('GALNS', 'GALNS'), ('b_galactosidase', 'b_galactosidase'), ('arylsulfatase_B', 'arylsulfatase_B'), ('other', 'other')], max_length=100, null=True)),
                ('enzyme_sam', models.CharField(blank=True, choices=[('DBS', 'DBS'), ('Plasma', 'Plasma'), ('Whole blood', 'Whole blood'), ('Skin Fibroblast', 'Skin Fibroblast'), ('Serum', 'Serum')], max_length=100, null=True)),
                ('Other_specify', models.CharField(blank=True, max_length=100, null=True)),
                ('Patient_enzyme', models.CharField(blank=True, max_length=100, null=True)),
                ('Normal_Control', models.CharField(blank=True, max_length=100, null=True)),
                ('Normal_range', models.CharField(blank=True, max_length=100, null=True)),
                ('Enzyme_upload', models.FileField(blank=True, null=True, upload_to='uploads/%Y/%m/%d/')),
                ('Causative_DNA_sequence_variation', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('molecular_upload', models.FileField(blank=True, null=True, upload_to='uploads/%Y/%m/%d/')),
                ('Patient_molecular', models.CharField(blank=True, max_length=100, null=True)),
                ('Gene_molecula', models.CharField(blank=True, max_length=100, null=True)),
                ('trans_molecul', models.CharField(blank=True, max_length=100, null=True)),
                ('mul_dna1', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mul_pro1', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mul_var1', models.CharField(blank=True, choices=[('Novel', 'Novel '), ('Reported', 'Reported')], max_length=100, null=True)),
                ('mul_zygo1', models.CharField(blank=True, choices=[('Homozygous', 'Homozygous '), ('Heterozygous', 'Heterozygous'), ('Hemizygous', 'Hemizygous')], max_length=100, null=True)),
                ('mul_var_cla1', models.CharField(blank=True, choices=[('Pathogenic ', 'Pathogenic '), ('Likely Pathogenic', 'Likely Pathogenic'), ('Variant of uncertain significance ', 'Variant of uncertain significance')], max_length=100, null=True)),
                ('mul_dna2', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mul_pro2', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mul_var2', models.CharField(blank=True, choices=[('Novel', 'Novel '), ('Reported', 'Reported')], max_length=100, null=True)),
                ('mul_zygo2', models.CharField(blank=True, choices=[('Homozygous', 'Homozygous '), ('Heterozygous', 'Heterozygous'), ('Hemizygous', 'Hemizygous')], max_length=100, null=True)),
                ('mul_var_cla2', models.CharField(blank=True, choices=[('Pathogenic ', 'Pathogenic '), ('Likely Pathogenic', 'Likely Pathogenic'), ('Variant of uncertain significance ', 'Variant of uncertain significance')], max_length=100, null=True)),
                ('mul_seg', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('father', models.CharField(blank=True, max_length=100, null=True)),
                ('mother', models.CharField(blank=True, max_length=100, null=True)),
                ('Enzyme_Replacement_Therapy', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Date_of_initiation', models.DateField(blank=True, null=True)),
                ('Age_of_Start', models.IntegerField(blank=True, null=True)),
                ('Dosage', models.CharField(blank=True, max_length=100, null=True)),
                ('Duration', models.IntegerField(blank=True, null=True)),
                ('Adverse_events', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('if_yes_specify', models.CharField(blank=True, max_length=100, null=True)),
                ('Any_interruption', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Reason_for_interruption', models.CharField(blank=True, max_length=100, null=True)),
                ('Duration_of_interruption', models.CharField(blank=True, max_length=100, null=True)),
                ('Response', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('Bone_Marrow_Transplantation', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('Donor', models.CharField(blank=True, max_length=100, null=True)),
                ('Hospital', models.CharField(blank=True, max_length=100, null=True)),
                ('Surgery', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('Hernia_surgery', models.CharField(blank=True, choices=[('Inguinal', 'Inguinal'), ('umbilical', 'umbilical')], max_length=100, null=True)),
                ('Age_at_surgery', models.CharField(blank=True, max_length=100, null=True)),
                ('Calcium_and_multivitamin_supplements', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Regular_Physiotherapy', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Any_ocular_medication', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('CPAP_BiPAP_for_sleep_apnea', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True)),
                ('Finaldiagnosis', models.CharField(blank=True, choices=[('MPS-I', 'MPS-I'), ('MPS-II', 'MPS-II'), ('MPS-III (a/b/c/d)', 'MPS-III (a/b/c/d)'), ('MPS-IV(a/b)', 'MPS-IV(a/b)'), ('MPS-VI', 'MPS-VI'), ('MPS-VII', 'MPS-VII'), ('Mucolipidosis', 'Mucolipidosis')], max_length=100, null=True)),
                ('Finaloutcomes', models.CharField(blank=True, choices=[('Death', 'Death'), ('Alive', 'Alive'), ('Followup required', 'Followup required'), ('Unknown', 'Unknown')], max_length=100, null=True)),
                ('mg_filed_by_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mg_clinician_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mg_filled_date', models.DateTimeField(blank=True, null=True)),
                ('mg_date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='patient_mucopoly', to='mucopoly.profile_mucopolysaccharidosis')),
                ('register', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.register')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
