# Generated by Django 4.0.3 on 2023-06-06 10:11

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '0011_opd_attendance_pre_total'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='profile_thalassemia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('th_final_diagnosis', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('th_date_record', models.DateField(blank=True, null=True)),
                ('date_clinical_examination', models.DateField(blank=True, null=True)),
                ('th_paitent_id', models.CharField(blank=True, choices=[('Aadhar card', 'Aadhar card'), ('Driving license', 'Driving license'), ('Voter id', 'Voter id'), ('Rations card', 'Rations card'), ('PAN card', 'PAN card'), ('BPL card', 'BPL card'), ('SECC card', 'SECC card'), ('Aabha Id', 'Aabha Id')], max_length=100, null=True)),
                ('th_patient_id_no', models.CharField(blank=True, max_length=100, null=True, unique=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('th_patient_age', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('th_patient_name', models.CharField(max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('th_father_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('th_mother_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('th_patient_adhaar_no', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('th_patient_adhaar_no_specify', models.CharField(blank=True, max_length=100, null=True, unique=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('th_father_id', models.CharField(blank=True, choices=[('Aadhar card', 'Aadhar card'), ('Driving license', 'Driving license'), ('Voter id', 'Voter id'), ('Rations card', 'Rations card'), ('PAN card', 'PAN card'), ('BPL card', 'BPL card'), ('SECC card', 'SECC card'), ('Aabha Id', 'Aabha Id')], max_length=100, null=True)),
                ('th_father_id_no', models.CharField(blank=True, max_length=100, null=True, unique=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('th_father_adhaar_no', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('th_permanent_addr', models.CharField(blank=True, max_length=500, null=True, validators=[django.core.validators.MaxLengthValidator(500)])),
                ('th_city_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('th_country_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('th_mother_mobile_no', models.PositiveBigIntegerField(null=True, unique=True)),
                ('th_father_mobile_no', models.PositiveBigIntegerField(blank=True, null=True)),
                ('th_land_line_no', models.PositiveBigIntegerField(blank=True, null=True)),
                ('th_email', models.EmailField(blank=True, max_length=300, null=True)),
                ('th_religion', models.CharField(blank=True, choices=[('Hindu', 'Hindu'), ('Muslim', 'Muslim'), ('Christian', 'Christian'), ('Sikh', 'Sikh'), ('Others', 'Others')], max_length=100, null=True)),
                ('th_religion_other_specify', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('th_caste', models.CharField(blank=True, choices=[('Scheduled caste', 'Scheduled caste'), ('Scheduled tribe', 'Scheduled tribe'), ('Others', 'Others')], max_length=100, null=True)),
                ('th_caste_other_specify', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('th_referred_status', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('th_referred_by', models.CharField(blank=True, choices=[('General practitioner', 'General practitioner'), ('Physician', 'Physician'), ('Neurologist', 'Neurologist'), ('Any others', 'Any others')], max_length=100, null=True)),
                ('th_referred_by_desc', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('th_gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', ' Female'), ('Transgender', 'Transgender')], max_length=100, null=True)),
                ('th_consent_given', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('th_consent_upload', models.FileField(blank=True, null=True, upload_to='uploads/%Y/%m/%d/')),
                ('th_assent_given', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('Unable to assent', 'Unable to assent')], max_length=30, null=True)),
                ('th_assent_upload', models.FileField(blank=True, null=True, upload_to='uploads/%Y/%m/%d/')),
                ('th_hospital_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('th_hospital_reg_no', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('th_icmr_unique_no', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('th_date_of_birth', models.DateField(blank=True, null=True)),
                ('th_nationality', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('th_date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('th_icmr_disease', models.CharField(blank=True, choices=[('Thalassemia', 'Thalassemia'), ('Glycogen', 'Glycogen'), ('Fabridisease', 'Fabridisease'), ('BleedingDisorder', 'BleedingDisorder')], max_length=100, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('uniqueId', models.CharField(blank=True, max_length=500, null=True, validators=[django.core.validators.MaxLengthValidator(500)])),
                ('quality_status', models.CharField(blank=True, choices=[('Pending', 'Pending'), ('Resubmitted', 'Resubmitted'), ('Completed', 'Completed')], max_length=20, null=True)),
                ('quality_result', models.CharField(blank=True, choices=[('Pass', 'Pass'), ('Fail', 'Fail')], max_length=10, null=True)),
                ('quality_reason', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('complete', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Na', 'Na')], default='No', max_length=10, null=True)),
                ('qa_register', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='qa_register_thalasemia', to='account.register')),
                ('qa_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='qa_user_thalasemia', to=settings.AUTH_USER_MODEL)),
                ('register', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.register')),
                ('th_district', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.district', verbose_name=' district')),
                ('th_state', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.state', verbose_name=' state')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='demographic_thalassemia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('th_patient_edu_status', models.CharField(blank=True, choices=[('Illiterate', 'Illiterate'), ('Primary', 'Primary'), ('High School', 'High School'), ('Secondary level', 'Secondary level'), ('College and above', 'College and above')], max_length=50, null=True)),
                ('th_patient_occupation', models.CharField(blank=True, choices=[('Employed (organised sector)', 'Employed (organised sector)'), ('Employed (Unorganised sector)', 'Employed (Unorganised sector)'), ('Others', 'Others')], max_length=50, null=True)),
                ('th_father_edu_status', models.CharField(blank=True, choices=[('Illiterate', 'Illiterate'), ('Primary', 'Primary'), ('High School', 'High School'), ('Secondary level', 'Secondary level'), ('College and above', 'College and above')], max_length=50, null=True)),
                ('th_father_occupation', models.CharField(blank=True, choices=[('Employed (organised sector)', 'Employed (organised sector)'), ('Employed (Unorganised sector)', 'Employed (Unorganised sector)'), ('Others', 'Others')], max_length=50, null=True)),
                ('th_mother_edu_status', models.CharField(blank=True, choices=[('Illiterate', 'Illiterate'), ('Primary', 'Primary'), ('High School', 'High School'), ('Secondary level', 'Secondary level'), ('College and above', 'College and above')], max_length=50, null=True)),
                ('th_mother_occupation', models.CharField(blank=True, choices=[('Home maker', 'Home maker)'), ('Employed (organised sector)', 'Employed (organised sector)'), ('Employed (Unorganised sector)', 'Employed (Unorganised sector)'), ('Others', 'Others')], max_length=50, null=True)),
                ('th_monthly_income_status', models.CharField(blank=True, choices=[('> 126,360', '> 126,360)'), ('63,182 – 126,356)', '63,182 – 126,356)'), ('47,266 – 63,178', '47,266 – 63,178'), ('31,591 - 47,262', '31,591 - 47,262'), ('18,953 - 31,589', '18,953 - 31,589'), ('6,327 - 18,949', '6,327 - 18,949'), ('< 6,323', '< 6,323')], max_length=50, null=True)),
                ('th_tribal', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('th_non_tribal_caste', models.CharField(blank=True, choices=[('Sindhi', 'Sindhi'), ('Lohana', 'Lohana'), ('Bhanushali ', 'Bhanushali '), ('Khatri', 'Khatri'), ('Arora', 'Arora'), ('Jain ', 'Jain '), ('Others', 'Others')], max_length=50, null=True)),
                ('th_diagnosis_type', models.CharField(blank=True, choices=[('Beta Thalassemia ', 'Beta Thalassemia '), ('Sickle cell anemia ', 'Sickle cell anemia'), ('Sickle Beta thalassemia', 'Sickle Beta thalassemia'), ('Sickle – Hemoglobin C disease', 'Sickle – Hemoglobin C disease'), ('Hemoglobin E – beta thalassemia', 'Hemoglobin E – beta thalassemia'), ('Hemoglobin D – beta thalassemia', 'Hemoglobin D – beta thalassemia'), ('Alpha thalassemia [Hb H disease', 'Alpha thalassemia [Hb H disease'), ('Any other', 'Any other')], max_length=50, null=True)),
                ('th_diagonosis_other_specify', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_presentation_age', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_diagnosis_age', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_pres_feature', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('th_pres_pallor', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('th_pres_yellowness', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('th_pres_rec_fever', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('th_pres_dist_abd', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('th_pres_lethargy', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('th_pres_fatigue', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('th_curr_child_age', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_consanguinity', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('th_sibling_aff', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('th_other_family_mem', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('th_other_family_mem_details', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('th_pedigree_upload', models.FileField(blank=True, null=True, upload_to='uploads/%Y/%m/%d/')),
                ('th_f_fatigue', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('th_f_dyspnoea', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('th_f_rec_fever', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('th_f_abdominal_pain', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('th_f_chest_pain', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('th_f_bone_joint_pain', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('th_f_any_other', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('th_f_any_other_specify', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_f_past_hist', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('th_crisis_num', models.IntegerField(blank=True, null=True)),
                ('th_crisis_num_last_12', models.IntegerField(blank=True, null=True)),
                ('th_acute_chest_syndrome', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('th_crisis_hyperhemolyitc', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('th_crisis_pain_pr_yr_before_hydoxyurea', models.IntegerField(blank=True, null=True)),
                ('th_crisis_pain_pr_yr_after_hydoxyurea', models.IntegerField(blank=True, null=True)),
                ('th_other_illness', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('th_other_illness_name', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_other_illness_age', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_other_illness_dur', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_height', models.FloatField(blank=True, null=True)),
                ('th_height_z_score', models.FloatField(blank=True, null=True)),
                ('th_weight', models.FloatField(blank=True, null=True)),
                ('th_weight_z_score', models.FloatField(blank=True, null=True)),
                ('th_hemolytic_facies', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('th_pallor', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('th_jaundice', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('th_edema', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('th_leg_ulcers', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('th_hepatomegaly', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Not done', 'Not done')], max_length=10, null=True)),
                ('th_splenomegaly', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Not done', 'Not done')], max_length=10, null=True)),
                ('th_any_systematic_anom', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('th_any_sys_ab_specify', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_neurological_abnor', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('th_neurological_abnor_option', models.CharField(blank=True, choices=[('Stroke', 'Stroke'), ('Transient ischemic attack [TIA]', 'Transient ischemic attack [TIA]'), ('Neuropathic pain', 'Neuropathic pain'), ('Other', 'Other')], max_length=32, null=True)),
                ('th_neurological_abnor_option_other', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_renal_involvement', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('th_renal_involvement_opts', models.CharField(blank=True, choices=[('Facial puffiness', 'Facial puffiness'), ('Decreased urine output', 'Decreased urine output'), ('Other', 'Other')], max_length=50, null=True)),
                ('th_renal_involvement_opts_other', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_feet_swelling', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=32, null=True)),
                ('th_clin_leg_ulcers', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('th_clin_gallstones', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('th_clin_gallstones_specify', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_iron_overload', models.CharField(blank=True, choices=[('Cardiac', 'Cardiac'), ('Endocrine', 'Endocrine'), ('Growth ', 'Growth')], max_length=10, null=True)),
                ('th_iron_overload_specify', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_iron_overload_yes_no', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('th_iron_overload_cardiac', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_iron_overload_Endocrine', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_iron_overload_Growth', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_hist_infection', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('th_hist_infection_opt', models.CharField(blank=True, choices=[('Pneumonia', 'Pneumonia'), ('Sepsis', 'Sepsis'), ('Osteomyelitis ', 'Osteomyelitis'), ('Other', 'Other')], max_length=50, null=True)),
                ('th_hist_infection_opt_other_specify', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_haem_wbc', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_haem_hb', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_haem_mcv', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_haem_mch', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_haem_mchc', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_haem_rbc_count', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_haem_rdw_per', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_haem_plts', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_haem_retic_count', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_red_cell_morphology', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=30, null=True)),
                ('th_red_cell_morphology_1', models.BooleanField(default=False)),
                ('th_red_cell_morphology_2', models.BooleanField(default=False)),
                ('th_red_cell_morphology_3', models.BooleanField(default=False)),
                ('th_red_cell_morphology_4', models.BooleanField(default=False)),
                ('th_red_cell_morphology_5', models.BooleanField(default=False)),
                ('th_red_cell_morphology_other', models.BooleanField(default=False)),
                ('th_red_cell_morphology_other_specify', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('th_haem_hba', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_haem_hbf', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_haem_hba2', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_haem_var_hb', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=30, null=True)),
                ('th_haem_var_hb_hbs', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_haem_var_hb_hbe', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_haem_var_hb_hbd', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_haem_var_hb_other_per', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_haem_var_hb_retention_time', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_haem_hpcl_det', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=30, null=True)),
                ('th_haem_hbh_incl', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=30, null=True)),
                ('th_haem_unstable_haem', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=30, null=True)),
                ('th_haem_mol_incl', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_mol_alpha_thal', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Not done', 'Not done')], max_length=10, null=True)),
                ('th_mol_alpha_thal_opt', models.CharField(blank=True, choices=[('αα/αα ', 'αα/αα'), ('αα/-α^3.7', 'αα/-α^3.7'), ('-α^3.7/-α^3.7', '-α^3.7/-α^3.7'), ('-α^4.2/-α^4.2', '-α^4.2/-α^4.2'), ('αα/--SA', 'αα/--SA'), ('αα/--SEA', 'αα/--SEA'), ('αα/--MED', 'αα/--MED')], max_length=32, null=True)),
                ('th_mol_hbh_thal_opt', models.CharField(blank=True, choices=[('-α^3.7/--SEA', '-α^3.7/--SEA'), ('-α^4.2 /--SA', '-α^4.2 /--SA'), ('Other', 'Other')], max_length=32, null=True)),
                ('th_mol_alpha_thal_opt_other', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_mol_beta_thal', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('th_mol_beta_thal_opt_1', models.BooleanField(default=False)),
                ('th_mol_beta_thal_opt_2', models.BooleanField(default=False)),
                ('th_mol_beta_thal_opt_3', models.BooleanField(default=False)),
                ('th_mol_beta_thal_opt_4', models.BooleanField(default=False)),
                ('th_mol_beta_thal_opt_5', models.BooleanField(default=False)),
                ('th_mol_beta_thal_opt_6', models.BooleanField(default=False)),
                ('th_mol_beta_thal_opt_7', models.BooleanField(default=False)),
                ('th_mol_beta_thal_opt_8', models.BooleanField(default=False)),
                ('th_mol_beta_thal_other_spec', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_mol_interpretaion', models.CharField(blank=True, choices=[('Heterozygote', 'Heterozygote'), ('Homozygote', 'Homozygote'), ('Compound Heterozygote', 'Compound Heterozygote')], max_length=50, null=True)),
                ('th_HPFH_test', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('th_HPFH_test_result', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_mol_alpha_beta_test', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('th_mol_alpha_beta_test_result', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_upload_report', models.FileField(blank=True, null=True, upload_to='uploads/%Y/%m/%d/')),
                ('th_curr_invest_date', models.DateField(blank=True, null=True)),
                ('th_curr_pretasnsfusion', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_curr_post_transfusion', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_curr_hiv', models.CharField(blank=True, choices=[('+', '+'), ('-', '-')], max_length=15, null=True)),
                ('th_curr_hbsag', models.CharField(blank=True, choices=[('+', '+'), ('-', '-')], max_length=15, null=True)),
                ('th_curr_hcv', models.CharField(blank=True, choices=[('+', '+'), ('-', '-')], max_length=15, null=True)),
                ('th_treat_recieved', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('th_bio_serum_ferritin', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_bio_serum_dehyd', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_bio_vitamin_b12', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_bio_folate_levels', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_bio_ser_bilirubin', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_bio_alan_amino', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_bio_ser_alkline', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_bio_alkaline_phas', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_bio_ser_calc', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_bio_ser_calc_ionized', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_bio_ser_phosp', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_bio_s_creatinine', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_bio_t4', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_bio_tsh', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_bio_s_cortisol_early', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_bio_s_cortisol_stimulates', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_bio_blood_sugar_fast', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_bio_blood_sugar_post_meal', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_ecg', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_ECHOcardiography', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_Any_other', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_bone_marrow_treat', models.CharField(blank=True, choices=[('Done', 'Done'), ('planned', 'planned'), ('No HLA matched donor', 'No HLA matched donor'), ('Not considered', 'Not considered'), ('under consideration', 'under consideration')], max_length=30, null=True)),
                ('th_bmt_done', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('th_bmt_done_outcome', models.CharField(blank=True, choices=[('Cured', 'Cured'), (' No engraftment', ' No engraftment')], max_length=30, null=True)),
                ('th_hyper_trans_therapy', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('th_inter_transfusion', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('th_splenectomy', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('th_splenectomy_age', models.FloatField(blank=True, null=True)),
                ('th_diagnosis_age1', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_transfusion', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('NA', 'NA')], max_length=10, null=True)),
                ('th_transfusion_age', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_transfusion_frequency', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_hydroxyurea', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Not done', 'Not done')], max_length=10, null=True)),
                ('th_hydroxyurea_dose', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_hydroxyurea_duration', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_pre_hydroxyurea_hb', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_post_hydroxyurea_hb', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_pre_hydroxyurea_trans', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_post_hydroxyurea_trans', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_hydroxyurea_pain', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_any_other_disease', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('th_any_other_disease_detail', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_chelation_status', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Not done', 'Not done')], max_length=10, null=True)),
                ('th_deferoxamine_dose', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_deferasirox_dose', models.CharField(blank=True, choices=[('Deferoxamine (Desferal)', 'Deferoxamine (Desferal)'), ('Deferasirox (Exjade)', 'Deferasirox (Exjade)'), ('Deferiprone (L1)', 'Deferiprone (L1)'), ('Other', 'Other')], max_length=50, null=True)),
                ('th_deferasirox_dose_other_specify', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_deferiprone_dose', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_other_dose', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_any_other_disease_dur', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_other_medication', models.CharField(blank=True, max_length=500, null=True, validators=[django.core.validators.MaxLengthValidator(500)])),
                ('th_final_diagnosis', models.CharField(blank=True, choices=[('Beta thalassemia major', 'Beta thalassemia major'), ('Non transfusion dependent beta thalassemia [Homozygous beta thalassemia]', 'Non transfusion dependent beta thalassemia [Homozygous beta thalassemia]'), ('Non transfusion dependent beta thalassemia [Heterozygous beta thalassemia]', 'Non transfusion dependent beta thalassemia [Heterozygous beta thalassemia]'), ('Beta thalassemia – Hb variant', 'Beta thalassemia – Hb variant'), ('Sickle cell disease', 'Sickle cell disease'), ('Hb H disease', 'Hb H disease'), ('Any other', 'Any other')], max_length=75, null=True)),
                ('th_f_diag_other_specify', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_comp_iron_overload', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('th_comp_iron_overload_detail', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('th_comp_iron_overload_beta_thalassemia_detail', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('th_impr_mngt', models.CharField(blank=True, choices=[('Well managed', 'Well managed'), ('Sub-optimally managed', 'Sub-optimally managed'), ('Poorly managed', 'Poorly managed')], max_length=30, null=True)),
                ('th_filled_by_deo_name', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_filled_by_name', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('th_filled_date', models.DateField(blank=True, null=True)),
                ('th_date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='patient_thalassemia', to='thalasemia.profile_thalassemia')),
                ('register', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.register')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
