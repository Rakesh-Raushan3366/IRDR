# Generated by Django 4.0.3 on 2023-06-06 10:11

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '0011_opd_attendance_pre_total'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='profile_metabolism',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mt_final_diagnosis', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_date_of_records', models.DateField(blank=True, null=True)),
                ('mt_date_of_clinical_exam', models.DateField(blank=True, null=True)),
                ('mt_date_of_birth', models.DateField(blank=True, null=True)),
                ('mt_patient_name', models.CharField(max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_father_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_mother_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_paitent_id_yes_no', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('mt_paitent_id', models.CharField(blank=True, choices=[('Aadhar card', 'Aadhar card'), ('Driving license', 'Driving license'), ('Voter id', 'Voter id'), ('Rations card', 'Rations card'), ('PAN card', 'PAN card'), ('BPL card', 'BPL card'), ('SECC card', 'SECC card'), ('Aabha Id', 'Aabha Id')], max_length=100, null=True)),
                ('mt_patient_id_no', models.CharField(blank=True, max_length=100, null=True, unique=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_patient_age', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_patient_adhaar_no', models.PositiveBigIntegerField(blank=True, null=True, unique=True)),
                ('mt_father_mother_id', models.CharField(blank=True, choices=[('Aadhar card', 'Aadhar card'), ('Driving license', 'Driving license'), ('Voter id', 'Voter id'), ('Rations card', 'Rations card'), ('PAN card', 'PAN card'), ('BPL card', 'BPL card'), ('SECC card', 'SECC card'), ('Aabha Id', 'Aabha Id')], max_length=100, null=True)),
                ('mt_mother_father_id_no', models.PositiveBigIntegerField(blank=True, null=True, unique=True)),
                ('mt_permanent_addr', models.CharField(blank=True, max_length=500, null=True, validators=[django.core.validators.MaxLengthValidator(500)])),
                ('mt_city_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_country_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_mother_mobile_no', models.PositiveBigIntegerField(null=True, unique=True)),
                ('mt_father_mobile_no', models.PositiveBigIntegerField(blank=True, null=True)),
                ('mt_land_line_no', models.PositiveBigIntegerField(blank=True, null=True)),
                ('mt_email', models.EmailField(blank=True, max_length=300, null=True)),
                ('mt_religion', models.CharField(blank=True, choices=[('Hindu', 'Hindu'), ('Muslim', 'Muslim'), ('Christian', 'Christian'), ('Sikh', 'Sikh'), ('Others', 'Others')], max_length=100, null=True)),
                ('mt_religion_other_specify', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_caste', models.CharField(blank=True, choices=[('Scheduled caste', 'Scheduled caste'), ('Scheduled tribe', 'Scheduled tribe'), ('Others', 'Others')], max_length=100, null=True)),
                ('mt_caste_other_specify', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_referred_status', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_referred_by', models.CharField(blank=True, choices=[('General practitioner', 'General practitioner'), ('Physician', 'Physician'), ('Neurologist', 'Neurologist'), ('Any others', 'Any others')], max_length=100, null=True)),
                ('mt_referred_by_desc', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', ' Female'), ('Transgender', 'Transgender')], max_length=100, null=True)),
                ('mt_consent_given', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_consent_upload', models.FileField(blank=True, null=True, upload_to='uploads/%Y/%m/%d/')),
                ('mt_assent_given', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_assent_upload', models.FileField(blank=True, null=True, upload_to='uploads/%Y/%m/%d/')),
                ('mt_hospital_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_hospital_reg_no', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_icmr_unique_no', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('mt_date', models.DateField(blank=True, null=True)),
                ('quality_status', models.CharField(blank=True, choices=[('Pending', 'Pending'), ('Resubmitted', 'Resubmitted'), ('Completed', 'Completed')], max_length=20, null=True)),
                ('quality_result', models.CharField(blank=True, choices=[('Pass', 'Pass'), ('Fail', 'Fail')], max_length=10, null=True)),
                ('quality_reason', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('uniqueId', models.CharField(blank=True, max_length=500, null=True)),
                ('complete', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Na', 'Na')], default='No', max_length=10, null=True)),
                ('mt_district', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.district', verbose_name=' district')),
                ('mt_state', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.state', verbose_name=' state')),
                ('qa_register', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='qa_register_iem', to='account.register')),
                ('qa_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='qa_user_iem', to=settings.AUTH_USER_MODEL)),
                ('register', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.register')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='demographic_matabolism',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mt_patient_edu_status', models.CharField(blank=True, choices=[('Illiterate', 'Illiterate'), ('Primary', 'Primary'), ('High School', 'High School'), ('Secondary level', 'Secondary level'), ('College and above', 'College and above')], max_length=50, null=True)),
                ('mt_patient_occupation', models.CharField(blank=True, choices=[('Employed (organised sector)', 'Employed (organised sector)'), ('Employed (Unorganised sector)', 'Employed (Unorganised sector)'), ('Others', 'Others')], max_length=50, null=True)),
                ('mt_father_edu_status', models.CharField(blank=True, choices=[('Illiterate', 'Illiterate'), ('Primary', 'Primary'), ('High School', 'High School'), ('Secondary level', 'Secondary level'), ('College and above', 'College and above')], max_length=50, null=True)),
                ('mt_father_occupation', models.CharField(blank=True, choices=[('Employed (organised sector)', 'Employed (organised sector)'), ('Employed (Unorganised sector)', 'Employed (Unorganised sector)'), ('Others', 'Others')], max_length=50, null=True)),
                ('mt_mother_edu_status', models.CharField(blank=True, choices=[('Illiterate', 'Illiterate'), ('Primary', 'Primary'), ('High School', 'High School'), ('Secondary level', 'Secondary level'), ('College and above', 'College and above')], max_length=50, null=True)),
                ('mt_mother_occupation', models.CharField(blank=True, choices=[('Home maker', 'Home maker)'), ('Employed (organised sector)', 'Employed (organised sector)'), ('Employed (Unorganised sector)', 'Employed (Unorganised sector)'), ('Others', 'Others')], max_length=50, null=True)),
                ('mt_monthly_income_status', models.CharField(blank=True, choices=[('> 126,360', '> 126,360)'), ('63,182 – 126,356)', '63,182 – 126,356)'), ('47,266 – 63,178', '47,266 – 63,178'), ('31,591 - 47,262', '31,591 - 47,262'), ('18,953 - 31,589', '18,953 - 31,589'), ('6,327 - 18,949', '6,327 - 18,949'), ('< 6,323', '< 6,323')], max_length=50, null=True)),
                ('mt_anthropometry_date', models.DateField(blank=True, null=True)),
                ('mt_anth_wght_pat', models.CharField(blank=True, max_length=10, null=True)),
                ('mt_anth_wght_per', models.CharField(blank=True, max_length=10, null=True)),
                ('mt_anth_wght_sd', models.CharField(blank=True, max_length=10, null=True)),
                ('mt_anth_height_pat', models.CharField(blank=True, max_length=10, null=True)),
                ('mt_anth_height_per', models.CharField(blank=True, max_length=10, null=True)),
                ('mt_anth_height_sd', models.CharField(blank=True, max_length=10, null=True)),
                ('mt_lower_segment_patient', models.CharField(blank=True, max_length=10, null=True)),
                ('mt_lower_segment_percemtile', models.CharField(blank=True, max_length=10, null=True)),
                ('mt_lower_segment_sd', models.CharField(blank=True, max_length=10, null=True)),
                ('mt_lower_us_ls_patient', models.CharField(blank=True, max_length=10, null=True)),
                ('mt_lower_us_ls_percemtile', models.CharField(blank=True, max_length=10, null=True)),
                ('mt_lower_us_ls_sd', models.CharField(blank=True, max_length=10, null=True)),
                ('mt_lower_arm_spam_patient', models.CharField(blank=True, max_length=10, null=True)),
                ('mt_lower_arm_spam_percemtile', models.CharField(blank=True, max_length=10, null=True)),
                ('mt_lower_arm_spam_sd', models.CharField(blank=True, max_length=10, null=True)),
                ('mt_anth_head_cir_pat', models.CharField(blank=True, max_length=10, null=True)),
                ('mt_anth_head_cir_perc', models.CharField(blank=True, max_length=10, null=True)),
                ('mt_anth_head_cir_sd', models.CharField(blank=True, max_length=10, null=True)),
                ('mt_presenting_complaints_years', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('mt_presenting_complaints_months', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('mt_presenting_complaints_day', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('mt_presenting_complaints_intrauterine', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_presenting_complaints_age_presentation_years', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('mt_presenting_complaints_age_presentation_months', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('mt_presenting_complaints_age_presentation_day', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('mt_presenting_complaints_age_presentation_intrauterine', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_presenting_complaints_age_diagnosis_years', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('mt_presenting_complaints_age_diagnosis_months', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('mt_presenting_complaints_age_diagnosis_day', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('mt_presenting_complaints_age_diagnosis_intrauterine', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_pedigree_upload', models.FileField(blank=True, null=True, upload_to='uploads/%Y/%m/%d/')),
                ('mt_fam_hist_status', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_fam_hist_descr', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('mt_cons_status', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_cons_degree_specify', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.MaxLengthValidator(50)])),
                ('mt_Inbreeding', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Inbreeding_specify_degree', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_Inbreeding_coefficient_degree', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_encephalopathic_presentation', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_encephalopathic_presentation_age_presentaion', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_encephalopathic_presentation_age_diagnosis', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_encephalopathic_presentation_duration', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_Presentation_neonatal_jaundice', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Presentation_neonatal_jaundice_age_presentation', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_Presentation_neonatal_jaundice_ae_diagnosis', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_Presentation_neonatal_jaundice_duraions', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_Presentation_cardiac_symptoms', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Presentation_cardiac_symptoms_age_presentation', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_Presentation_cardiac_symptoms_age_diagnosis', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_Presentation_cardiac_symptoms_duration', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_Presentation_refractory_epilepsy', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Presentation_refractory_epilepsy_age_presentation', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_Presentation_refractory_epilepsy_age_diagnosis', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_Presentation_refractory_epilepsy_duration', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_symptoms_after_long_normalcy', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_symptoms_after_long_normalcy_sugar', models.BooleanField(default=False)),
                ('mt_symptoms_after_long_normalcy_fruit_juice', models.BooleanField(default=False)),
                ('mt_symptoms_after_long_normalcy_fasting', models.BooleanField(default=False)),
                ('mt_symptoms_after_long_normalcy_protein_foods', models.BooleanField(default=False)),
                ('mt_symptoms_after_long_normalcy_febrile_illness', models.BooleanField(default=False)),
                ('mt_mental_retardation_or_dev_delay', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Neuroregression', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_mental_retardation_Motor', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_mental_retardation_Cognitive', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_mental_retardation_Global', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Age_onset_regression', models.FloatField(blank=True, null=True)),
                ('mt_Neuroregression_Motor', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Neuroregression_Cognitive', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Neuroregression_Global', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Behavioral_problems', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Vomiting', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Loose_stools', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Loose_stools_dropdown', models.CharField(blank=True, choices=[('single episode', 'single episode'), ('recurrent(>3 times /year)', 'recurrent(>3 times /year)')], max_length=30, null=True)),
                ('mt_Pneumonia', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Pneumonia_dropdown', models.CharField(blank=True, choices=[('single episode', 'single episode'), ('recurrent(>3 times /year)', 'recurrent(>3 times /year)')], max_length=30, null=True)),
                ('mt_Fever', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Fever_dropdown', models.CharField(blank=True, choices=[('single episode', 'single episode'), ('recurrent(>3 times /year)', 'recurrent(>3 times /year)')], max_length=30, null=True)),
                ('mt_Fever_type', models.CharField(blank=True, choices=[('Low grade', 'Low grade'), ('Moderate grade', 'Moderate grade'), ('High grade', 'High grade')], max_length=30, null=True)),
                ('mt_Lethargy', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Seizures', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Seizures_Partial', models.BooleanField(default=False)),
                ('mt_Seizures_generalized', models.BooleanField(default=False)),
                ('mt_Seizures_myoclonic', models.BooleanField(default=False)),
                ('mt_Seizures_other', models.BooleanField(default=False)),
                ('mt_Seizures_frequency', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_AntiConvulsant_therapy', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_AntiConvulsant_Monotherapy', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_AntiConvulsant_Monotherapy_drug_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_AntiConvulsant_Monotherapy_dose', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_AntiConvulsant_Polytherapy', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_AntiConvulsant_Polytherapy_drug_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_AntiConvulsant_Polytherapy_dose', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_history_nuroregression', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_history_nuroregression_text', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_history_diagnosis', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_history_diagnosis_text', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_history_mech_ventilation', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_history_mech_ventilation_text', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_history_mech_distention', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_history_mech_distention_text', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_HistoryPreviousAdmission', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_any_surgery', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_any_surgery_specify', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_Seizures_other_specify', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_Aversion_sweet_protein', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Excessive_crying', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Decreased_attention_span', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Speech_disturbances', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Decline_school_performance', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Clumsiness', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Ultrasound', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal'), ('Not done', 'Not done')], max_length=50, null=True)),
                ('mt_Ultrasound_abnormal_specify', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_History_liver_dysfunction', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_History_liver_dysfunction_trimester_pregnancy', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_Polyhydramnios', models.CharField(blank=True, choices=[('Present', 'Present'), ('Absent', 'Absent')], max_length=50, null=True)),
                ('mt_Ultrasound_Polyhydramnios', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Ultrasound_Oligoamnios', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Ultrasound_Skeletal_anomalies', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Ultrasound_Hydrops', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_any_other_antenatal_investigation', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_Delivery_type', models.CharField(blank=True, choices=[('Cesarean', 'Cesarean'), ('Vaginal', 'Vaginal')], max_length=20, null=True)),
                ('mt_Baby_cried_immediately_after_delivery', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Resuscitation_required', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Resuscitation_required_specify', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_Ventilation', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Ventilation_CPAP', models.BooleanField(default=False)),
                ('mt_Ventilation_NIV', models.BooleanField(default=False)),
                ('mt_Ventilation_MV', models.BooleanField(default=False)),
                ('mt_NICU_Stay', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Symptomatic_asymptomatic', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Shock', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Shock_catecholamine_sensitive', models.BooleanField(default=False)),
                ('mt_Shock_refractory', models.BooleanField(default=False)),
                ('mt_feeding_issues', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_feeding_issues_Regurgitation_oral_feed', models.BooleanField(default=False)),
                ('mt_feeding_issues_NG_feeding', models.BooleanField(default=False)),
                ('mt_feeding_issues_Parenteral', models.BooleanField(default=False)),
                ('mt_Neonatal_hyperbilurubinemia', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Neonatal_hyperbilurubinemia_direct', models.BooleanField(default=False)),
                ('mt_Neonatal_hyperbilurubinemia_indirect', models.BooleanField(default=False)),
                ('mt_Neonatal_hyperbilurubinemia_total_bill_value', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_Sepsis', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Sepsis_CultureProven', models.BooleanField(default=False)),
                ('mt_Sepsis_Clinical', models.BooleanField(default=False)),
                ('mt_Sepsis_Organism', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_CRRT_PD_required', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_EEG_natel', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal')], max_length=10, null=True)),
                ('mt_EEG_BurstSuppressionPattern_natel', models.BooleanField(blank=True, default=None)),
                ('mt_EEG_Hypsarrythmia_natel', models.BooleanField(blank=True, default=False)),
                ('mt_EEG_GeneralizedSlowing_natel', models.BooleanField(blank=True, default=False)),
                ('mt_EEG_Comb_like_pattern_natel', models.BooleanField(blank=True, default=False)),
                ('mt_facial_dysmorphism', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Facial_dysmorphism_upload_file', models.FileField(blank=True, null=True, upload_to='uploads/%Y/%m/%d/')),
                ('mt_Skin_Pigmentation', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Skin_Pigmentation_Hypopigmentation_diffuse', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Skin_Pigmentation_Hypopigmentation_patchy', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Skin_Pigmentation_Hypopigmentation', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Hirsutism', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Hirsutism_Facial', models.BooleanField(blank=True, default=None)),
                ('mt_Hirsutism_generalised', models.BooleanField(blank=True, default=None)),
                ('mt_Hemoglobinura', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Hyperpigmentation', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Hypopigmentation', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Hypopigmentation_type', models.CharField(blank=True, choices=[('Diffuse', 'Diffuse'), ('Patchy', 'Patchy')], max_length=10, null=True)),
                ('mt_Excessive_mongolion_spots', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Ichthyosis', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Telengiectasia', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Edema', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Hydrops', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Inverted_nipples', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_fat_distribution_Lipodystrophy', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Encephalopathy', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Hypotonia', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Hypertonia', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Brisk_reflexes', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_AnyOther_TremorJitteriness', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_AnyOther_chorea', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_AnyOther_athetosis', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Hyporeflexia', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Opisthotonus', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Other_Abnormal_Movement', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Tremor_chorea_athetosis', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Gait_abnormalities', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Optic_Nerve_atrophy', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Retinal_degeneration', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Cataract', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Squint', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Nystagmus_oculogyria', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Fundus_Abnormal', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Fundus_Abnormal_specify', models.CharField(blank=True, choices=[('Partial optic atrophy', 'Partial optic atrophy'), ('Complete optic atrophy', 'Complete optic atrophy')], max_length=50, null=True)),
                ('mt_cheery_red_spot', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_cheery_red_spot_specify', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_Murmur', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Congestive_Heart_Failure', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Cardio_myopathy', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Hepatomegaly', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Consistency', models.CharField(blank=True, choices=[('soft', 'soft'), ('firm', 'firm'), ('hard', 'hard')], max_length=10, null=True)),
                ('mt_surface', models.CharField(blank=True, choices=[('smooth', 'smooth'), ('nodular', 'nodular'), ('granular', 'granular')], max_length=10, null=True)),
                ('mt_margin', models.CharField(blank=True, choices=[('sharp', 'sharp'), ('rounded', 'rounded')], max_length=10, null=True)),
                ('mt_BCM_size', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_Span_cm', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_Splenomegaly', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Splenomegaly_size_cm', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_IQ', models.CharField(blank=True, choices=[('Done', 'Done'), ('Not Done', 'Not Done')], max_length=10, null=True)),
                ('mt_IQ_value', models.IntegerField(blank=True, null=True)),
                ('mt_DQ', models.CharField(blank=True, choices=[('Done', 'Done'), ('Not Done', 'Not Done')], max_length=10, null=True)),
                ('mt_DQ_value', models.IntegerField(blank=True, null=True)),
                ('mt_Any_other_findings', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_Hb_gm_dl', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_wbc_tc_ul', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_wbc_dc_perc', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_Absolut_Neutrophil_count_mm_3', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_Platelet_count_ul', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_Acanthocytes', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_S_calcium_mg_dl', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_S_phosphorous_mg_dl', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_S_alkaline_phosphate_UI', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_S_acid_phosphatase_U_L', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_CPK_U_L_total', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_MM_MB', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_Blood_Urea', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_Blood_creatinine_mg_dl', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_Serum_sodium_meq_l', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_Serum_potassium_meq_l', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_Total_protein_g_dl', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_Serum_albumin_g_dl', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_SGPT_IU_L', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_SGOT_IU_L', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_PT_sec', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_APTT_sec', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_TSB_mg_dl', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_DSB_mg_dl', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_IRON_IU_L', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_TIBC_IU_L', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_Lactate_mmol_l', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_Uric_acid_mg_dl', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_Blood_sugar_mg_dl', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_HbA1C_per', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_Total_Cholesterol_mg_dl', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_TGs_mg_dl', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_HDL_mg_dl', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_LDL_mg_dl', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_VLDL_mg_dl', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_Homocysteine_uml_l', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_Prolactin_ng_ml', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_Ultrasonography', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal'), ('Not done', 'Not done')], max_length=10, null=True)),
                ('mt_Ultrasonography_abnormal_speicfy', models.CharField(blank=True, choices=[('Liver', 'Liver'), ('Kidney', 'Kidney'), ('Spleen', 'Spleen'), ('Any adenoma', 'Any adenoma'), ('Any renal cysts', 'Any renal cysts')], max_length=100, null=True)),
                ('mt_Ultrasonography_abnormal_Liver', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_Ultrasonography_abnormal_Kidney', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_Ultrasonography_abnormal_Spleen', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_Ultrasonography_abnormal_AnyAdenoma', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Ultrasonography_abnormal_RenalCysts', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Skeletal_survey', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal'), ('Not done', 'Not done')], max_length=10, null=True)),
                ('mt_Skeletal_survey_Rickets', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Skeletal_survey_DysostosisMultiplex', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Skeletal_survey_ShortLimbs', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Skeletal_survey_SpineAbnormalities', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Skeletal_survey_ChondrodyplasiaPuncta', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_ctc_scan', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal'), ('Not done', 'Not done')], max_length=10, null=True)),
                ('mt_ctc_scan_ThalamusHypointesity', models.BooleanField(default=False)),
                ('mt_ctc_scan_calcification', models.BooleanField(default=False)),
                ('mt_ctc_scan_ventriculomegaly', models.BooleanField(default=False)),
                ('mt_ctc_scan_cerebralAtrophy', models.BooleanField(default=False)),
                ('mt_ctc_scan_infarct', models.BooleanField(default=False)),
                ('mt_ctc_scan_hemorrhage', models.BooleanField(default=False)),
                ('mt_ctc_scan_cerebraledema', models.BooleanField(default=False)),
                ('mt_ctc_scan_cysts', models.BooleanField(default=False)),
                ('mt_mri_brain_status', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal'), ('Not done', 'Not done')], max_length=10, null=True)),
                ('mt_mri_brain_corticalAtrophy', models.BooleanField(default=False)),
                ('mt_mri_brain_cerebellarAtrophy', models.BooleanField(default=False)),
                ('mt_mri_brain_ventriculomegaly', models.BooleanField(default=False)),
                ('mt_mri_brain_basalGangliaHypo', models.BooleanField(default=False)),
                ('mt_mri_brain_hyperintensity', models.BooleanField(default=False)),
                ('mt_mri_brain_deepGrayMatterHyperintensity', models.BooleanField(default=False)),
                ('mt_mri_brain_thalamicHypo', models.BooleanField(default=False)),
                ('mt_mri_brain_demyelinationDysmyelination', models.BooleanField(default=False)),
                ('mt_mri_brain_cerebralEdema', models.BooleanField(default=False)),
                ('mt_mri_brain_cysts', models.BooleanField(default=False)),
                ('mt_mri_brain_infarct', models.BooleanField(default=False)),
                ('mt_mri_brain_hemorrhage', models.BooleanField(default=False)),
                ('mt_mri_brain_other', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_mrs_done', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal'), ('Not done', 'Not done')], max_length=10, null=True)),
                ('mt_mrs_LactatePeak', models.BooleanField(default=False)),
                ('mt_mrs_NAAPeak', models.BooleanField(default=False)),
                ('mt_mrs_LowCreatininePeak', models.BooleanField(default=False)),
                ('mt_mrs_CholinePeak', models.BooleanField(default=False)),
                ('mt_echocardiography', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal'), ('Not done', 'Not done')], max_length=10, null=True)),
                ('mt_echocardiography_DialtedCardiomyopathy', models.BooleanField(default=False)),
                ('mt_echocardiography_hypertrophicCardiomyopathy', models.BooleanField(default=False)),
                ('mt_echocardiography_valvularAbnormality', models.BooleanField(default=False)),
                ('mt_echocardiography_structuralDefects', models.BooleanField(default=False)),
                ('mt_echocardiography_SpecifyStructuralDefect', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_echocardiography_EjectionFraction', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_eeg', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal'), ('Not done', 'Not done')], max_length=10, null=True)),
                ('mt_eeg_BurstSuppressionPattern', models.BooleanField(blank=True, default=None)),
                ('mt_eeg_Hypsarrythmia', models.BooleanField(blank=True, default=None)),
                ('mt_eeg_GeneralizedSlowing', models.BooleanField(blank=True, default=None)),
                ('mt_eeg_CombLikePattern', models.BooleanField(blank=True, default=None)),
                ('mt_eeg_abnormal_specify', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_ocular_examination_slit', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_veps', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal'), ('Not Done', 'Not Done')], max_length=10, null=True)),
                ('mt_veps_abnormal_latency', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_erg', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal'), ('Not Done', 'Not Done')], max_length=10, null=True)),
                ('mt_erg_abnormal_specify', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_OAE_BERA', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal'), ('Not Done', 'Not Done')], max_length=10, null=True)),
                ('mt_OAE_BERA_Unilateral', models.BooleanField(default=False)),
                ('mt_OAE_BERA_bilateral', models.BooleanField(default=False)),
                ('mt_OAE_BERA_mild', models.BooleanField(default=False)),
                ('mt_OAE_BERA_moderate', models.BooleanField(default=False)),
                ('mt_OAE_BERA_severe', models.BooleanField(default=False)),
                ('mt_OAE_BERA_profoundHearingLoss', models.BooleanField(default=False)),
                ('mt_nerve_conduction_study', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal'), ('Not Done', 'Not Done')], max_length=10, null=True)),
                ('mt_nerve_conduction_study_motor', models.BooleanField(default=False)),
                ('mt_nerve_conduction_study_sensory', models.BooleanField(default=False)),
                ('mt_nerve_conduction_study_mixed', models.BooleanField(default=False)),
                ('mt_nerve_conduction_study_upperLimb', models.BooleanField(default=False)),
                ('mt_nerve_conduction_study_lowerLimb', models.BooleanField(default=False)),
                ('mt_nerve_conduction_study_reducedMUAPAmplitude', models.BooleanField(default=False)),
                ('mt_nerve_conduction_study_shortMUAPDuration', models.BooleanField(default=False)),
                ('mt_nerve_conduction_study_decreasedConductionVelocity', models.BooleanField(default=False)),
                ('mt_nerve_conduction_study_increasedDistalLatency', models.BooleanField(default=False)),
                ('mt_nerve_conduction_study_decreasedSNAP', models.BooleanField(default=False)),
                ('mt_nerve_conduction_study_increasedFwaveLatency', models.BooleanField(default=False)),
                ('mt_Any_other_investigations', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_muscle_biopsy', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_blood_gas_metabolism_acidosis', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_blood_gas_metabolism_acidosis_PH', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_blood_gas_metabolism_acidosis_HCO_3', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_blood_gas_metabolism_acidosis_Anion_gap', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_metabolic_alkalosis', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Hyper_ammonemia', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_Hyper_ammonemia_value', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_Hyper_ammonemia_duration', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_high_lactate', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_high_lactate_csf', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_high_lactate_value', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_high_lactate_csf_value', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_ief_transferring_pattern_type', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal'), ('Not Done', 'Not Done')], max_length=10, null=True)),
                ('mt_ief_transferring_pattern_type_tpye1', models.BooleanField(default=False)),
                ('mt_ief_transferring_pattern_type_tpye2', models.BooleanField(default=False)),
                ('mt_ief_transferring_abnormal_specify', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_urine_ketones', models.CharField(blank=True, choices=[('Present', 'Present'), ('Absent', 'Absent'), ('Not Done', 'Not Done')], max_length=10, null=True)),
                ('mt_urine_ketones_value', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_plasma_ketones', models.CharField(blank=True, choices=[('Present', 'Present'), ('Absent', 'Absent'), ('Not Done', 'Not Done')], max_length=10, null=True)),
                ('mt_plasma_ketones_value', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_plasma_ketones_ffa_ratio', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_plasma_ketones_ffa_ratio_value', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_tms_primary_analyte', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal'), ('Not Done', 'Not Done')], max_length=10, null=True)),
                ('mt_tms_primary_analyte_specify_anlyte', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_tms_primary_analyte_value', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_hplc', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_hplc_specify', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_hplc_value', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_gcms', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal'), ('Not Done', 'Not Done')], max_length=10, null=True)),
                ('mt_gcms_abnormal_specify', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_gcms_abnormal_value', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_orotic_acid', models.CharField(blank=True, choices=[('Present', 'Present'), ('Absent', 'Absent'), ('Not Done', 'Not Done')], max_length=10, null=True)),
                ('mt_vlcfa', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal'), ('Not Done', 'Not Done')], max_length=10, null=True)),
                ('mt_vlcfa_abnormal_specify', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_succinyl_acetone_status', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal'), ('Not Done', 'Not Done')], max_length=10, null=True)),
                ('mt_succinyl_acetone_abnormal_specify', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_csf', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('mt_csf_other', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_csf_status', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal'), ('Not Done', 'Not Done')], max_length=100, null=True)),
                ('mt_csf_abnormal_specify_umol_l', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_csf_abnormal_specify_mg_dl', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_csf_abnormal_specify_ug_l', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_csf_abnormal_specify_nmol_l', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_enzyme_analusis_lab_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_enzyme_analusis', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_enzyme_analusis_ref_range', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_enzyme_analusis_normal_control', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_enzyme_analusis_normal_range', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_csf_amino_acid', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_csf_glucose', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_csf_lactose', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_csf_protien', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_csf_nurotransonitres', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_csf_porphyrins', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_csf_purine', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_csf_pyrinidies', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_csf_glycine', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_csf_others', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_enzyme_analusis_sample_dbs_blood', models.CharField(blank=True, choices=[('Leukocyte', 'Leukocyte'), ('DBS', 'DBS'), ('Blood', 'Blood'), ('Plasma', 'Plasma'), ('Serum', 'Serum'), ('Skin fibroblast', 'Skin fibroblast')], max_length=100, null=True)),
                ('mt_enzyme_analusis_value', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_enzyme_analusis_sample_dbs_blood_date', models.DateField(blank=True, null=True)),
                ('mt_enzyme_analusis_upload_report', models.FileField(blank=True, null=True, upload_to='uploads/%Y/%m/%d/')),
                ('mt_Causative_DNA_sequence_variat', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('mt_molecular_upload', models.FileField(blank=True, null=True, upload_to='uploads/%Y/%m/%d/')),
                ('mt_Patient_molecular', models.CharField(blank=True, max_length=100, null=True)),
                ('mt_Gene_molecula', models.CharField(blank=True, max_length=100, null=True)),
                ('mt_trans_molecul', models.CharField(blank=True, max_length=100, null=True)),
                ('mt_mul_dna1', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_mul_pro1', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_mul_var1', models.CharField(blank=True, choices=[('Novel', 'Novel '), ('Reported', 'Reported')], max_length=100, null=True)),
                ('mt_mul_zygo1', models.CharField(blank=True, choices=[('Homozygous', 'Homozygous '), ('Heterozygous', 'Heterozygous'), ('Hemizygous', 'Hemizygous')], max_length=100, null=True)),
                ('mt_mul_var_cla1', models.CharField(blank=True, choices=[('Pathogenic ', 'Pathogenic '), ('Likely Pathogenic', 'Likely Pathogenic'), ('Variant of uncertain significance ', 'Variant of uncertain significance')], max_length=100, null=True)),
                ('mt_mul_seg', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('mt_mul_dna2', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_mul_pro2', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_mul_var2', models.CharField(blank=True, choices=[('Novel', 'Novel '), ('Reported', 'Reported')], max_length=100, null=True)),
                ('mt_mul_var_cla2', models.CharField(blank=True, choices=[('Pathogenic ', 'Pathogenic '), ('Likely Pathogenic', 'Likely Pathogenic'), ('Variant of uncertain significance ', 'Variant of uncertain significance')], max_length=100, null=True)),
                ('mt_mul_zygo2', models.CharField(blank=True, choices=[('Homozygous', 'Homozygous '), ('Heterozygous', 'Heterozygous'), ('Hemizygous', 'Hemizygous')], max_length=100, null=True)),
                ('mt_father', models.CharField(blank=True, max_length=100, null=True)),
                ('mt_mother', models.CharField(blank=True, max_length=100, null=True)),
                ('mt_dietary_managment', models.CharField(blank=True, choices=[('0-6 months', '0-6 months'), ('6-12 months', '6-12 months'), ('1-5 years', '1-5 years'), ('>5 years', '>5 years')], max_length=30, null=True)),
                ('mt_dietary_managment_1', models.BooleanField(default=False)),
                ('mt_dietary_managment_2', models.BooleanField(default=False)),
                ('mt_dietary_managment_3', models.BooleanField(default=False)),
                ('mt_dietary_managment_4', models.BooleanField(default=False)),
                ('mt_dietary_managment_type_of_diet_1', models.BooleanField(default=False)),
                ('mt_dietary_managment_type_of_diet_2', models.BooleanField(default=False)),
                ('mt_dietary_managment_type_of_diet_3', models.BooleanField(default=False)),
                ('mt_dietary_managment_type_of_diet_4', models.BooleanField(default=False)),
                ('mt_dietary_managment_type_of_diet_5', models.BooleanField(default=False)),
                ('mt_dietary_managment_type_of_diet_6', models.BooleanField(default=False)),
                ('mt_special_diet', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_special_diet_specify', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_liver_transplantation', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_kidney_transplantation', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_heart_transplantation', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_lung_transplantation', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_calcium_multivitamin_supplements', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_regular_physiotherapy', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_any_ocular_medication', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_CPAP_BiPAP_sleep_apnea', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_any_other', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_any_other_specify', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_any_other_special_drug', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mt_any_other_special_drug_1', models.BooleanField(default=False)),
                ('mt_any_other_special_drug_2', models.BooleanField(default=False)),
                ('mt_any_other_special_drug_3', models.BooleanField(default=False)),
                ('mt_any_other_special_drug_4', models.BooleanField(default=False)),
                ('mt_any_other_special_drug_5', models.BooleanField(default=False)),
                ('mt_any_other_special_drug_6', models.BooleanField(default=False)),
                ('mt_any_other_special_drug_7', models.BooleanField(default=False)),
                ('mt_any_other_special_drug_8', models.BooleanField(default=False)),
                ('mt_any_other_special_drug_9', models.BooleanField(default=False)),
                ('mt_any_other_special_drug_10', models.BooleanField(default=False)),
                ('mt_any_other_special_drug_11', models.BooleanField(default=False)),
                ('mt_any_other_special_drug_12', models.BooleanField(default=False)),
                ('mt_any_other_special_drug_13', models.BooleanField(default=False)),
                ('mt_any_other_special_drug_14', models.BooleanField(default=False)),
                ('mt_any_other_special_drug_specify', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_Final_Diagnosis', models.CharField(blank=True, choices=[('Organic acidemia', 'Organic acidemia'), ('Aminoacidpathies', 'Aminoacidpathies'), ('Urea cycle defects', 'Urea cycle defects'), ('Vitamin/cofactor', 'Vitamin/cofactor'), ('Fatty acid oxidation defects/Carnitine', 'Fatty acid oxidation defects/Carnitine'), ('Metal related', 'Metal related'), ('Carbohydrate disorders', 'Carbohydrate disorders'), ('Congenital disorder of glycosylation', 'Congenital disorder of glycosylation'), ('Peroxisomal disorder', 'Peroxisomal disorder'), ('Mitochondrial', 'Mitochondrial'), ('Neurotransmitter defects', 'Neurotransmitter defects'), ('Others', 'Others')], max_length=50, null=True)),
                ('organic_cat', models.CharField(blank=True, choices=[('Methylmalonic acidemia', 'Methylmalonic acidemia'), ('Propionic acidemia', 'Propionic acidemia'), ('Isovaleric acidemia', 'Isovaleric acidemia'), ('Glutaric acidemia', 'Glutaric acidemia'), ('others', 'others')], max_length=50, null=True)),
                ('organic_cat_other', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('aminoacidpathies_cat', models.CharField(blank=True, choices=[('Maple syrup urine disease', 'Maple syrup urine disease'), (' Tyrosinemia 1', ' Tyrosinemia 1'), ('Classical\xa0Homocystinuria', 'Classical\xa0Homocystinuria'), ('Phenylketonuria', 'Phenylketonuria'), ('Alkaptonuria', 'Alkaptonuria'), ('Others such as serine, asparagine, BCAA kinase', 'Others such as serine, asparagine, BCAA kinase'), ('Others', 'Others')], max_length=50, null=True)),
                ('aminoacidpathies_cat_BCAA', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('aminoacidpathies_cat_other', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('urea_cat', models.CharField(blank=True, choices=[('Citrullinemia 1', 'Citrullinemia 1'), ('Citrullinemia II', 'Citrullinemia II'), ('Ornithine transcarbomylase deficiency', 'Ornithine transcarbomylase deficiency'), ('ASL deficiency', 'ASL deficiency'), ('Others (NAGS, CPS, HHH, OAT, CAVA, LPI, etc)', 'Others (NAGS, CPS, HHH, OAT, CAVA, LPI, etc)')], max_length=50, null=True)),
                ('urea_cat_NAGS', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('urea_cat_other', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('vitamin_cat', models.CharField(blank=True, choices=[('Cobalamin disorder', 'Cobalamin disorder'), ('Folate', 'Folate'), ('Biotin', 'Biotin'), ('Pyridoxine', 'Pyridoxine'), ('Others', 'Others')], max_length=50, null=True)),
                ('vitamin_cobalamin', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('vitamin_folate', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('vitamin_biotin', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('vitamin_pyridoxine', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('vitamin_other', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('fatty_cat', models.CharField(blank=True, choices=[('MCAD', 'MCAD'), ('LCHAD', 'LCHAD'), ('Others', 'Others')], max_length=50, null=True)),
                ('fatty_cat_other', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('metal_cat', models.CharField(blank=True, choices=[('Wilson disease', 'Wilson disease'), ('Menke Kinky hair disease', 'Menke Kinky hair disease'), ('Others', 'Others')], max_length=50, null=True)),
                ('metal_cat_other', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('carbohydrate_cat', models.CharField(blank=True, choices=[('Classical Galactosemia ', 'Classical Galactosemia '), ('Herediatry Fructose intolerance', 'Herediatry Fructose intolerance'), ('Fructose 1,6 bisphosphatase deficiency ', 'Fructose 1,6 bisphosphatase deficiency '), ('Glycogen storage disorders', 'Glycogen storage disorders')], max_length=50, null=True)),
                ('Carbohydrate_sub3', models.CharField(blank=True, choices=[('1a', '1a'), ('1b', '1b'), ('III', 'III'), ('IV', 'IV'), ('VI', 'VI'), ('VII', 'VII'), ('IX', 'IX')], max_length=50, null=True)),
                ('Congenital_disorder', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('Peroxisomal_disorder_specify', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mitochondrial_cat', models.CharField(blank=True, choices=[('Nuclear', 'Nuclear'), ('mitochondrial ', 'mitochondrial'), ('Others', 'Others')], max_length=50, null=True)),
                ('mitochondrial_nuclear', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mitochondrial_mitochondrial', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mitochondrial_other', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('Neurotransmitter_cat', models.CharField(blank=True, choices=[('Pterin disorders', 'Pterin disorders'), ('Tyrosine Hydroxylase Def', 'Tyrosine Hydroxylase Def'), ('Others', 'Others')], max_length=50, null=True)),
                ('Neurotransmitter_pterin', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('Neurotransmitter_tyrosine', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('Neurotransmitter_other', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_diag_other', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_filled_by_deo_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_clinician_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mt_date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('mt_date_filled', models.DateField(blank=True, null=True)),
                ('mt_Final_Outcome', models.CharField(blank=True, choices=[('Death', 'Death'), ('Alive', 'Alive'), ('Follow up required', 'Follow up required'), ('Lost to follow up', 'Lost to follow up'), ('Unknown', 'Unknown')], max_length=50, null=True)),
                ('mt_death_cause', models.CharField(blank=True, max_length=50, null=True)),
                ('mt_age_timedeath', models.CharField(blank=True, max_length=50, null=True)),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='patient_metabolism', to='iem.profile_metabolism')),
                ('register', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.register')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
