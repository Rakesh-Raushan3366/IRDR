# Generated by Django 4.0.3 on 2023-06-06 10:11

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '0011_opd_attendance_pre_total'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='profile_smallmolecule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('small_final_diagnosis', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('small_date_of_records', models.DateField(blank=True, null=True)),
                ('small_date_of_clinical_exam', models.DateField(blank=True, null=True)),
                ('small_date_of_birth', models.DateField(blank=True, null=True)),
                ('small_patient_name', models.CharField(max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('small_father_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('small_mother_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('small_paitent_id_yes_no', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('small_paitent_id', models.CharField(blank=True, choices=[('Aadhar card', 'Aadhar card'), ('Driving license', 'Driving license'), ('Voter id', 'Voter id'), ('Rations card', 'Rations card'), ('PAN card', 'PAN card'), ('BPL card', 'BPL card'), ('SECC card', 'SECC card'), ('Aabha Id', 'Aabha Id')], max_length=100, null=True)),
                ('small_patient_id_no', models.CharField(blank=True, max_length=100, null=True, unique=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('small_patient_age', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('small_father_mother_id', models.CharField(blank=True, choices=[('Aadhar card', 'Aadhar card'), ('Driving license', 'Driving license'), ('Voter id', 'Voter id'), ('Rations card', 'Rations card'), ('PAN card', 'PAN card'), ('BPL card', 'BPL card'), ('SECC card', 'SECC card'), ('Aabha Id', 'Aabha Id')], max_length=100, null=True)),
                ('small_father_mother_no', models.PositiveBigIntegerField(blank=True, null=True, unique=True)),
                ('small_mother_adhaar_no', models.PositiveBigIntegerField(blank=True, null=True, unique=True)),
                ('small_permanent_addr', models.CharField(blank=True, max_length=500, null=True, validators=[django.core.validators.MaxLengthValidator(500)])),
                ('small_city_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('small_country_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('small_mother_mobile_no', models.PositiveBigIntegerField(null=True, unique=True)),
                ('small_father_mobile_no', models.PositiveBigIntegerField(blank=True, null=True)),
                ('small_land_line_no', models.PositiveBigIntegerField(blank=True, null=True)),
                ('small_email', models.EmailField(blank=True, max_length=300, null=True)),
                ('small_religion', models.CharField(blank=True, choices=[('Hindu', 'Hindu'), ('Muslim', 'Muslim'), ('Christian', 'Christian'), ('Sikh', 'Sikh'), ('Others', 'Others')], max_length=100, null=True)),
                ('small_caste', models.CharField(blank=True, choices=[('Scheduled caste', 'Scheduled caste'), ('Scheduled tribe', 'Scheduled tribe'), ('Others', 'Others')], max_length=100, null=True)),
                ('small_referred_status', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('small_referred_by', models.CharField(blank=True, choices=[('General practitioner', 'General practitioner'), ('Physician', 'Physician'), ('Neurologist', 'Neurologist'), ('Any others', 'Any others')], max_length=100, null=True)),
                ('small_referred_by_desc', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('small_gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', ' Female'), ('Transgender', 'Transgender')], max_length=100, null=True)),
                ('small_consent_given', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('small_consent_upload', models.FileField(blank=True, null=True, upload_to='uploads/%Y/%m/%d/')),
                ('small_assent_given', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('small_assent_upload', models.FileField(blank=True, null=True, upload_to='uploads/%Y/%m/%d/')),
                ('small_hospital_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('small_hospital_reg_no', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('small_icmr_unique_no', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('small_date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('quality_status', models.CharField(blank=True, choices=[('Pending', 'Pending'), ('Resubmitted', 'Resubmitted'), ('Completed', 'Completed')], max_length=20, null=True)),
                ('quality_result', models.CharField(blank=True, choices=[('Pass', 'Pass'), ('Fail', 'Fail')], max_length=10, null=True)),
                ('quality_reason', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('uniqueId', models.CharField(blank=True, max_length=500, null=True)),
                ('complete', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Na', 'Na')], default='No', max_length=10, null=True)),
                ('qa_register', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='qa_register_small', to='account.register')),
                ('qa_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='qa_user_small', to=settings.AUTH_USER_MODEL)),
                ('register', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.register')),
                ('small_district', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.district', verbose_name=' district')),
                ('small_state', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.state', verbose_name=' state')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='demographic_smallmolecule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('head_circumference', models.CharField(blank=True, max_length=200, null=True)),
                ('age_at_first_symptom', models.CharField(blank=True, max_length=50, null=True)),
                ('visual_problem', models.CharField(blank=True, choices=[('blindness', 'blindness'), ('cataract', 'cataract'), ('retinitis pigmentosa', 'retinitis pigmentosa'), ('coloboma', 'coloboma'), ('optic atrophy', 'optic atrophy'), ('cherry red pot', 'cherry red pot')], max_length=200, null=True)),
                ('any_malformation', models.CharField(blank=True, choices=[('limb', 'limb'), ('clift lip', 'clift lip'), ('palate', 'palate'), ('others', 'others')], max_length=200, null=True)),
                ('developmental_delay', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=50, null=True)),
                ('developmental_findings', models.CharField(blank=True, max_length=50, null=True)),
                ('vomiting', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=50, null=True)),
                ('vomiting_finding', models.CharField(blank=True, max_length=50, null=True)),
                ('loose_stools', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=50, null=True)),
                ('stools_findings', models.CharField(blank=True, max_length=50, null=True)),
                ('pneumonia', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=50, null=True)),
                ('pneumonia_findings', models.CharField(blank=True, max_length=50, null=True)),
                ('fever', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=50, null=True)),
                ('fever_findings', models.CharField(blank=True, max_length=50, null=True)),
                ('lethargy', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=50, null=True)),
                ('lethargy_findings', models.CharField(blank=True, max_length=50, null=True)),
                ('seizures', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=50, null=True)),
                ('seizures_findings', models.CharField(blank=True, max_length=50, null=True)),
                ('abdominal_distention', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=50, null=True)),
                ('abdominal_distention_findings', models.CharField(blank=True, max_length=50, null=True)),
                ('history_admission', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=50, null=True)),
                ('history_findings', models.CharField(blank=True, max_length=50, null=True)),
                ('any_surgery', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=50, null=True)),
                ('surgery_findings', models.CharField(blank=True, max_length=50, null=True)),
                ('aversion_sweet_protein', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=50, null=True)),
                ('sweet_protein_findings', models.CharField(blank=True, max_length=50, null=True)),
                ('encephalopathy', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=50, null=True)),
                ('encephalopathy_findings', models.CharField(blank=True, max_length=100, null=True)),
                ('deafness', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=50, null=True)),
                ('deafness_findings', models.CharField(blank=True, max_length=100, null=True)),
                ('extra_pyramidal_symp', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=50, null=True)),
                ('extra_pyramidal_symp_findings', models.CharField(blank=True, max_length=100, null=True)),
                ('hypotonia', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=50, null=True)),
                ('hypotonia_findings', models.CharField(blank=True, max_length=100, null=True)),
                ('reflexes', models.CharField(blank=True, choices=[('Absent', 'Absent'), ('Diminished', 'Diminished'), ('Brisk', 'Brisk'), ('Normal', 'Normal')], max_length=100, null=True)),
                ('reflexes_findings', models.CharField(blank=True, max_length=100, null=True)),
                ('hypertonia', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=50, null=True)),
                ('hypertonia_findings', models.CharField(blank=True, max_length=100, null=True)),
                ('facial_dysmorphism', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=50, null=True)),
                ('facial_dysmorphism_findings', models.CharField(blank=True, max_length=100, null=True)),
                ('congential_heart_disease', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=50, null=True)),
                ('congential_heart_disease_findings', models.CharField(blank=True, max_length=100, null=True)),
                ('cardiomyopathy', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=50, null=True)),
                ('cardiomyopathy_findings', models.CharField(blank=True, max_length=100, null=True)),
                ('hepatomegaly', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=50, null=True)),
                ('hepatomegaly_findings', models.CharField(blank=True, max_length=100, null=True)),
                ('splenomegaly', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=50, null=True)),
                ('splenomegaly_findings', models.CharField(blank=True, max_length=100, null=True)),
                ('pigmentary', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=50, null=True)),
                ('pigmentary_findings', models.CharField(blank=True, max_length=100, null=True)),
                ('deranged_LFT', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=50, null=True)),
                ('deranged_LFT_findings', models.CharField(blank=True, max_length=100, null=True)),
                ('deranged_RFT', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=50, null=True)),
                ('deranged_RFT_findings', models.CharField(blank=True, max_length=100, null=True)),
                ('hypoglycemia', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=50, null=True)),
                ('hypoglycemia_findings', models.CharField(blank=True, max_length=100, null=True)),
                ('metabolic_acidosis', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=50, null=True)),
                ('metabolic_acidosis_findings', models.CharField(blank=True, max_length=100, null=True)),
                ('metabolic_alkalosis', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=50, null=True)),
                ('metabolic_alkalosis_findings', models.CharField(blank=True, max_length=100, null=True)),
                ('hyper_ammonia', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=50, null=True)),
                ('hyper_ammonia_findings', models.CharField(blank=True, max_length=100, null=True)),
                ('high_lactate', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=50, null=True)),
                ('high_lactate_findings', models.CharField(blank=True, max_length=100, null=True)),
                ('urine_ketones', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=50, null=True)),
                ('urine_ketones_findings', models.CharField(blank=True, max_length=100, null=True)),
                ('cherry_red_spot', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=50, null=True)),
                ('cherry_red_spot_findings', models.CharField(blank=True, max_length=100, null=True)),
                ('retinitis_pigmentosa', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=50, null=True)),
                ('retinitis_pigmentosa_findings', models.CharField(blank=True, max_length=100, null=True)),
                ('optic_atrophy', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=50, null=True)),
                ('optic_atrophy_findings', models.CharField(blank=True, max_length=100, null=True)),
                ('mechanical_ventilation', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=50, null=True)),
                ('mechanical_ventilation_findings', models.CharField(blank=True, max_length=100, null=True)),
                ('dialysis', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=50, null=True)),
                ('dialysis_findings', models.CharField(blank=True, max_length=100, null=True)),
                ('CT_brain', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal'), ('Not Done', 'Not Done')], max_length=100, null=True)),
                ('CT_brain_date', models.DateField(blank=True, null=True)),
                ('CT_brain_age', models.CharField(blank=True, max_length=100, null=True)),
                ('mri_brain', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal'), ('Not Done', 'Not Done')], max_length=100, null=True)),
                ('mri_brain_date', models.DateField(blank=True, null=True)),
                ('mri_brain_age', models.CharField(blank=True, max_length=100, null=True)),
                ('mrs_brain', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal'), ('Not Done', 'Not Done')], max_length=100, null=True)),
                ('mrs_brain_date', models.DateField(blank=True, null=True)),
                ('mrs_brain_age', models.CharField(blank=True, max_length=100, null=True)),
                ('other_info', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=50, null=True)),
                ('other_info_date', models.DateField(blank=True, null=True)),
                ('other_info_age', models.CharField(blank=True, max_length=100, null=True)),
                ('tms', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=50, null=True)),
                ('tms_date', models.DateField(blank=True, null=True)),
                ('tms_age', models.CharField(blank=True, max_length=100, null=True)),
                ('regression', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=50, null=True)),
                ('regression_findings', models.CharField(blank=True, max_length=100, null=True)),
                ('distonia_abnormal_movement', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=50, null=True)),
                ('distonia_abnormal_findings', models.CharField(blank=True, max_length=100, null=True)),
                ('high_cpk', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=50, null=True)),
                ('high_cpk_findings', models.CharField(blank=True, max_length=100, null=True)),
                ('ms_ms', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal'), ('Not Done', 'Not Done')], max_length=100, null=True)),
                ('ms_date', models.DateField(blank=True, null=True)),
                ('ms_age', models.CharField(blank=True, max_length=100, null=True)),
                ('gcms', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal'), ('Not Done', 'Not Done')], max_length=100, null=True)),
                ('gcms_date', models.DateField(blank=True, null=True)),
                ('gcms_age', models.CharField(blank=True, max_length=100, null=True)),
                ('enzyme_assay', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal'), ('Not Done', 'Not Done')], max_length=100, null=True)),
                ('enzyme_assay_date', models.DateField(blank=True, null=True)),
                ('enzyme_assay_age', models.CharField(blank=True, max_length=100, null=True)),
                ('dna_storage', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=50, null=True)),
                ('dna_storage_findings', models.CharField(blank=True, max_length=100, null=True)),
                ('photos', models.CharField(blank=True, choices=[('Patient', 'Patient'), ('X Ray', 'X Ray'), ('MRI', 'MRI')], max_length=100, null=True)),
                ('photos_specify', models.CharField(blank=True, max_length=100, null=True)),
                ('generic_analysis', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=50, null=True)),
                ('generic_analysis_findings', models.CharField(blank=True, max_length=100, null=True)),
                ('final_dagnosis', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=50, null=True)),
                ('final_dagnosis_findings', models.CharField(blank=True, max_length=100, null=True)),
                ('quantitative_plasma', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal'), ('Not Done', 'Not Done')], max_length=100, null=True)),
                ('quantitative_plasma_date', models.DateField(blank=True, null=True)),
                ('quantitative_plasma_age', models.CharField(blank=True, max_length=100, null=True)),
                ('quantitative_csf', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal'), ('Not Done', 'Not Done')], max_length=100, null=True)),
                ('quantitative_csf_date', models.DateField(blank=True, null=True)),
                ('quantitative_csf_age', models.CharField(blank=True, max_length=100, null=True)),
                ('muscle_biopsy', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal'), ('Not Done', 'Not Done')], max_length=100, null=True)),
                ('muscle_biopsy_date', models.DateField(blank=True, null=True)),
                ('muscle_biopsy_age', models.CharField(blank=True, max_length=100, null=True)),
                ('ncv', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal'), ('Not Done', 'Not Done')], max_length=100, null=True)),
                ('ncv_date', models.DateField(blank=True, null=True)),
                ('ncv_age', models.CharField(blank=True, max_length=100, null=True)),
                ('ief_cdg', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal'), ('Not Done', 'Not Done')], max_length=100, null=True)),
                ('ief_cdg_date', models.DateField(blank=True, null=True)),
                ('ief_cdg_age', models.CharField(blank=True, max_length=100, null=True)),
                ('glycine', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal'), ('Not Done', 'Not Done')], max_length=100, null=True)),
                ('glycine_date', models.DateField(blank=True, null=True)),
                ('glycine_age', models.CharField(blank=True, max_length=100, null=True)),
                ('molecular_studies', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=50, null=True)),
                ('molecular_studies_date', models.DateField(blank=True, null=True)),
                ('molecular_studies_place', models.CharField(blank=True, max_length=50, null=True)),
                ('upload_studies', models.FileField(blank=True, null=True, upload_to='uploads/%Y/%m/%d/')),
                ('Final_Outcome', models.CharField(blank=True, choices=[('Death', 'Death'), ('Alive', 'Alive'), ('Follow up required', 'Follow up required'), ('Lost to follow up', 'Lost to follow up'), ('Unknown', 'Unknown')], max_length=50, null=True)),
                ('death_cause', models.CharField(blank=True, max_length=50, null=True)),
                ('age_timedeath', models.CharField(blank=True, max_length=50, null=True)),
                ('sm_date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='patient_small', to='smallmolecule.profile_smallmolecule')),
                ('register', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.register')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
